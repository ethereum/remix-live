{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/app/AppContext.tsx","webpack:///./src/app/RemixPlugin.tsx","webpack:///./src/app/app.tsx","webpack:///./src/app/components/HeaderWithSettings.tsx","webpack:///./src/app/components/SubmitButton.tsx","webpack:///./src/app/components/index.ts","webpack:///./src/app/hooks/useLocalStorage.tsx","webpack:///./src/app/layouts/Default.tsx","webpack:///./src/app/layouts/index.ts","webpack:///./src/app/routes.tsx","webpack:///./src/app/utils/index.ts","webpack:///./src/app/utils/scripts.ts","webpack:///./src/app/utils/utilities.ts","webpack:///./src/app/utils/verify.ts","webpack:///./src/app/views/CaptureKeyView.tsx","webpack:///./src/app/views/ErrorView.tsx","webpack:///./src/app/views/HomeView.tsx","webpack:///./src/app/views/ReceiptsView.tsx","webpack:///./src/app/views/VerifyView.tsx","webpack:///./src/app/views/index.ts","webpack:///./src/main.tsx","webpack:///./src/app/App.css?4855"],"sourcesContent":["import React from \"react\"\nimport { PluginClient } from \"@remixproject/plugin\"\n\nimport { Receipt, ThemeType } from \"./types\"\n\nexport const AppContext = React.createContext({\n  apiKey: \"\",\n  setAPIKey: (value: string) => {\n    console.log(\"Set API Key from Context\")\n  },\n  clientInstance: {} as PluginClient,\n  receipts: [] as Receipt[],\n  setReceipts: (receipts: Receipt[]) => {\n    console.log(\"Calling Set Receipts\")\n  },\n  contracts: [] as string[],\n  setContracts: (contracts: string[]) => {\n    console.log(\"Calling Set Contract Names\")\n  },\n  themeType: \"dark\" as ThemeType,\n  setThemeType: (themeType: ThemeType) => {\n    console.log(\"Calling Set Theme Type\")\n  },\n})\n","import { PluginClient } from '@remixproject/plugin';\nimport { verify, EtherScanReturn } from './utils/verify';\nimport { getReceiptStatus, getEtherScanApi, getNetworkName } from './utils';\n\nexport class RemixClient extends PluginClient {\n\n    loaded() {\n        return this.onload()\n    }\n  \n    async verify (apiKey: string, contractAddress: string, contractArguments: string, contractName: string, compilationResultParam: any) {\n        const result = await verify(apiKey, contractAddress, contractArguments, contractName, compilationResultParam, this,\n            (value: EtherScanReturn) => {}, (value: string) => {})    \n        return result\n    }\n\n    async receiptStatus (receiptGuid: string, apiKey: string) {\n      try {\n        const network = await getNetworkName(this)\n        if (network === \"vm\") {\n          throw new Error(\"Cannot check the receipt status in the selected network\")\n        }\n        const etherscanApi = getEtherScanApi(network)\n        const receiptStatus = await getReceiptStatus(receiptGuid, apiKey, etherscanApi)\n        return {\n          message: receiptStatus.result,\n          succeed: receiptStatus.status === '0'  ? false : true\n        }\n      } catch (e: any){\n        return {\n          status: 'error',\n          message: e.message,\n          succeed: false\n        }\n      }      \n    }\n}\n","import React, { useState, useEffect, useRef } from \"react\"\n\nimport {\n  CompilationFileSources,\n  CompilationResult,\n} from \"@remixproject/plugin-api\"\n\nimport { RemixClient } from \"./RemixPlugin\";\nimport { createClient } from \"@remixproject/plugin-webview\";\n\nimport { AppContext } from \"./AppContext\"\nimport { DisplayRoutes } from \"./routes\"\n\nimport { useLocalStorage } from \"./hooks/useLocalStorage\"\n\nimport { getReceiptStatus, getEtherScanApi, getNetworkName } from \"./utils\"\nimport { Receipt, ThemeType } from \"./types\"\n\nimport \"./App.css\"\n\nexport const getNewContractNames = (compilationResult: CompilationResult) => {\n  const compiledContracts = compilationResult.contracts\n  let result: string[] = []\n\n  for (const file of Object.keys(compiledContracts)) {\n    const newContractNames = Object.keys(compiledContracts[file])\n    result = [...result, ...newContractNames]\n  }\n\n  return result\n}\n\nconst App = () => {\n  const [apiKey, setAPIKey] = useLocalStorage(\"apiKey\", \"\")\n  const [clientInstance, setClientInstance] = useState(undefined as any)\n  const [receipts, setReceipts] = useLocalStorage(\"receipts\", [])\n  const [contracts, setContracts] = useState([] as string[])\n  const [themeType, setThemeType] = useState(\"dark\" as ThemeType)\n\n  const clientInstanceRef = useRef(clientInstance)\n  clientInstanceRef.current = clientInstance\n  const contractsRef = useRef(contracts)\n  contractsRef.current = contracts\n\n  useEffect(() => {\n    const client = new RemixClient()\n    createClient(client)\n    const loadClient = async () => {\n      await client.onload()\n      setClientInstance(client)\n      client.on(\"solidity\",\n        \"compilationFinished\",\n        (\n          fileName: string,\n          source: CompilationFileSources,\n          languageVersion: string,\n          data: CompilationResult\n        ) => {\n          const newContractsNames = getNewContractNames(data)\n\n          const newContractsToSave: string[] = [\n            ...contractsRef.current,\n            ...newContractsNames,\n          ]\n\n          const uniqueContracts: string[] = [...new Set(newContractsToSave)]\n\n          setContracts(uniqueContracts)\n        }\n      )\n\n      //const currentTheme = await client.call(\"theme\", \"currentTheme\")\n      //setThemeType(currentTheme.quality)\n      //client.on(\"theme\", \"themeChanged\", (theme) => {\n      //  setThemeType(theme.quality)\n      //})\n    }\n\n    loadClient()\n  }, [])\n\n  useEffect(() => {\n    if (!clientInstance) {\n      return\n    }\n\n    const receiptsNotVerified: Receipt[] = receipts.filter((item: Receipt) => {\n      return item.status !== \"Verified\"\n    })\n\n    if (receiptsNotVerified.length > 0) {\n      const timer1 = setInterval(() => {\n        for (const item in receiptsNotVerified) {\n          \n        }\n        receiptsNotVerified.forEach(async (item) => {\n          if (!clientInstanceRef.current) {\n            return {}\n          }\n          const network = await getNetworkName(clientInstanceRef.current)\n          if (network === \"vm\") {\n            return {}\n          }\n          const status = await getReceiptStatus(\n            item.guid,\n            apiKey,\n            getEtherScanApi(network)\n          )\n          if (status.result === \"Pass - Verified\") {\n            const newReceipts = receipts.map((currentReceipt: Receipt) => {\n              if (currentReceipt.guid === item.guid) {\n                return {\n                  ...currentReceipt,\n                  status: \"Verified\",\n                }\n              }\n              return currentReceipt\n            })\n\n            clearInterval(timer1)\n\n            setReceipts(newReceipts)\n\n            return () => {\n              clearInterval(timer1)\n            }\n          }\n          return {}\n        })\n      }, 5000)\n    }\n  }, [receipts, clientInstance, apiKey, setReceipts])\n\n  return (\n    <AppContext.Provider\n      value={{\n        apiKey,\n        setAPIKey,\n        clientInstance,\n        receipts,\n        setReceipts,\n        contracts,\n        setContracts,\n        themeType,\n        setThemeType,\n      }}\n    >\n      <DisplayRoutes />\n    </AppContext.Provider>\n  )\n}\n\nexport default App\n","import React from \"react\"\n\nimport { NavLink } from \"react-router-dom\"\nimport { AppContext } from \"../AppContext\"\nimport { ThemeType } from \"../types\"\n\ninterface Props {\n  title?: string\n  showBackButton?: boolean\n  from: string\n}\n\ninterface IconProps {\n  from: string\n  themeType: ThemeType\n}\n\nconst HomeIcon: React.FC<IconProps> = ({ from, themeType }: IconProps) => {\n  return (\n    <NavLink\n      data-id=\"home\"\n      data-toggle=\"tooltip\"\n      data-placement=\"top\"\n      title=\"Home\"\n      to={{\n        pathname: \"/\"\n      }}\n      state={ from }\n      style={isActive => {\n        return {\n          ...(isActive ? getStyleFilterIcon(themeType) : {}), ...{ marginRight: \"0.4em\" }\n        }\n      }}\n    >\n      <svg\n        style={{ filter: \"invert(0.5)\" }}\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 16 16\"\n        className=\"bi bi-house-door-fill\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path d=\"M6.5 10.995V14.5a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5v-7a.5.5 0 0 1 .146-.354l6-6a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 .146.354v7a.5.5 0 0 1-.5.5h-4a.5.5 0 0 1-.5-.5V11c0-.25-.25-.5-.5-.5H7c-.25 0-.5.25-.5.495z\" />\n        <path\n          fillRule=\"evenodd\"\n          d=\"M13 2.5V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z\"\n        />\n      </svg>\n    </NavLink>\n  )\n}\n\nconst SettingsIcon: React.FC<IconProps> = ({ from, themeType }: IconProps) => {\n  return (\n    <NavLink\n      data-toggle=\"tooltip\"\n      data-placement=\"top\"\n      title=\"Settings\"\n      to={{\n        pathname: \"/settings\",\n      }}\n      state= {from}\n      style={isActive => {\n        return {\n          ...(isActive ? getStyleFilterIcon(themeType) : {}), ...{ marginRight: \"0.4em\" }\n        }\n      }}\n    >\n      <svg\n        style={{ filter: \"invert(0.5)\" }}\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 16 16\"\n        className=\"bi bi-gear-fill\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 0 0-5.86 2.929 2.929 0 0 0 0 5.858z\"\n        />\n\n        <path\n          fillRule=\"evenodd\"\n          d=\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 0 0-5.86 2.929 2.929 0 0 0 0 5.858z\"\n        />\n      </svg>\n    </NavLink>\n  )\n}\n\nconst getStyleFilterIcon = (themeType: ThemeType) => {\n  const invert = themeType === \"dark\" ? 1 : 0\n  const brightness = themeType === \"dark\" ? \"150\" : \"0\" // should be >100 for icons with color\n  return {\n    filter: `invert(${invert}) grayscale(1) brightness(${brightness}%)`,\n  }\n}\n\nconst ReceiptsIcon: React.FC<IconProps> = ({ from, themeType }: IconProps) => {\n  return (\n    <NavLink      \n      data-toggle=\"tooltip\"\n      data-placement=\"top\"\n      title=\"Receipts\"\n      to={{\n        pathname: \"/receipts\",\n      }}\n      state= { from }\n      style={isActive => {\n        return {\n          ...(isActive ? getStyleFilterIcon(themeType) : {}), ...{ marginRight: \"0.4em\" }\n        }\n      }}\n    >\n      <svg\n        style={{ filter: \"invert(0.5)\" }}\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 16 16\"\n        className=\"bi bi-receipt\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M1.92.506a.5.5 0 0 1 .434.14L3 1.293l.646-.647a.5.5 0 0 1 .708 0L5 1.293l.646-.647a.5.5 0 0 1 .708 0L7 1.293l.646-.647a.5.5 0 0 1 .708 0L9 1.293l.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .801.13l.5 1A.5.5 0 0 1 15 2v12a.5.5 0 0 1-.053.224l-.5 1a.5.5 0 0 1-.8.13L13 14.707l-.646.647a.5.5 0 0 1-.708 0L11 14.707l-.646.647a.5.5 0 0 1-.708 0L9 14.707l-.646.647a.5.5 0 0 1-.708 0L7 14.707l-.646.647a.5.5 0 0 1-.708 0L5 14.707l-.646.647a.5.5 0 0 1-.708 0L3 14.707l-.646.647a.5.5 0 0 1-.801-.13l-.5-1A.5.5 0 0 1 1 14V2a.5.5 0 0 1 .053-.224l.5-1a.5.5 0 0 1 .367-.27zm.217 1.338L2 2.118v11.764l.137.274.51-.51a.5.5 0 0 1 .707 0l.646.647.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.509.509.137-.274V2.118l-.137-.274-.51.51a.5.5 0 0 1-.707 0L12 1.707l-.646.647a.5.5 0 0 1-.708 0L10 1.707l-.646.647a.5.5 0 0 1-.708 0L8 1.707l-.646.647a.5.5 0 0 1-.708 0L6 1.707l-.646.647a.5.5 0 0 1-.708 0L4 1.707l-.646.647a.5.5 0 0 1-.708 0l-.509-.51z\"\n        />\n\n        <path\n          fillRule=\"evenodd\"\n          d=\"M3 4.5a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5zm8-6a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5z\"\n        />\n      </svg>\n    </NavLink>\n  )\n}\nexport const HeaderWithSettings: React.FC<Props> = ({\n  title = \"\",\n  showBackButton = false,\n  from,\n}) => {\n  return (\n    <AppContext.Consumer>\n      {({ themeType }) => (\n        <div>\n          <h6>{title}</h6>\n          <div style={{ float: \"right\" }}>\n            <HomeIcon from={from} themeType={themeType} />\n            <ReceiptsIcon from={from} themeType={themeType} />\n            <SettingsIcon from={from} themeType={themeType} />\n          </div>\n        </div>\n      )}\n    </AppContext.Consumer>\n  )\n}\n","import React from \"react\"\n\ninterface Props {\n  text: string\n  isSubmitting?: boolean\n  dataId?: string\n}\n\nexport const SubmitButton: React.FC<Props> = ({\n  text,\n  dataId,\n  isSubmitting = false,\n}) => {\n  return (\n    <button\n      data-id={dataId}\n      style={{ padding: \"0.25rem 0.4rem\", marginRight: \"0.5em\" }}\n      type=\"submit\"\n      className=\"btn btn-primary\"\n      disabled={isSubmitting}\n    >\n      {!isSubmitting && text}\n\n      {isSubmitting && (\n        <div>\n          <span\n            className=\"spinner-border spinner-border-sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n            style={{ marginRight: \"0.3em\" }}\n          />\n          Verifying... Please wait\n        </div>\n      )}\n    </button>\n  )\n}\n","export { HeaderWithSettings } from \"./HeaderWithSettings\"\nexport { SubmitButton } from \"./SubmitButton\"\n","import { useState } from \"react\"\n\nexport function useLocalStorage(key: string, initialValue: any) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key)\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue\n    } catch (error) {\n      // If error also return initialValue\n      console.error(error)\n      return initialValue\n    }\n  })\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: any) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value\n      // Save state\n      setStoredValue(valueToStore)\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore))\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.error(error)\n    }\n  }\n\n  return [storedValue, setValue]\n}\n","import React, { PropsWithChildren } from \"react\"\n\nimport { HeaderWithSettings } from \"../components\"\n\ninterface Props {\n  from: string\n}\n\nexport const DefaultLayout: React.FC<PropsWithChildren<Props>> = ({\n  children,\n  from,\n}) => {\n  return (\n    <div>\n      <HeaderWithSettings from={from} />\n      {children}\n    </div>\n  )\n}\n","export { DefaultLayout } from \"./Default\"\n","import React from \"react\"\nimport {\n  HashRouter as Router,\n  Route,\n  Routes,\n  RouteProps,\n} from \"react-router-dom\"\n\nimport { ErrorView, HomeView, ReceiptsView, CaptureKeyView } from \"./views\"\nimport { DefaultLayout } from \"./layouts\"\n\ninterface Props extends RouteProps {\n  component: any // TODO: new (props: any) => React.Component\n  from: string\n}\n\nconst RouteWithHeader = ({ component: Component, ...rest }: Props) => {\n  return (\n    <Route\n      {...rest}      \n    >\n      <DefaultLayout {...rest}>\n          <Component />\n        </DefaultLayout>\n    </Route>\n  )\n}\n\nexport const DisplayRoutes = () => (\n  <Router>\n    <Routes>    \n      <Route\n        path=\"/\"\n        element={<DefaultLayout from=\"/\">\n                  <HomeView />\n                </DefaultLayout>} />\n      <Route path=\"/error\"\n      element={<ErrorView />} />\n      <Route\n        path=\"/receipts\"\n        element={<DefaultLayout from=\"/receipts\">\n                  <ReceiptsView />\n                </DefaultLayout>} />\n      <Route\n        path=\"/settings\"\n        element={<DefaultLayout from=\"/settings\">\n                  <CaptureKeyView />\n                </DefaultLayout>} />\n    </Routes>\n  </Router>\n)\n","export * from \"./utilities\"\n","export const verifyScript = `\n/**\n * @param {string} apikey - etherscan api key.\n * @param {string} contractAddress - Address of the contract to verify.\n * @param {string} contractArguments - Parameters used in the contract constructor during the initial deployment. It should be the hex encoded value.\n * @param {string} contractName - Name of the contract\n * @param {string} contractFile - File where the contract is located\n * @returns {{ guid, status, message, succeed }} verification result\n */\nexport const verify = async (apikey: string, contractAddress: string, contractArguments: string, contractName: string, contractFile: string) => {\n    const compilationResultParam = await remix.call('compilerArtefacts' as any, 'getCompilerAbstract', contractFile)\n    console.log('verifying.. ' + contractName)\n    return await remix.call('etherscan' as any,  'verify', apikey, contractAddress, contractArguments, contractName, compilationResultParam)\n}`\n\nexport const receiptGuidScript = `\n/**\n * @param {string} apikey - etherscan api key.\n * @param {string} guid - receipt id.\n * @returns {{ status, message, succeed }} receiptStatus\n */\nexport const receiptStatus = async (apikey: string, guid: string) => {\n    return await remix.call('etherscan' as any,  'receiptStatus', guid, apikey)\n}\n`","import { PluginClient } from \"@remixproject/plugin\"\nimport axios from 'axios'\ntype RemixClient = PluginClient\n\n/*\n  status: 0=Error, 1=Pass \n  message: OK, NOTOK\n  result: explanation\n*/\nexport type receiptStatus = {\n  result: string\n  message: string\n  status: string\n}\n\nexport const getEtherScanApi = (network: string) => {\n  return network === \"main\"\n    ? `https://api.etherscan.io/api`\n    : `https://api-${network}.etherscan.io/api`\n}\n\nexport const getNetworkName = async (client: RemixClient) => {\n  const network = await client.call(\"network\", \"detectNetwork\")\n  if (!network) {\n    throw new Error(\"no known network to verify against\")\n  }\n  return network.name!.toLowerCase()\n}\n\nexport const getReceiptStatus = async (\n  receiptGuid: string,\n  apiKey: string,\n  etherscanApi: string\n): Promise<receiptStatus> => {\n  const params = `guid=${receiptGuid}&module=contract&action=checkverifystatus&apiKey=${apiKey}`\n  try {\n    const response = await axios.get(`${etherscanApi}?${params}`)\n    const { result, message, status } = response.data\n    return {\n      result,\n      message,\n      status,\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n","import { getNetworkName, getEtherScanApi, getReceiptStatus } from \"../utils\"\nimport { CompilationResult } from \"@remixproject/plugin-api\"\nimport { CompilerAbstract } from '@remix-project/remix-solidity'\nimport axios from 'axios'\nimport { PluginClient } from \"@remixproject/plugin\"\n\nconst resetAfter10Seconds = (client: PluginClient, setResults: (value: string) => void) => {\n    setTimeout(() => {\n      client.emit(\"statusChanged\", { key: \"none\" })\n      setResults(\"\")\n    }, 10000)\n  }\n\nexport type EtherScanReturn = {\n    guid: any,\n    status: any,\n}\nexport const verify = async (\n    apiKeyParam: string,\n    contractAddress: string,\n    contractArgumentsParam: string,\n    contractName: string,\n    compilationResultParam: CompilerAbstract, \n    client: PluginClient,\n    onVerifiedContract: (value: EtherScanReturn) => void,\n    setResults: (value: string) => void\n  ) => {\n    const network = await getNetworkName(client)\n    if (network === \"vm\") {\n        return {\n            succeed: false,\n            message: \"Cannot verify in the selected network\"\n        }\n    }\n    const etherscanApi = getEtherScanApi(network)\n\n    try {\n      const contractMetadata = getContractMetadata(\n        // cast from the remix-plugin interface to the solidity one. Should be fixed when remix-plugin move to the remix-project repository\n        compilationResultParam.data as unknown as CompilationResult,\n        contractName\n      )\n\n      if (!contractMetadata) {\n        return {\n            succeed: false,\n            message: \"Please recompile contract\"\n        }\n      }\n      \n      const contractMetadataParsed = JSON.parse(contractMetadata)\n\n      const fileName = getContractFileName(\n        // cast from the remix-plugin interface to the solidity one. Should be fixed when remix-plugin move to the remix-project repository\n        compilationResultParam.data as unknown as CompilationResult,\n        contractName\n      )\n\n      const jsonInput = {\n        language: 'Solidity',\n        sources: compilationResultParam.source.sources,\n        settings: {\n          optimizer: {\n            enabled: contractMetadataParsed.settings.optimizer.enabled,\n            runs: contractMetadataParsed.settings.optimizer.runs\n          }\n        }\n      }\n\n      const data: { [key: string]: string | any } = {\n        apikey: apiKeyParam, // A valid API-Key is required\n        module: \"contract\", // Do not change\n        action: \"verifysourcecode\", // Do not change\n        codeformat: \"solidity-standard-json-input\",\n        contractaddress: contractAddress, // Contract Address starts with 0x...\n        sourceCode: JSON.stringify(jsonInput),\n        contractname: fileName + ':' + contractName,\n        compilerversion: `v${contractMetadataParsed.compiler.version}`, // see http://etherscan.io/solcversions for list of support versions\n        constructorArguements: contractArgumentsParam ? contractArgumentsParam.replace('0x', '') : '', // if applicable\n      }\n\n      const body = new FormData()\n      Object.keys(data).forEach((key) => body.append(key, data[key]))\n\n      client.emit(\"statusChanged\", {\n        key: \"loading\",\n        type: \"info\",\n        title: \"Verifying ...\",\n      })\n      const response = await axios.post(etherscanApi, body)\n      const { message, result, status } = await response.data\n\n      if (message === \"OK\" && status === \"1\") {\n        resetAfter10Seconds(client, setResults)\n        const receiptStatus = await getReceiptStatus(\n          result,\n          apiKeyParam,\n          etherscanApi\n        )\n\n        const returnValue = {\n            guid: result,\n            status: receiptStatus.result,\n            message: `Verification process started correctly. Receipt GUID ${result}`,\n            succeed: true\n        }\n        onVerifiedContract(returnValue)\n        return returnValue\n      } else if (message === \"NOTOK\") {\n        client.emit(\"statusChanged\", {\n          key: \"failed\",\n          type: \"error\",\n          title: result,\n        })\n        const returnValue = {\n            message: result,\n            succeed: false\n        }\n        resetAfter10Seconds(client, setResults)\n        return returnValue\n      }\n      return  {\n        message: 'unknown reason ' + result,\n        succeed: false\n      }\n    } catch (error: any) {\n      console.error(error)\n      setResults(\"Something wrong happened, try again\")\n      return  {\n        message: error.message,\n        succeed: false\n      }\n    }\n  }\n\n  export const getContractFileName = (\n    compilationResult: CompilationResult,\n    contractName: string\n  ) => {\n    const compiledContracts = compilationResult.contracts\n    let fileName = \"\"\n  \n    for (const file of Object.keys(compiledContracts)) {\n      for (const contract of Object.keys(compiledContracts[file])) {\n        if (contract === contractName) {\n          fileName = file\n          break\n        }\n      }\n    }\n    return fileName\n  }\n  \n  export const getContractMetadata = (\n    compilationResult: CompilationResult,\n    contractName: string\n  ) => {\n    const compiledContracts = compilationResult.contracts\n    let contractMetadata = \"\"\n  \n    for (const file of Object.keys(compiledContracts)) {\n      for (const contract of Object.keys(compiledContracts[file])) {\n        if (contract === contractName) {\n          contractMetadata = compiledContracts[file][contract].metadata\n          if (contractMetadata) {\n            break\n          }\n        }\n      }\n    }\n    return contractMetadata\n  }\n","import React from \"react\"\n\nimport { Formik, ErrorMessage, Field } from \"formik\"\nimport { useNavigate, useLocation } from \"react-router-dom\"\n\nimport { AppContext } from \"../AppContext\"\nimport { SubmitButton } from \"../components\"\n\nexport const CaptureKeyView: React.FC = () => {\n  const location = useLocation()\n  const navigate = useNavigate()\n  return (\n    <AppContext.Consumer>\n      {({ apiKey, setAPIKey }) => (\n        <Formik\n          initialValues={{ apiKey }}\n          validate={(values) => {\n            const errors = {} as any\n            if (!values.apiKey) {\n              errors.apiKey = \"Required\"\n            }\n            return errors\n          }}\n          onSubmit={(values) => {\n            setAPIKey(values.apiKey)\n            navigate((location.state as any).from)\n          }}\n        >\n          {({ errors, touched, handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\" style={{ marginBottom: \"0.5rem\" }}>\n                <label htmlFor=\"apikey\">Please Enter your API key</label>\n                <Field\n                  className={\n                    errors.apiKey && touched.apiKey\n                      ? \"form-control form-control-sm is-invalid\"\n                      : \"form-control form-control-sm\"\n                  }\n                  type=\"text\"\n                  name=\"apiKey\"\n                  placeholder=\"Example: GM1T20XY6JGSAPWKDCYZ7B2FJXKTJRFVGZ\"\n                />\n                <ErrorMessage\n                  className=\"invalid-feedback\"\n                  name=\"apiKey\"\n                  component=\"div\"\n                />\n              </div>\n\n              <div>\n                <SubmitButton text=\"Save API key\" dataId=\"save-api-key\" />\n              </div>\n            </form>\n          )}\n        </Formik>\n      )}\n    </AppContext.Consumer>\n  )\n}\n","import React from \"react\"\n\nexport const ErrorView: React.FC = () => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <img\n        style={{ paddingBottom: \"2em\" }}\n        width=\"250\"\n        src=\"https://res.cloudinary.com/key-solutions/image/upload/v1580400635/solid/error-png.png\"\n        alt=\"Error page\"\n      />\n      <h5>Sorry, something unexpected happened. </h5>\n      <h5>\n        Please raise an issue:{\" \"}\n        <a\n          style={{ color: \"red\" }}\n          href=\"https://github.com/ethereum/remix-project/issues\"\n        >\n          Here\n        </a>\n      </h5>\n    </div>\n  )\n}\n","import React from \"react\"\n\nimport { Navigate } from \"react-router-dom\"\n\nimport { AppContext } from \"../AppContext\"\nimport { Receipt } from \"../types\"\n\nimport { VerifyView } from \"./VerifyView\"\n\nexport const HomeView: React.FC = () => {\n  // const [hasError, setHasError] = useState(false)\n  return (\n    <AppContext.Consumer>\n      {({ apiKey, clientInstance, setReceipts, receipts, contracts }) =>\n        !apiKey ? (\n          <Navigate\n            to={{\n              pathname: \"/settings\"\n            }}\n          />\n        ) : (\n          <VerifyView\n            contracts={contracts}\n            client={clientInstance}\n            apiKey={apiKey}\n            onVerifiedContract={(receipt: Receipt) => {\n              const newReceipts = [...receipts, receipt]\n\n              setReceipts(newReceipts)\n            }}\n          />\n        )\n      }\n    </AppContext.Consumer>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { Formik, ErrorMessage, Field } from \"formik\"\nimport { getEtherScanApi, getNetworkName, getReceiptStatus } from \"../utils\"\nimport { Receipt } from \"../types\"\nimport { AppContext } from \"../AppContext\"\nimport { SubmitButton } from \"../components\"\nimport { Navigate } from \"react-router-dom\"\n\ninterface FormValues {\n  receiptGuid: string\n}\n\nexport const ReceiptsView: React.FC = () => {\n  const [results, setResults] = useState(\"\")\n  const onGetReceiptStatus = async (\n    values: FormValues,\n    clientInstance: any,\n    apiKey: string\n  ) => {\n    try {\n      const network = await getNetworkName(clientInstance)\n      if (network === \"vm\") {\n        setResults(\"Cannot verify in the selected network\")\n        return\n      }\n      const etherscanApi = getEtherScanApi(network)\n      const result = await getReceiptStatus(\n        values.receiptGuid,\n        apiKey,\n        etherscanApi\n      )\n      setResults(result.result)\n    } catch (error: any) {\n      setResults(error.message)\n    }\n  }\n\n  return (\n    <AppContext.Consumer>\n      {({ apiKey, clientInstance, receipts }) =>\n        !apiKey ? (\n          <Navigate\n            to={{\n              pathname: \"/settings\"\n            }}\n          />\n        ) : (\n          <div>\n            <Formik\n              initialValues={{ receiptGuid: \"\" }}\n              validate={(values) => {\n                const errors = {} as any\n                if (!values.receiptGuid) {\n                  errors.receiptGuid = \"Required\"\n                }\n                return errors\n              }}\n              onSubmit={(values) =>\n                onGetReceiptStatus(values, clientInstance, apiKey)\n              }\n            >\n              {({ errors, touched, handleSubmit }) => (\n                <form onSubmit={handleSubmit}>\n                  <div\n                    className=\"form-group\"\n                    style={{ marginBottom: \"0.5rem\" }}\n                  >\n                    <h6>Get your Receipt GUID status</h6>\n                    <label htmlFor=\"receiptGuid\">Receipt GUID</label>\n                    <Field\n                      className={\n                        errors.receiptGuid && touched.receiptGuid\n                          ? \"form-control form-control-sm is-invalid\"\n                          : \"form-control form-control-sm\"\n                      }\n                      type=\"text\"\n                      name=\"receiptGuid\"\n                    />\n                    <ErrorMessage\n                      className=\"invalid-feedback\"\n                      name=\"receiptGuid\"\n                      component=\"div\"\n                    />\n                  </div>\n\n                  <SubmitButton text=\"Check\" />\n                </form>\n              )}\n            </Formik>\n\n            <div\n              style={{\n                marginTop: \"2em\",\n                fontSize: \"0.8em\",\n                textAlign: \"center\",\n              }}\n              dangerouslySetInnerHTML={{ __html: results }}\n            />\n\n            <ReceiptsTable receipts={receipts} />\n          </div>\n        )\n      }\n    </AppContext.Consumer>\n  )\n}\n\nconst ReceiptsTable: React.FC<{ receipts: Receipt[] }> = ({ receipts }) => {\n  return (\n    <div className=\"table-responsive\" style={{ fontSize: \"0.7em\" }}>\n      <h6>Receipts</h6>\n      <table className=\"table table-sm\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Guid</th>\n            <th scope=\"col\">Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {receipts &&\n            receipts.length > 0 &&\n            receipts.map((item: Receipt, index) => {\n              return (\n                <tr key={item.guid}>\n                  <td>{item.guid}</td>\n                  <td>{item.status}</td>\n                </tr>\n              )\n            })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport {\n  PluginClient,\n} from \"@remixproject/plugin\"\nimport { Formik, ErrorMessage, Field } from \"formik\"\n\nimport { SubmitButton } from \"../components\"\nimport { Receipt } from \"../types\"\nimport { verify } from \"../utils/verify\"\nimport { receiptGuidScript, verifyScript } from \"../utils/scripts\"\n\ninterface Props {\n  client: PluginClient\n  apiKey: string\n  onVerifiedContract: (receipt: Receipt) => void\n  contracts: string[]\n}\n\ninterface FormValues {\n  contractName: string\n  contractArguments: string\n  contractAddress: string\n}\n\nexport const VerifyView: React.FC<Props> = ({\n  apiKey,\n  client,\n  contracts,\n  onVerifiedContract,\n}) => {\n  const [results, setResults] = useState(\"\")\n\n  const onVerifyContract = async (values: FormValues) => {\n    const compilationResult = (await client.call(\n      \"solidity\",\n      \"getCompilationResult\"\n    )) as any\n\n    if (!compilationResult) {\n      throw new Error(\"no compilation result available\")\n    }\n\n    const contractArguments = values.contractArguments.replace(\"0x\", \"\")    \n\n    const verificationResult = await verify(\n      apiKey,\n      values.contractAddress,\n      contractArguments,\n      values.contractName,\n      compilationResult,\n      client,\n      onVerifiedContract,\n      setResults,\n    )\n\n    setResults(verificationResult.message)\n  }\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          contractName: \"\",\n          contractArguments: \"\",\n          contractAddress: \"\",\n        }}\n        validate={(values) => {\n          const errors = {} as any\n          if (!values.contractName) {\n            errors.contractName = \"Required\"\n          }\n          if (!values.contractAddress) {\n            errors.contractAddress = \"Required\"\n          }\n          if (values.contractAddress.trim() === \"\") {\n            errors.contractAddress = \"Please enter a valid contract address\"\n          }\n          return errors\n        }}\n        onSubmit={(values) => onVerifyContract(values)}\n      >\n        {({ errors, touched, handleSubmit, isSubmitting }) => (\n          <form onSubmit={handleSubmit}>\n            <h6>Verify your smart contracts</h6>\n            <button\n              type=\"button\"\n              style={{ padding: \"0.25rem 0.4rem\", marginRight: \"0.5em\", marginBottom: \"0.5em\"}}\n              className=\"btn btn-primary\"\n              title=\"Generate the necessary helpers to start the verification from a TypeScript script\"\n              onClick={async () => {\n                if (!await client.call('fileManager', 'exists' as any, 'scripts/etherscan/receiptStatus.ts')) {\n                  await client.call('fileManager', 'writeFile', 'scripts/etherscan/receiptStatus.ts', receiptGuidScript)\n                  await client.call('fileManager', 'open', 'scripts/etherscan/receiptStatus.ts')\n                } else {\n                  client.call('notification' as any, 'toast', 'file receiptStatus.ts already present..')\n                }\n                \n                if (!await client.call('fileManager', 'exists' as any, 'scripts/etherscan/verify.ts')) {\n                  await client.call('fileManager', 'writeFile', 'scripts/etherscan/verify.ts', verifyScript)\n                  await client.call('fileManager', 'open', 'scripts/etherscan/verify.ts')\n                } else {\n                  client.call('notification' as any, 'toast', 'file verify.ts already present..')\n                }\n              }}\n              >\n                Generate Etherscan helper scripts\n              </button>\n            <div className=\"form-group\">\n              <label htmlFor=\"contractName\">Contract</label>              \n              <Field\n                as=\"select\"\n                className={\n                  errors.contractName && touched.contractName\n                    ? \"form-control form-control-sm is-invalid\"\n                    : \"form-control form-control-sm\"\n                }\n                name=\"contractName\"\n              >\n                <option disabled={true} value=\"\">\n                  Select a contract\n                </option>\n                {contracts.map((item) => (\n                  <option key={item} value={item}>\n                    {item}\n                  </option>\n                ))}\n              </Field>\n              <ErrorMessage\n                className=\"invalid-feedback\"\n                name=\"contractName\"\n                component=\"div\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"contractArguments\">Constructor Arguments</label>\n              <Field\n                className={\n                  errors.contractArguments && touched.contractArguments\n                    ? \"form-control form-control-sm is-invalid\"\n                    : \"form-control form-control-sm\"\n                }\n                type=\"text\"\n                name=\"contractArguments\"\n                placeholder=\"hex encoded\"\n              />\n              <ErrorMessage\n                className=\"invalid-feedback\"\n                name=\"contractArguments\"\n                component=\"div\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"contractAddress\">Contract Address</label>\n              <Field\n                className={\n                  errors.contractAddress && touched.contractAddress\n                    ? \"form-control form-control-sm is-invalid\"\n                    : \"form-control form-control-sm\"\n                }\n                type=\"text\"\n                name=\"contractAddress\"\n                placeholder=\"i.e. 0x11b79afc03baf25c631dd70169bb6a3160b2706e\"\n              />\n              <ErrorMessage\n                className=\"invalid-feedback\"\n                name=\"contractAddress\"\n                component=\"div\"\n              />\n            </div>\n\n            <SubmitButton dataId=\"verify-contract\" text=\"Verify Contract\" isSubmitting={isSubmitting} />\n          </form>\n        )}\n      </Formik>\n\n      <div data-id=\"verify-result\"\n        style={{ marginTop: \"2em\", fontSize: \"0.8em\", textAlign: \"center\" }}\n        dangerouslySetInnerHTML={{ __html: results }}\n      />\n\n      {/* <div style={{ display: \"block\", textAlign: \"center\", marginTop: \"1em\" }}>\n        <Link to=\"/receipts\">View Receipts</Link>\n      </div> */}\n    </div>\n  )\n}\n","export { HomeView } from \"./HomeView\"\nexport { ErrorView } from \"./ErrorView\"\nexport { ReceiptsView } from \"./ReceiptsView\"\nexport { CaptureKeyView } from \"./CaptureKeyView\"\n","import { StrictMode } from 'react';\nimport * as ReactDOM from 'react-dom';\n\n\nimport App from './app/app';\n\nReactDOM.render(<StrictMode><App /></StrictMode>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":["AppContext","React","createContext","apiKey","setAPIKey","value","console","log","clientInstance","receipts","setReceipts","contracts","setContracts","themeType","setThemeType","RemixClient","onload","contractAddress","contractArguments","contractName","compilationResultParam","verify","result","receiptGuid","getNetworkName","network","Error","etherscanApi","getEtherScanApi","getReceiptStatus","receiptStatus","message","succeed","status","PluginClient","getNewContractNames","compilationResult","compiledContracts","Object","keys","file","newContractNames","App","useLocalStorage","useState","undefined","setClientInstance","clientInstanceRef","useRef","current","contractsRef","useEffect","client","createClient","loadClient","on","fileName","source","languageVersion","data","newContractsNames","newContractsToSave","uniqueContracts","Set","receiptsNotVerified","filter","item","length","timer1","setInterval","forEach","guid","newReceipts","map","currentReceipt","clearInterval","HomeIcon","from","pathname","isActive","getStyleFilterIcon","marginRight","SettingsIcon","invert","brightness","ReceiptsIcon","HeaderWithSettings","title","showBackButton","SubmitButton","text","dataId","isSubmitting","padding","key","initialValue","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","setValue","valueToStore","Function","setItem","stringify","DefaultLayout","children","RouteWithHeader","Component","component","rest","DisplayRoutes","verifyScript","receiptGuidScript","call","name","toLowerCase","params","axios","get","response","resetAfter10Seconds","setResults","setTimeout","emit","apiKeyParam","contractArgumentsParam","onVerifiedContract","contractMetadata","getContractMetadata","contractMetadataParsed","getContractFileName","jsonInput","language","sources","settings","optimizer","enabled","runs","apikey","module","action","codeformat","contractaddress","sourceCode","contractname","compilerversion","compiler","version","constructorArguements","replace","body","FormData","append","type","post","returnValue","contract","metadata","CaptureKeyView","location","useLocation","navigate","useNavigate","values","errors","state","touched","handleSubmit","marginBottom","ErrorView","width","display","flexDirection","alignItems","paddingBottom","color","HomeView","receipt","ReceiptsView","results","onGetReceiptStatus","marginTop","fontSize","textAlign","__html","ReceiptsTable","index","VerifyView","onVerifyContract","verificationResult","trim","ReactDOM","render","document","getElementById"],"sourceRoot":""}
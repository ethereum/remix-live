{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAkC;AAAA;AAAA;AAElC,IAAMA,MAAM,GAAG,IAAIC,oBAAS,EAAE;AAEf,SAASC,GAAG,GAAG;EAC5B,gBAAgC,IAAAC,eAAQ,EAAC,EAAE,CAAC;IAAA;IAArCC,QAAQ;IAAEC,WAAW;EAC5B,IAAAC,gBAAS,EAAC,YAAM;IACdN,MAAM,CAACO,YAAY,CAACC,EAAE,CAAC,eAAe,EAAE,UAACC,YAAoB,EAAK;MAChEJ,WAAW,CAACI,YAAY,CAAC;IAC3B,CAAC,CAAC;EAEJ,CAAC,EAAE,EAAE,CAAC;EACN,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,SAAS;MAAA,uBACtB,qBAAC,yBAAa;QAAC,QAAQ,EAAEL,QAAS;QAAC,aAAa,EAAE,CAACM,qBAAS;MAAE;IAAE;EAC5D,EACL;AAEP;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AAAiC;AAAA;AAAA,IAEpBT,SAAS;EAAA;EAAA;EAGpB,qBAAc;IAAA;IAAA;IACZ;IAAO;IAAA;IACP,MAAKM,YAAY,GAAG,IAAII,kBAAY,EAAE;IACtC,MAAKC,OAAO,GAAG,CAAC,UAAU,CAAC;IAC3B,IAAAC,2BAAY,iDAAM;IAClB,MAAKC,MAAM,GAAG,EAAE;IAChB,MAAKC,MAAM,EAAE;IAAA;EACf;EAAC;IAAA;IAAA;MAAA,8FAED,iBAAeC,IAAc;QAAA;QAAA;UAAA;YAAA;cAAA;gBAC3B,IAAI,CAACF,MAAM,GAAGE,IAAI,CAAC,CAAC,CAAC;gBAAA;gBAAA,OACE,IAAI,CAACC,IAAI,CAAC,aAAa,EAAE,UAAU,EAAE,IAAI,CAACH,MAAM,CAAC;cAAA;gBAAlEV,QAAQ;gBACd,IAAI,CAACG,YAAY,CAACW,IAAI,CAAC,eAAe,EAAEd,QAAQ,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAClD;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA,EAhB4Be,oBAAY;AAAA;;;;;;;;;;ACJ3C;AACA;AACA;AAA2B;AAE3BC,oBAAQ,CAACC,MAAM,eACb,qBAAC,iBAAK,CAAC,UAAU;EAAA,uBACf,qBAAC,eAAG;AAAG,EACU,EACnBC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAChC","sources":["webpack:///./src/app/App.tsx","webpack:///./src/app/docviewer.ts","webpack:///./src/main.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { DocViewer } from \"./docviewer\"\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nconst client = new DocViewer()\n\nexport default function App() {\n  const [contents, setContents] = useState('')\n  useEffect(() => {\n    client.eventEmitter.on('contentsReady', (fileContents: string) => {\n      setContents(fileContents)\n    })\n\n  }, [])\n  return (\n    <>\n      <div className=\"m-5 p-2\">\n        <ReactMarkdown children={contents} remarkPlugins={[remarkGfm]}/>\n      </div>\n    </>\n  )\n}","import { PluginClient } from '@remixproject/plugin'\nimport { createClient } from '@remixproject/plugin-webview'\nimport EventEmitter from 'events'\n\nexport class DocViewer extends PluginClient {\n  mdFile: string\n  eventEmitter: EventEmitter\n  constructor() {\n    super()\n    this.eventEmitter = new EventEmitter()\n    this.methods = ['viewDocs']\n    createClient(this)\n    this.mdFile = ''\n    this.onload()\n  }\n\n  async viewDocs(docs: string[]) {\n    this.mdFile = docs[0]\n    const contents = await this.call('fileManager', 'readFile', this.mdFile)\n    this.eventEmitter.emit('contentsReady', contents)\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"names":["client","DocViewer","App","useState","contents","setContents","useEffect","eventEmitter","on","fileContents","remarkGfm","EventEmitter","methods","createClient","mdFile","onload","docs","call","emit","PluginClient","ReactDOM","render","document","getElementById"],"sourceRoot":""}
{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/app/App.tsx","webpack:///./src/app/docgen-client.ts","webpack:///./src/app/docgen/common/helpers.ts","webpack:///./src/app/docgen/common/properties.ts","webpack:///./src/app/docgen/config.ts","webpack:///./src/app/docgen/doc-item.ts","webpack:///./src/app/docgen/render.ts","webpack:///./src/app/docgen/site.ts","webpack:///./src/app/docgen/templates.ts","webpack:///./src/app/docgen/themes/markdown/helpers.ts","webpack:///./src/app/docgen/utils/ItemError.ts","webpack:///./src/app/docgen/utils/arrays-equal.ts","webpack:///./src/app/docgen/utils/clone.ts","webpack:///./src/app/docgen/utils/execall.ts","webpack:///./src/app/docgen/utils/is-child.ts","webpack:///./src/app/docgen/utils/item-type.ts","webpack:///./src/app/docgen/utils/map-keys.ts","webpack:///./src/app/docgen/utils/map-values.ts","webpack:///./src/app/docgen/utils/memoized-getter.ts","webpack:///./src/app/docgen/utils/natspec.ts","webpack:///./src/app/docgen/utils/normalizeContractPath.ts","webpack:///./src/app/docgen/utils/read-item-docs.ts","webpack:///./src/app/docgen/utils/scope.ts","webpack:///./src/main.tsx","webpack:///./src/app/App.css?024f","webpack:///ignored|/home/circleci/remix-project/apps/doc-gen/src/app/docgen|fs","webpack:///ignored|/home/circleci/remix-project/node_modules/handlebars/lib|fs","webpack:///ignored|/home/circleci/remix-project/node_modules/object-inspect|./util.inspect"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport './App.css'\nimport { DocGenClient } from './docgen-client'\nimport { Build } from './docgen/site'\n\nexport const client = new DocGenClient()\n\nconst App = () => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [themeType, setThemeType] = useState<string>('dark')\n  const [hasBuild, setHasBuild] = useState<boolean>(false)\n  const [fileName, setFileName] = useState<string>('')\n\n  useEffect(() => {\n    const watchThemeSwitch = async () => {\n      client.eventEmitter.on('themeChanged', (theme: string) => {\n        setThemeType(theme)\n      })\n      client.eventEmitter.on('compilationFinished', (build: Build, fileName: string) => {\n        setHasBuild(true)\n        setFileName(fileName)\n      })\n      client.eventEmitter.on('docsGenerated', (docs: string[]) => {})\n    }\n    watchThemeSwitch()\n  }, [])\n\n  return (\n    <div className=\"p-3\">\n      <h5 className=\"h-5 mb-3\">\n        Compile a Solidity contract and generate its documentation as Markdown. (Right-click on a contract in the File\n        Explorer and select \"Generate Docs\" from the context menu.).\n      </h5>\n      {fileName && (\n        <div className=\"border-bottom border-top px-2 py-3 justify-center align-items-center d-flex\">\n          <h6>File: {fileName}</h6>\n        </div>\n      )}\n      {hasBuild && (\n        <button className=\"btn btn-primary btn-block mt-4\" onClick={() => client.generateDocs()}>\n          Generate Docs\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { PluginClient } from '@remixproject/plugin'\nimport { CompilationResult, SourceWithTarget, customAction } from '@remixproject/plugin-api'\nimport { createClient } from '@remixproject/plugin-webview'\nimport EventEmitter from 'events'\nimport { Config, defaults } from './docgen/config'\nimport { Build, buildSite } from './docgen/site'\nimport { loadTemplates } from './docgen/templates'\nimport { SolcInput, SolcOutput } from 'solidity-ast/solc'\nimport { render } from './docgen/render'\nimport { normalizeContractPath } from './docgen/utils/normalizeContractPath'\n\nexport class DocGenClient extends PluginClient {\n  private currentTheme\n  public eventEmitter: EventEmitter\n  private build: Build\n  public docs: string[] = []\n  private fileName: string = ''\n  private contractPath: string = ''\n\n  constructor() {\n    super()\n    this.eventEmitter = new EventEmitter()\n    this.methods = ['generateDocs', 'openDocs', 'generateDocsCustomAction']\n    createClient(this)\n    this.onload().then(async () => {\n      await this.setListeners()\n    })\n  }\n\n  async setListeners() {\n    this.currentTheme = await this.call('theme', 'currentTheme')\n\n    this.on('theme', 'themeChanged', (theme: any) => {\n      this.currentTheme = theme\n      this.eventEmitter.emit('themeChanged', this.currentTheme)\n    });\n    this.eventEmitter.emit('themeChanged', this.currentTheme)\n\n    this.on('solidity', 'compilationFinished', (fileName: string, source: SourceWithTarget, languageVersion: string, data: CompilationResult) => {\n      const input: SolcInput = {\n        sources: source.sources\n      }\n      const output: SolcOutput = {\n        sources: data.sources as any\n      }\n      this.build = {\n        input: input,\n        output: output\n      }\n      const segmentedPathList = normalizeContractPath(fileName)\n      this.fileName = segmentedPathList[segmentedPathList.length - 1]\n      this.contractPath = segmentedPathList[0]\n      this.eventEmitter.emit('compilationFinished', this.build, this.fileName)\n    })\n  }\n\n  async generateDocsCustomAction(action: customAction) {\n    await this.call('solidity', 'compile', action.path[0])\n    await this.generateDocs()\n  }\n\n  async docgen(builds: Build[], userConfig?: Config): Promise<void> {\n    const config = { ...defaults, ...userConfig }\n    config.sourcesDir = this.contractPath !== config.sourcesDir ? this.contractPath : config.sourcesDir\n    const templates = await loadTemplates(config.theme, config.root, config.templates)\n    const site = buildSite(builds, config, templates.properties ?? {})\n    const renderedSite = render(site, templates, config.collapseNewlines)\n    const docs: string[] = []\n    for (const { id, contents } of renderedSite) {\n      const temp = `${this.fileName.split('.')[0]}.${id.split('.')[1]}`\n      const newFileName = `docs/${temp}`\n      await this.call('fileManager', 'setFile', newFileName , contents)\n      docs.push(newFileName)\n    }\n    this.eventEmitter.emit('docsGenerated', docs)\n    this.emit('docgen' as any, 'docsGenerated', docs)\n    this.docs = docs\n    await this.openDocs(docs)\n  }\n\n  async openDocs(docs: string[]) {\n    await this.call('manager', 'activatePlugin', 'doc-viewer')\n    await this.call('tabs' as any, 'focus', 'doc-viewer')\n    await this.call('doc-viewer' as any, 'viewDocs', docs)\n  }\n\n  async generateDocs() {\n    this.eventEmitter.on('compilationFinished', async (build: Build, fileName: string) => {\n      await this.docgen([build])\n    })\n  }\n}\n","import { VariableDeclaration } from \"solidity-ast\";\n\nexport function trim(text: string) {\n  if (typeof text === 'string') {\n    return text.trim();\n  }\n}\n\nexport function joinLines(text?: string) {\n  if (typeof text === 'string') {\n    return text.replace(/\\n+/g, ' ');\n  }\n}\n\n/**\n * Format a variable as its type followed by its name, if available.\n */\nexport function formatVariable(v: VariableDeclaration): string {\n  return [v.typeName?.typeDescriptions.typeString].concat(v.name || []).join(' ');\n}\n\nexport const eq = (a: unknown, b: unknown) => a === b;\n\nexport const slug = (str) => {\n  if (str === undefined) {\n    throw new Error('Missing argument');\n  }\n  return str.replace(/\\W/g, '-');\n}\n\nexport const names = params => params.map(p => p.name).join(', ');\n\nexport const typedParams = params => {\n  return params?.map(p => `${p.type}${p.indexed ? ' indexed' : ''}${p.name ? ' ' + p.name : ''}`).join(', ');\n};\n","import { EnumDefinition, ErrorDefinition, EventDefinition, FunctionDefinition, ModifierDefinition, ParameterList, StructDefinition, UserDefinedValueTypeDefinition, VariableDeclaration } from 'solidity-ast';\nimport { findAll, isNodeType } from 'solidity-ast/utils';\nimport { NatSpec, parseNatspec } from '../utils/natspec';\nimport { DocItemContext, DOC_ITEM_CONTEXT } from '../site';\nimport { mapValues } from '../utils/map-values';\nimport { DocItem, docItemTypes } from '../doc-item';\nimport { formatVariable, slug } from './helpers';\nimport { PropertyGetter } from '../templates';\nimport { itemType } from '../utils/item-type';\n\ntype TypeDefinition = StructDefinition | EnumDefinition | UserDefinedValueTypeDefinition;\n\nexport function type ({ item }: DocItemContext): string {\n  return itemType(item);\n}\n\nexport function natspec ({ item }: DocItemContext): NatSpec {\n  return parseNatspec(item);\n}\n\nexport function name({ item }: DocItemContext, original?: unknown): string {\n  if (item.nodeType === 'FunctionDefinition') {\n    return item.kind === 'function' ? original as string : item.kind;\n  } else {\n    return original as string;\n  }\n}\n\nexport function fullName ({ item, contract }: DocItemContext): string {\n  if (contract) {\n    return `${contract.name}.${item.name}`;\n  } else {\n    return `${item.name}`;\n  }\n}\n\nexport function signature ({ item }: DocItemContext): string | undefined {\n  switch (item.nodeType) {\n  case 'ContractDefinition':\n    return undefined;\n\n  case 'FunctionDefinition': {\n    const { kind, name } = item;\n    const params = item.parameters.parameters;\n    const returns = item.returnParameters.parameters;\n    const head = (kind === 'function' || kind === 'freeFunction') ? [kind, name].join(' ') : kind;\n    const res = [\n      `${head}(${params.map(formatVariable).join(', ')})`,\n      item.visibility,\n    ];\n    if (item.stateMutability !== 'nonpayable') {\n      res.push(item.stateMutability);\n    }\n    if (item.virtual) {\n      res.push('virtual');\n    }\n    if (returns.length > 0) {\n      res.push(`returns (${returns.map(formatVariable).join(', ')})`);\n    }\n    return res.join(' ');\n  }\n\n  case 'EventDefinition': {\n    const params = item.parameters.parameters;\n    return `event ${item.name}(${params.map(formatVariable).join(', ')})`;\n  }\n\n  case 'ErrorDefinition': {\n    const params = item.parameters.parameters;\n    return `error ${item.name}(${params.map(formatVariable).join(', ')})`;\n  }\n\n  case 'ModifierDefinition': {\n    const params = item.parameters.parameters;\n    return `modifier ${item.name}(${params.map(formatVariable).join(', ')})`;\n  }\n\n  case 'VariableDeclaration':\n    return formatVariable(item);\n  }\n}\n\ninterface Param extends VariableDeclaration {\n  type: string;\n  natspec?: string;\n};\n\nfunction getParams (params: ParameterList, natspec: NatSpec['params'] | NatSpec['returns']): Param[] {\n  return params.parameters.map((p, i) => ({\n    ...p,\n    type: p.typeDescriptions.typeString!,\n    natspec: natspec?.find((q, j) => q.name === undefined ? i === j : p.name === q.name)?.description,\n  }));\n}\n\nexport function params ({ item }: DocItemContext): Param[] | undefined {\n  if ('parameters' in item) {\n    return getParams(item.parameters, natspec(item[DOC_ITEM_CONTEXT]).params);\n  }\n}\n\nexport function returns ({ item }: DocItemContext): Param[] | undefined {\n  if ('returnParameters' in item) {\n    return getParams(item.returnParameters, natspec(item[DOC_ITEM_CONTEXT]).returns);\n  }\n}\n\nexport function items ({ item }: DocItemContext): DocItem[] | undefined {\n  return (item.nodeType === 'ContractDefinition')\n    ? item.nodes.filter(isNodeType(docItemTypes)).filter(n => !('visibility' in n) || n.visibility !== 'private')\n    : undefined;\n}\n\nexport function functions ({ item }: DocItemContext): FunctionDefinition[] | undefined {\n  return [...findAll('FunctionDefinition', item)].filter(f => f.visibility !== 'private');\n}\n\nexport function events ({ item }: DocItemContext): EventDefinition[] | undefined {\n  return [...findAll('EventDefinition', item)];\n}\n\nexport function modifiers ({ item }: DocItemContext): ModifierDefinition[] | undefined {\n  return [...findAll('ModifierDefinition', item)];\n}\n\nexport function errors ({ item }: DocItemContext): ErrorDefinition[] | undefined {\n  return [...findAll('ErrorDefinition', item)];\n}\n\nexport function variables ({ item }: DocItemContext): VariableDeclaration[] | undefined {\n  return (item.nodeType === 'ContractDefinition')\n    ? item.nodes.filter(isNodeType('VariableDeclaration')).filter(v => v.stateVariable && v.visibility !== 'private')\n    : undefined;\n}\n\nexport function types ({ item }: DocItemContext): TypeDefinition[] | undefined {\n  return [...findAll(['StructDefinition', 'EnumDefinition', 'UserDefinedValueTypeDefinition'], item)];\n}\nexport function anchor({ item, contract }: DocItemContext) {\n  let res = '';\n  if (contract) {\n    res += contract.name + '-';\n  }\n  res += item.name;\n  if ('parameters' in item) {\n    const signature = item.parameters.parameters.map(v => v.typeName.typeDescriptions.typeString).join(',');\n    res += slug('(' + signature + ')');\n  }\n  if (isNodeType('VariableDeclaration', item)) {\n    res += '-' + slug(item.typeName.typeDescriptions.typeString);\n  }\n  return res;\n}\n\nexport function inheritance ({ item, build }: DocItemContext) {\n  if (!isNodeType('ContractDefinition', item)) {\n    throw new Error('used inherited-items on non-contract');\n  }\n\n  return item.linearizedBaseContracts\n    .map(id => build.deref('ContractDefinition', id))\n    .filter((c, i) => c.name !== 'Context' || i === 0);\n}\n\nexport function hasfunctions ({ item }: DocItemContext) {\n  return (item as any).inheritance.some(c => c.functions.length > 0);\n}\n\nexport function hasevents ({ item }: DocItemContext) {\n  return (item as any).inheritance.some(c => c.events.length > 0);\n}\n\nexport function inheritedfunctions ({ item }: DocItemContext) {\n  const { inheritance } = (item as any)\n  const baseFunctions = new Set(inheritance.flatMap(c => c.functions.flatMap(f => f.baseFunctions ?? [])));\n  return inheritance.map((contract, i) => ({\n    contract,\n    functions: contract.functions.filter(f => !baseFunctions.has(f.id) && (f.name !== 'constructor' || i === 0)),\n  }))\n}","import type { SourceUnit } from 'solidity-ast';\nimport type { DocItem } from './doc-item';\nimport type { PageAssigner, PageStructure } from './site';\n\nexport interface UserConfig {\n  /**\n   * The directory where rendered pages will be written.\n   * Defaults to 'docs'.\n   */\n  outputDir?: string;\n\n  /**\n   * A directory of custom templates that should take precedence over the\n   * theme's templates.\n   */\n  templates?: string;\n\n  /**\n   * The name of the built-in templates that will be used by default.\n   * Defaults to 'markdown'.\n   */\n  theme?: string;\n\n  /**\n   * The way documentable items (contracts, functions, custom errors, etc.)\n   * will be organized in pages. Built in options are:\n   * - 'single': all items in one page\n   * - 'items': one page per item\n   * - 'files': one page per input Solidity file\n   * More customization is possible by defining a function that returns a page\n   * path given the AST node for the item and the source unit where it is\n   * defined.\n   * Defaults to 'single'.\n   */\n  pages?: 'single' | 'items' | 'files' | PageAssigner;\n\n  /**\n   * An array of sources subdirectories that should be excluded from\n   * documentation, relative to the contract sources directory.\n   */\n  exclude?: string[];\n\n  /**\n   * Clean up the output by collapsing 3 or more contiguous newlines into only 2.\n   * Enabled by default.\n   */\n  collapseNewlines?: boolean;\n\n  /**\n   * The extension for generated pages.\n   * Defaults to '.md'.\n   */\n  pageExtension?: string;\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Other config parameters that will be provided by the environment (e.g. Hardhat)\n// rather than by the user manually, unless using the library directly.\nexport interface Config extends UserConfig {\n  /**\n   * The root directory relative to which 'outputDir', 'sourcesDir', and\n   * 'templates' are specified. Defaults to the working directory.\n   */\n  root?: string;\n\n  /**\n   * The Solidity sources directory.\n   */\n  sourcesDir?: string;\n}\n\nexport type FullConfig = Required<Config>;\n\nexport const defaults: Omit<FullConfig, 'templates'> = {\n  root: process.cwd(),\n  sourcesDir: 'contracts',\n  outputDir: 'docs',\n  pages: 'single',\n  exclude: [],\n  theme: 'markdown',\n  collapseNewlines: true,\n  pageExtension: '.md',\n};\n","import { ContractDefinition, ImportDirective, PragmaDirective, SourceUnit, UsingForDirective } from \"solidity-ast\";\nimport { Node, NodeType, NodeTypeMap } from \"solidity-ast/node\";\nimport { AssertEqual } from \"./utils/assert-equal-types\";\n\nexport type DocItem = Exclude<\n  SourceUnit['nodes'][number] | ContractDefinition['nodes'][number],\n  ImportDirective | PragmaDirective | UsingForDirective\n>;\n\nexport const docItemTypes = [\n  'ContractDefinition',\n  'EnumDefinition',\n  'ErrorDefinition',\n  'EventDefinition',\n  'FunctionDefinition',\n  'ModifierDefinition',\n  'StructDefinition',\n  'UserDefinedValueTypeDefinition',\n  'VariableDeclaration',\n] as const;\n\n// Make sure at compile time that docItemTypes contains exactly the node types of DocItem.\nconst _: AssertEqual<typeof docItemTypes[number], DocItem['nodeType']> = true;\n\nexport function isDocItem(node: Node): node is DocItem {\n  return (docItemTypes as readonly string[]).includes(node.nodeType);\n}\n","import Handlebars, { RuntimeOptions } from 'handlebars';\nimport { Site, Page, DocItemWithContext, DOC_ITEM_CONTEXT } from './site';\nimport { Templates } from './templates';\nimport { itemType } from './utils/item-type';\nimport fs from 'fs';\n\nexport interface RenderedPage {\n  id: string;\n  contents: string;\n}\n\ninterface TemplateOptions {\n  data: {\n    site: Site;\n  };\n}\n\nexport function render(site: Site, templates: Templates, collapseNewlines?: boolean): RenderedPage[] {\n  const renderPage = buildRenderer(templates);\n  const renderedPages: RenderedPage[] = [];\n  for (const page of site.pages) {\n    let contents = renderPage(page, { data: { site } });\n    if (collapseNewlines) {\n      contents = contents.replace(/\\n{3,}/g, '\\n\\n');\n    }\n    renderedPages.push({\n      id: page.id,\n      contents,\n    });\n  }\n  return renderedPages;\n}\n\nexport const itemPartialName = (item: DocItemWithContext) => itemType(item).replace(/ /g, '-').toLowerCase();\n\nfunction itemPartial(item: DocItemWithContext, options?: RuntimeOptions) {\n  if (!item.__item_context) {\n    throw new Error(`Partial 'item' used in unsupported context (not a doc item)`);\n  }\n  const partial = options?.partials?.[itemPartialName(item)];\n  if (!partial) {\n    throw new Error(`Missing partial '${itemPartialName(item)}'`);\n  }\n  return partial(item, options);\n}\n\nfunction readmeHelper(H: typeof Handlebars, path: string, opts: RuntimeOptions) {\n  const items: DocItemWithContext[] = opts.data.root.items;\n  const renderedItems = Object.fromEntries(\n    items.map(item => [\n      item.name,\n      new H.SafeString(\n        H.compile('{{>item}}')(item, opts),\n      ),\n    ]),\n  );\n  return new H.SafeString(\n    H.compile(fs.readFileSync(path, 'utf8'))(renderedItems, opts),\n  );\n}\n\nfunction buildRenderer(templates: Templates): (page: Page, options: TemplateOptions) => string {\n  const pageTemplate = templates.partials?.page;\n  if (pageTemplate === undefined) {\n    throw new Error(`Missing 'page' template`);\n  }\n\n  const H = Handlebars.create();\n\n  for (const [name, getBody] of Object.entries(templates.partials ?? {})) {\n    let partial: HandlebarsTemplateDelegate | undefined;\n    H.registerPartial(name, (...args) => {\n      partial ??= H.compile(getBody());\n      return partial(...args);\n    });\n  }\n\n  H.registerHelper('readme', (path: string, opts: RuntimeOptions) => readmeHelper(H, path, opts));\n\n  for (const [name, fn] of Object.entries(templates.helpers ?? {})) {\n    H.registerHelper(name, fn);\n  }\n\n  H.registerPartial('item', itemPartial);\n\n  return H.compile('{{>page}}');\n}\n","import path from 'path';\nimport { ContractDefinition, SourceUnit } from 'solidity-ast';\nimport { SolcOutput, SolcInput } from 'solidity-ast/solc';\nimport { astDereferencer, ASTDereferencer, findAll, isNodeType, srcDecoder, SrcDecoder } from 'solidity-ast/utils';\nimport { FullConfig } from './config';\nimport { DocItem, docItemTypes, isDocItem } from './doc-item';\nimport { Properties } from './templates';\nimport { clone } from './utils/clone';\nimport { isChild } from './utils/is-child';\nimport { mapValues } from './utils/map-values';\nimport { defineGetterMemoized } from './utils/memoized-getter';\n\nexport interface Build {\n  input: SolcInput;\n  output: SolcOutput;\n}\n\nexport interface BuildContext extends Build {\n  deref: ASTDereferencer;\n  decodeSrc: SrcDecoder;\n}\n\nexport type SiteConfig = Pick<FullConfig, 'pages' | 'exclude' | 'sourcesDir' | 'pageExtension'>;\nexport type PageStructure = SiteConfig['pages'];\nexport type PageAssigner = ((item: DocItem, file: SourceUnit, config: SiteConfig) => string | undefined);\n\nexport const pageAssigner: Record<PageStructure & string, PageAssigner> = {\n  single: (_1, _2, { pageExtension: ext }) => 'index' + ext,\n  items: (item, _, { pageExtension: ext }) => item.name + ext,\n  files: (_, file, { pageExtension: ext, sourcesDir }) =>\n    path.relative(sourcesDir, file.absolutePath).replace('.sol', ext),\n};\n\nexport interface Site {\n  items: DocItemWithContext[];\n  pages: Page[];\n}\n\nexport interface Page {\n  id: string;\n  items: DocItemWithContext[];\n}\n\nexport const DOC_ITEM_CONTEXT = '__item_context' as const;\nexport type DocItemWithContext = DocItem & { [DOC_ITEM_CONTEXT]: DocItemContext };\n\nexport interface DocItemContext {\n  page?: string;\n  item: DocItemWithContext;\n  contract?: ContractDefinition;\n  file: SourceUnit;\n  build: BuildContext;\n}\n\nexport function buildSite (builds: Build[], siteConfig: SiteConfig, properties: Properties = {}): Site {\n  const assign = typeof siteConfig.pages === 'string' ? pageAssigner[siteConfig.pages] : siteConfig.pages;\n\n  const seen = new Set<string>();\n  const items: DocItemWithContext[] = [];\n  const pages: Record<string, DocItemWithContext[]> = {};\n\n  // eslint-disable-next-line prefer-const\n  for (let { input, output } of builds) {\n    // Clone because we will mutate in order to add item context.\n    output = { ...output, sources: clone(output.sources) };\n\n    const deref = astDereferencer(output);\n    const decodeSrc = srcDecoder(input, output);\n    const build = { input, output, deref, decodeSrc };\n\n    for (const { ast: file } of Object.values(output.sources)) {\n      const isNewFile = !seen.has(file.absolutePath);\n      seen.add(file.absolutePath);\n\n      for (const topLevelItem of file.nodes) {\n        if (!isDocItem(topLevelItem)) continue;\n\n        const page = assignIfIncludedSource(assign, topLevelItem, file, siteConfig);\n\n        const withContext = defineContext(topLevelItem, build, file, page);\n        defineProperties(withContext, properties);\n\n        if (isNewFile && page !== undefined) {\n          (pages[page] ??= []).push(withContext);\n          items.push(withContext);\n        }\n\n        if (!isNodeType('ContractDefinition', topLevelItem)) {\n          continue;\n        }\n\n        for (const item of topLevelItem.nodes) {\n          if (!isDocItem(item)) continue;\n          if (isNewFile && page !== undefined) items.push(item as DocItemWithContext);\n          const contract = topLevelItem.nodeType === 'ContractDefinition' ? topLevelItem : undefined;\n          const withContext = defineContext(item, build, file, page, contract);\n          defineProperties(withContext, properties);\n        }\n      }\n    }\n  }\n\n  return {\n    items,\n    pages: Object.entries(pages).map(([id, pageItems]) => ({ id, items: pageItems })),\n  };\n}\n\nfunction defineContext (item: DocItem, build: BuildContext, file: SourceUnit, page?: string, contract?: ContractDefinition): DocItemWithContext {\n  return Object.assign(item, {\n    [DOC_ITEM_CONTEXT]: { build, file, contract, page, item: item as DocItemWithContext },\n  });\n}\n\nfunction defineProperties (item: DocItemWithContext, properties: Properties) {\n  for (const [prop, fn] of Object.entries(properties)) {\n    const original: unknown = (item as any)[prop];\n    defineGetterMemoized(item as any, prop, () => fn(item.__item_context, original));\n  }\n}\n\nfunction assignIfIncludedSource (\n  assign: PageAssigner,\n  item: DocItem,\n  file: SourceUnit,\n  config: SiteConfig,\n) {\n  return isFileIncluded(file.absolutePath, config)\n    ? assign(item, file, config)\n    : undefined;\n}\n\nfunction isFileIncluded (file: string, config: SiteConfig) {\n  return (\n    isChild(file, config.sourcesDir) &&\n    config.exclude.every(e => !isChild(file, path.join(config.sourcesDir, e)))\n  );\n}\n","/* eslint-disable @typescript-eslint/no-var-requires */\nimport { mapKeys } from './utils/map-keys';\nimport { DocItemContext } from './site';\n\nimport * as defaultProperties from './common/properties';\nimport * as themeHelpers from './themes/markdown/helpers'\n\nconst common = require('./themes/markdown/common.hbs');\nconst contract = require('./themes/markdown/contract.hbs');\nconst enum_ = require('./themes/markdown/enum.hbs');\nconst error = require('./themes/markdown/error.hbs');\nconst event = require('./themes/markdown/event.hbs');\nconst function_ = require('./themes/markdown/function.hbs');\nconst modifier = require('./themes/markdown/modifier.hbs');\nconst page = require('./themes/markdown/page.hbs');\nconst struct = require('./themes/markdown/struct.hbs');\nconst variable = require('./themes/markdown/variable.hbs');\nconst userDefinedValueType = require('./themes/markdown/user-defined-value-type.hbs');\n\nexport type PropertyGetter = (ctx: DocItemContext, original?: unknown) => unknown;\nexport type Properties = Record<string, PropertyGetter>;\n\nexport interface Templates {\n  partials?: Record<string, () => string>;\n  helpers?: Record<string, (...args: unknown[]) => string>;\n  properties?: Record<string, PropertyGetter>;\n}\n\n/**\n * Loads the templates that will be used for rendering a site based on a\n * default theme and user templates.\n *\n * The result contains all partials, helpers, and property getters defined in\n * the user templates and the default theme, where the user's take precedence\n * if there is a clash. Additionally, all theme partials and helpers are\n * included with the theme prefix, e.g. `markdown/contract` will be a partial.\n */\nexport async function loadTemplates(defaultTheme: string, root: string, userTemplatesPath?: string): Promise<Templates> {\n  const themes = await readThemes();\n\n  // Initialize templates with the default theme.\n  const templates: Required<Templates> = {\n    partials: { ...themes[defaultTheme]?.partials },\n    helpers: { ...themes[defaultTheme]?.helpers },\n    properties: { ...defaultProperties },\n  };\n\n  // Add partials and helpers from all themes, prefixed with the theme name.\n  for (const [themeName, theme] of Object.entries(themes)) {\n    const addPrefix = (k: string) => `${themeName}/${k}`;\n    Object.assign(templates.partials, mapKeys(theme.partials, addPrefix));\n    Object.assign(templates.helpers, mapKeys(theme.helpers, addPrefix));\n  }\n\n  return templates;\n}\n\n/**\n * Read templates and helpers from a directory.\n */\nexport async function readTemplates(): Promise<Required<Templates>> {\n  return {\n    partials: await readPartials(),\n    helpers: await readHelpers('helpers'),\n    properties: await readHelpers('properties'),\n  };\n}\n\nasync function readPartials() {\n  const partials: NonNullable<Templates['partials']> = {};\n\n  partials[\"common\"] = () => common\n  partials[\"contract\"] = () => contract\n  partials[\"enum\"] = () => enum_\n  partials[\"error\"] = () => error\n  partials[\"event\"] = () => event\n  partials[\"function\"] = () => function_\n  partials[\"modifier\"] = () => modifier\n  partials[\"page\"] = () => page\n  partials[\"struct\"] = () => struct\n  partials[\"variable\"] = () => variable\n  partials[\"user-defined-value-type\"] = () => userDefinedValueType\n\n  return partials;\n}\n\nasync function readHelpers(name: string) {\n\n  const helpers: Record<string, (...args: any[]) => any> = {};\n\n  for (const name in themeHelpers) {\n    if (typeof themeHelpers[name] === 'function') {\n      helpers[name] = themeHelpers[name];\n    }\n  }\n\n  return helpers;\n}\n\n/**\n * Reads all built-in themes into an object. Partials will always be found in\n * src/themes, whereas helpers may instead be found in dist/themes if TypeScript\n * can't be imported directly.\n */\nasync function readThemes(): Promise<Record<string, Required<Templates>>> {\n  const themes: Record<string, Required<Templates>> = {}\n  themes['markdown'] = await readTemplates()\n  return themes\n}\n","import { HelperOptions, Utils } from 'handlebars';\n\nexport * from '../../common/helpers';\n\n/**\n * Returns a Markdown heading marker. An optional number increases the heading level.\n *\n *    Input                  Output\n *    {{h}} {{name}}         # Name\n *    {{h 2}} {{name}}       ## Name\n */\nexport function h(opts: HelperOptions): string;\nexport function h(hsublevel: number, opts: HelperOptions): string;\nexport function h(hsublevel: number | HelperOptions, opts?: HelperOptions) {\n  const { hlevel } = getHLevel(hsublevel, opts);\n  return new Array(hlevel).fill('#').join('');\n};\n\n/**\n * Delineates a section where headings should be increased by 1 or a custom number.\n *\n *    {{#hsection}}\n *    {{>partial-with-headings}}\n *    {{/hsection}}\n */\nexport function hsection(opts: HelperOptions): string;\nexport function hsection(hsublevel: number, opts: HelperOptions): string;\nexport function hsection(this: unknown, hsublevel: number | HelperOptions, opts?: HelperOptions) {\n  let hlevel;\n  ({ hlevel, opts } = getHLevel(hsublevel, opts));\n  opts.data = Utils.createFrame(opts.data);\n  opts.data.hlevel = hlevel;\n  return opts.fn(this as unknown, opts);\n}\n\n/**\n * Returns a Markdown heading marker. An optional number increases the heading level.\n *\n *    Input                  Output\n *    {{h}} {{name}}         # Name\n *    {{h 2}} {{name}}       ## Name\n */\nexport function s(opts: HelperOptions): string;\nexport function s(hsublevel: number, opts: HelperOptions): string;\nexport function s(hsublevel: number | HelperOptions, opts?: HelperOptions) {\n  return ' --- '\n};\n\n/**\n * Helper for dealing with the optional hsublevel argument.\n */\nfunction getHLevel(hsublevel: number | HelperOptions, opts?: HelperOptions) {\n  if (typeof hsublevel === 'number') {\n    opts = opts!;\n    hsublevel = Math.max(1, hsublevel);\n  } else {\n    opts = hsublevel;\n    hsublevel = 1;\n  }\n  const contextHLevel: number = opts.data?.hlevel ?? 0;\n  return { opts, hlevel: contextHLevel + hsublevel };\n}\n","import { DocItemWithContext, DOC_ITEM_CONTEXT } from '../site';\n\nexport class ItemError extends Error {\n  constructor(msg: string, item: DocItemWithContext) {\n    const ctx = item[DOC_ITEM_CONTEXT];\n    const src = ctx && ctx.build.decodeSrc(item);\n    if (src) {\n      super(msg + ` (${src})`);\n    } else {\n      super(msg);\n    }\n  }\n}\n","export function arraysEqual<T>(a: T[], b: T[]): boolean;\nexport function arraysEqual<T, U>(a: T[], b: T[], mapFn: (x: T) => U): boolean;\nexport function arraysEqual<T>(a: T[], b: T[], mapFn = (x: T) => x): boolean {\n  return a.length === b.length && a.every((x, i) => mapFn(x) === mapFn(b[i]!));\n}\n","/**\n * Deep cloning good enough for simple objects like solc output. Types are not\n * sound because the function may lose information: non-enumerable properties,\n * symbols, undefined values, prototypes, etc.\n */\nexport const clone = <T>(obj: T): T => JSON.parse(JSON.stringify(obj));\n","/**\n * Iterates over all contiguous matches of the regular expression over the\n * text. Stops as soon as the regular expression no longer matches at the\n * current position.\n */\nexport function* execAll(re: RegExp, text: string) {\n  re = new RegExp(re, re.flags + (re.sticky ? '' : 'y'));\n\n  while (true) {\n    const match = re.exec(text);\n\n    // We break out of the loop if there is no match or if the empty string is\n    // matched because no progress will be made and it will loop indefinitely.\n    if (!match?.[0]) break;\n\n    yield match;\n  }\n}\n","import path from 'path';\n\nexport function isChild(file: string, parent: string) {\n  return path.normalize(file + path.sep).startsWith(path.normalize(parent + path.sep));\n}\n","import { DocItem } from '../doc-item';\n\nexport function itemType(item: DocItem): string {\n  return item.nodeType\n    .replace(/(Definition|Declaration)$/, '')\n    .replace(/(\\w)([A-Z])/g, '$1 $2');\n}\n","export function mapKeys<T>(obj: Record<string, T>, fn: (key: string) => string): Record<string, T> {\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [fn(k), v]));\n}\n\n","export function mapValues<T, U>(obj: Record<string, T>, fn: (value: T) => U): Record<string, U> {\n  const res: Record<string, U> = {};\n  for (const [k, v] of Object.entries(obj)) {\n    res[k] = fn(v);\n  }\n  return res;\n}\n\nexport function filterValues<T, U extends T>(obj: Record<string, T>, fn: (value: T) => value is U): Record<string, U>;\nexport function filterValues<T>(obj: Record<string, T>, fn: (value: T) => boolean): Record<string, T>;\nexport function filterValues<T>(obj: Record<string, T>, fn: (value: T) => boolean): Record<string, T> {\n  const res: Record<string, T> = {};\n  for (const [k, v] of Object.entries(obj)) {\n    if (fn(v)) {\n      res[k] = v;\n    }\n  }\n  return res;\n}\n","export function defineGetterMemoized<K extends keyof any, T, O extends { [k in K]?: T }>(obj: O, key: K, getter: () => T) {\n  let state: 'todo' | 'doing' | 'done' = 'todo';\n  let value: T;\n\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    get() {\n      switch (state) {\n      case 'done':\n        return value;\n\n      case 'doing':\n        throw new Error(\"Detected recursion\");\n\n      case 'todo':\n        state = 'doing';\n        value = getter();\n        state = 'done';\n        return value;\n      }\n    }\n  });\n}\n","import { FunctionDefinition } from 'solidity-ast';\nimport { findAll } from 'solidity-ast/utils';\nimport { DocItemWithContext, DOC_ITEM_CONTEXT } from '../site';\nimport { arraysEqual } from './arrays-equal';\nimport { execAll } from './execall';\nimport { itemType } from './item-type';\nimport { ItemError } from './ItemError';\nimport { readItemDocs } from './read-item-docs';\nimport { getContractsInScope } from './scope';\n\nexport interface NatSpec {\n  title?: string;\n  notice?: string;\n  dev?: string;\n  params?: {\n    name: string;\n    description: string;\n  }[];\n  returns?: {\n    name?: string;\n    description: string;\n  }[];\n  custom?: {\n    [tag: string]: string;\n  };\n}\n\nexport function parseNatspec(item: DocItemWithContext): NatSpec {\n  if (!item[DOC_ITEM_CONTEXT]) throw new Error(`Not an item or item is missing context`);\n\n  let res: NatSpec = {};\n\n  const docSource = readItemDocs(item);\n  const docString = docSource !== undefined\n    ? cleanUpDocstringFromSource(docSource)\n    : 'documentation' in item && item.documentation\n      ? typeof item.documentation === 'string'\n        ? item.documentation\n        : cleanUpDocstringFromSolc(item.documentation.text)\n      : '';\n\n  const tagMatches = execAll(\n    /^(?:@(\\w+|custom:[a-z][a-z-]*) )?((?:(?!^@(?:\\w+|custom:[a-z][a-z-]*) )[^])*)/m,\n    docString,\n  );\n\n  let inheritFrom: FunctionDefinition | undefined;\n\n  for (const [, tag = 'notice', content] of tagMatches) {\n    if (content === undefined) throw new ItemError('Unexpected error', item);\n\n    if (tag === 'dev' || tag === 'notice') {\n      res[tag] ??= '';\n      res[tag] += content;\n    }\n\n    if (tag === 'title') {\n      res.title = content.trim();\n    }\n\n    if (tag === 'param') {\n      const paramMatches = content.match(/(\\w+) ([^]*)/);\n      if (paramMatches) {\n        const [, name, description] = paramMatches as [string, string, string];\n        res.params ??= [];\n        res.params.push({ name, description: description.trim() });\n      }\n    }\n\n    if (tag === 'return') {\n      if (!('returnParameters' in item)) {\n        throw new ItemError(`Item does not contain return parameters`, item);\n      }\n      res.returns ??= [];\n      const i = res.returns.length;\n      const p = item.returnParameters.parameters[i];\n      if (p === undefined) {\n        throw new ItemError('Got more @return tags than expected', item);\n      }\n      if (!p.name) {\n        res.returns.push({ description: content.trim() });\n      } else {\n        const paramMatches = content.match(/(\\w+)( ([^]*))?/);\n        if (!paramMatches || paramMatches[1] !== p.name) {\n          throw new ItemError(`Expected @return tag to start with name '${p.name}'`, item);\n        }\n        const [, name, description] = paramMatches as [string, string, string?];\n        res.returns.push({ name, description: description?.trim() ?? '' });\n      }\n    }\n\n    if (tag?.startsWith('custom:')) {\n      const key = tag.replace(/^custom:/, '');\n      res.custom ??= {};\n      res.custom[key] ??= '';\n      res.custom[key] += content;\n    }\n\n    if (tag === 'inheritdoc') {\n      if (!(item.nodeType === 'FunctionDefinition' || item.nodeType === 'VariableDeclaration')) {\n        throw new ItemError(`Expected function or variable but saw ${itemType(item)}`, item);\n      }\n      const parentContractName = content.trim();\n      const parentContract = getContractsInScope(item)[parentContractName];\n      if (!parentContract) {\n        throw new ItemError(`Parent contract '${parentContractName}' not found`, item);\n      }\n      inheritFrom = [...findAll('FunctionDefinition', parentContract)].find(f => item.baseFunctions?.includes(f.id));\n    }\n  }\n\n  if (docString.length === 0) {\n    if ('baseFunctions' in item && item.baseFunctions?.length === 1) {\n      const baseFn = item[DOC_ITEM_CONTEXT].build.deref('FunctionDefinition', item.baseFunctions[0]!);\n      const shouldInherit = item.nodeType === 'VariableDeclaration' || arraysEqual(item.parameters.parameters, baseFn.parameters.parameters, p => p.name);\n      if (shouldInherit) {\n        inheritFrom = baseFn;\n      }\n    }\n  }\n\n  if (res.dev) res.dev = res.dev.trim();\n  if (res.notice) res.notice = res.notice.trim();\n\n  if (inheritFrom) {\n    res = { ...parseNatspec(inheritFrom as DocItemWithContext), ...res };\n  }\n\n  return res;\n}\n\n// Fix solc buggy parsing of doc comments.\n// Reverse engineered from solc behavior.\nfunction cleanUpDocstringFromSolc(text: string) {\n  return text\n    .replace(/\\n\\n?^[ \\t]*(?:\\*|\\/\\/\\/)/mg, '\\n\\n')\n    .replace(/^[ \\t]?/mg, '');\n}\n\nfunction cleanUpDocstringFromSource(text: string) {\n  return text\n    .replace(/^\\/\\*\\*(.*)\\*\\/$/s, '$1')\n    .trim()\n    .replace(/^[ \\t]*(\\*|\\/\\/\\/)[ \\t]?/mg, '');\n}\n","\nexport function normalizeContractPath(contractPath: string): string[]{\n  const paths = contractPath.split('/')\n  const filename = paths[paths.length - 1]\n  let folders = ''\n  for (let i = 0; i < paths.length - 1; i++) {\n    if (i !== paths.length -1) {\n      folders += `${paths[i]}/`\n    }\n  }\n  const resultingPath = `${folders}${filename}`\n  return [folders,resultingPath, filename]\n}\n","import { DocItemWithContext, DOC_ITEM_CONTEXT, Build } from '../site';\n\nexport function readItemDocs(item: DocItemWithContext): string | undefined {\n  const { build } = item[DOC_ITEM_CONTEXT];\n  // Note that Solidity 0.5 has item.documentation: string even though the\n  // types do not reflect that. This is why we check typeof === object.\n  if ('documentation' in item && item.documentation && typeof item.documentation === 'object') {\n    const { source, start, length } = decodeSrc(item.documentation.src, build);\n    const content = build.input.sources[source]?.content;\n    if (content !== undefined) {\n      return Buffer.from(content, 'utf8').slice(start, start + length).toString('utf8');\n    }\n  }\n}\n\nfunction decodeSrc(src: string, build: Build): { source: string; start: number; length: number } {\n  const [start, length, sourceId] = src.split(':').map(s => parseInt(s));\n  if (start === undefined || length === undefined || sourceId === undefined) {\n    throw new Error(`Bad source string ${src}`);\n  }\n  const source = Object.keys(build.output.sources).find(s => build.output.sources[s]?.id === sourceId);\n  if (source === undefined) {\n    throw new Error(`No source with id ${sourceId}`);\n  }\n  return { source, start, length };\n}\n","import { ContractDefinition, SourceUnit } from \"solidity-ast\";\nimport { findAll, isNodeType } from \"solidity-ast/utils\";\nimport { DocItemWithContext } from \"../site\";\nimport { filterValues, mapValues } from './map-values';\nimport { mapKeys } from './map-keys';\n\ntype Definition = SourceUnit['nodes'][number] & { name: string };\ntype Scope = { [name in string]: () => { namespace: Scope } | { definition: Definition } };\n\nexport function getContractsInScope(item: DocItemWithContext) {\n  const cache = new WeakMap<SourceUnit, Scope>();\n\n  return filterValues(\n    flattenScope(run(item.__item_context.file)),\n    isNodeType('ContractDefinition'),\n  );\n\n  function run(file: SourceUnit): Scope {\n    if (cache.has(file)) {\n      return cache.get(file)!;\n    }\n\n    const scope: Scope = {};\n\n    cache.set(file, scope);\n\n    for (const c of file.nodes) {\n      if ('name' in c) {\n        scope[c.name] = () => ({ definition: c });\n      }\n    }\n\n    for (const i of findAll('ImportDirective', file)) {\n      const importedFile = item.__item_context.build.deref('SourceUnit', i.sourceUnit);\n      const importedScope = run(importedFile);\n      if (i.unitAlias) {\n        scope[i.unitAlias] = () => ({ namespace: importedScope });\n      } else if (i.symbolAliases.length === 0) {\n        Object.assign(scope, importedScope);\n      } else {\n        for (const a of i.symbolAliases) {\n          // Delayed function call supports circular dependencies\n          scope[a.local ?? a.foreign.name] = importedScope[a.foreign.name] ?? (() => importedScope[a.foreign.name]!());\n        }\n      }\n    };\n\n    return scope;\n  }\n}\n\nfunction flattenScope(scope: Scope): Record<string, Definition> {\n  return Object.fromEntries(\n    Object.entries(scope).flatMap(([k, fn]) => {\n      const v = fn();\n      if ('definition' in v) {\n        return [[k, v.definition] as const];\n      } else {\n        return Object.entries(mapKeys(flattenScope(v.namespace), k2 => k + '.' + k2));\n      }\n    }),\n  );\n}\n","import React from 'react'\nimport { createRoot } from 'react-dom/client';\nimport App from './app/App'\n\nconst container = document.getElementById('root');\n\nif (container) {\n  createRoot(container).render(<React.StrictMode>\n    <App />\n  </React.StrictMode>);\n}\n","// extracted by mini-css-extract-plugin\nexport {};","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["client","DocGenClient","App","useState","themeType","setThemeType","hasBuild","setHasBuild","fileName","setFileName","useEffect","watchThemeSwitch","eventEmitter","on","theme","build","docs","generateDocs","EventEmitter","methods","createClient","onload","then","setListeners","call","currentTheme","emit","source","languageVersion","data","input","sources","output","segmentedPathList","normalizeContractPath","length","contractPath","action","path","builds","userConfig","config","defaults","sourcesDir","loadTemplates","root","templates","site","buildSite","properties","renderedSite","render","collapseNewlines","id","contents","temp","split","newFileName","push","openDocs","docgen","PluginClient","trim","text","joinLines","replace","formatVariable","v","typeName","typeDescriptions","typeString","concat","name","join","eq","a","b","slug","str","undefined","Error","names","params","map","p","typedParams","type","indexed","item","itemType","natspec","parseNatspec","original","nodeType","kind","fullName","contract","signature","parameters","returns","returnParameters","head","res","visibility","stateMutability","virtual","getParams","i","find","q","j","description","DOC_ITEM_CONTEXT","items","nodes","filter","isNodeType","docItemTypes","n","functions","findAll","f","events","modifiers","errors","variables","stateVariable","types","anchor","inheritance","linearizedBaseContracts","deref","c","hasfunctions","some","hasevents","inheritedfunctions","baseFunctions","Set","flatMap","has","process","cwd","outputDir","pages","exclude","pageExtension","_","isDocItem","node","includes","renderPage","buildRenderer","renderedPages","page","itemPartialName","toLowerCase","itemPartial","options","__item_context","partial","partials","readmeHelper","H","opts","renderedItems","Object","fromEntries","SafeString","compile","fs","readFileSync","pageTemplate","Handlebars","create","getBody","registerPartial","entries","registerHelper","helpers","fn","pageAssigner","single","_1","_2","ext","files","file","relative","absolutePath","siteConfig","assign","seen","clone","astDereferencer","decodeSrc","srcDecoder","values","ast","isNewFile","add","topLevelItem","assignIfIncludedSource","withContext","defineContext","defineProperties","pageItems","prop","defineGetterMemoized","isFileIncluded","isChild","every","e","common","require","enum_","error","event","function_","modifier","struct","variable","userDefinedValueType","defaultTheme","userTemplatesPath","readThemes","themes","defaultProperties","themeName","addPrefix","k","mapKeys","readTemplates","readPartials","readHelpers","themeHelpers","h","hsublevel","getHLevel","hlevel","Array","fill","hsection","Utils","createFrame","s","Math","max","contextHLevel","ItemError","msg","ctx","src","arraysEqual","mapFn","x","obj","JSON","parse","stringify","execAll","re","RegExp","flags","sticky","match","exec","parent","normalize","sep","startsWith","mapValues","filterValues","key","getter","state","value","defineProperty","enumerable","get","docSource","readItemDocs","docString","cleanUpDocstringFromSource","documentation","cleanUpDocstringFromSolc","tagMatches","inheritFrom","tag","content","title","paramMatches","custom","parentContractName","parentContract","getContractsInScope","baseFn","shouldInherit","dev","notice","paths","filename","folders","resultingPath","start","Buffer","from","slice","toString","parseInt","sourceId","keys","cache","WeakMap","flattenScope","run","scope","set","definition","importedFile","sourceUnit","importedScope","unitAlias","namespace","symbolAliases","local","foreign","k2","container","document","getElementById","createRoot"],"sourceRoot":""}
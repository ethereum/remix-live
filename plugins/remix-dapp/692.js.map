{"version":3,"file":"692.js","mappings":"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","sources":["webpack://remix-dapp/../../node_modules/@walletconnect/modal-core/src/controllers/RouterCtrl.ts","webpack://remix-dapp/../../node_modules/@walletconnect/modal-core/src/utils/CoreUtil.ts","webpack://remix-dapp/../../node_modules/@walletconnect/modal-core/src/controllers/EventsCtrl.ts","webpack://remix-dapp/../../node_modules/@walletconnect/modal-core/src/controllers/OptionsCtrl.ts","webpack://remix-dapp/../../node_modules/@walletconnect/modal-core/src/controllers/ConfigCtrl.ts","webpack://remix-dapp/../../node_modules/@walletconnect/modal-core/src/utils/ExplorerUtil.ts","webpack://remix-dapp/../../node_modules/@walletconnect/modal-core/src/controllers/ExplorerCtrl.ts","webpack://remix-dapp/../../node_modules/@walletconnect/modal-core/src/controllers/ModalCtrl.ts","webpack://remix-dapp/../../node_modules/@walletconnect/modal-core/src/controllers/ThemeCtrl.ts","webpack://remix-dapp/../../node_modules/@walletconnect/modal-core/src/controllers/ToastCtrl.ts","webpack://remix-dapp/../../node_modules/@walletconnect/modal/src/client.ts"],"sourcesContent":["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  reset(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    if (state.history.length > 1) {\n      state.history[state.history.length - 1] = view\n      state.view = view\n    }\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  },\n\n  setData(data: RouterCtrlState['data']) {\n    state.data = data\n  }\n}\n","import { RouterCtrl } from '../controllers/RouterCtrl'\n\nexport const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  WCM_VERSION: 'WCM_VERSION',\n\n  RECOMMENDED_WALLET_AMOUNT: 9,\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isIos() {\n    const ua = navigator.userAgent.toLowerCase()\n\n    return CoreUtil.isMobile() && (ua.includes('iphone') || ua.includes('ipad'))\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  isArray<T>(data?: T | T[]): data is T[] {\n    return Array.isArray(data) && data.length > 0\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    try {\n      localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n    } catch {\n      console.info('Unable to set WalletConnect deep link')\n    }\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    try {\n      const [href] = wcUri.split('?')\n      localStorage.setItem(\n        CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n        JSON.stringify({ href, name: 'Android' })\n      )\n    } catch {\n      console.info('Unable to set WalletConnect android deep link')\n    }\n  },\n\n  removeWalletConnectDeepLink() {\n    try {\n      localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n    } catch {\n      console.info('Unable to remove WalletConnect deep link')\n    }\n  },\n\n  setModalVersionInStorage() {\n    try {\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(CoreUtil.WCM_VERSION, process.env.ROLLUP_WCM_VERSION ?? 'UNKNOWN')\n      }\n    } catch {\n      console.info('Unable to set Web3Modal version in storage')\n    }\n  },\n\n  getWalletRouterData() {\n    const routerData = RouterCtrl.state.data?.Wallet\n    if (!routerData) {\n      throw new Error('Missing \"Wallet\" view data')\n    }\n\n    return routerData\n  }\n}\n","import { proxy, snapshot, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { EventsCtrlState, ModalEvent, ModalEventData } from '../types/controllerTypes'\n\n// -- helpers ------------------------------------------------------ //\nconst isEnabled =\n  typeof location !== 'undefined' &&\n  (location.hostname.includes('localhost') || location.protocol.includes('https'))\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<EventsCtrlState>({\n  enabled: isEnabled,\n  userSessionId: '',\n  events: [],\n  connectedWalletId: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const EventsCtrl = {\n  state,\n\n  subscribe(callback: (newEvent: ModalEvent) => void) {\n    return valtioSub(state.events, () => callback(snapshot(state.events[state.events.length - 1])))\n  },\n\n  initialize() {\n    if (state.enabled && typeof crypto?.randomUUID !== 'undefined') {\n      state.userSessionId = crypto.randomUUID()\n    }\n  },\n\n  setConnectedWalletId(connectedWalletId: EventsCtrlState['connectedWalletId']) {\n    state.connectedWalletId = connectedWalletId\n  },\n\n  click(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'CLICK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  track(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'TRACK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  view(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'VIEW' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  chains: undefined,\n  walletConnectUri: undefined,\n  isAuth: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setWalletConnectUri(walletConnectUri: OptionsCtrlState['walletConnectUri']) {\n    state.walletConnectUri = walletConnectUri\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setIsAuth(isAuth: OptionsCtrlState['isAuth']) {\n    state.isAuth = isAuth\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { EventsCtrl } from './EventsCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chains: undefined,\n  enableAuthMode: false,\n  enableExplorer: true,\n  explorerExcludedWalletIds: undefined,\n  explorerRecommendedWalletIds: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    EventsCtrl.initialize()\n    OptionsCtrl.setChains(config.chains)\n    OptionsCtrl.setIsAuth(Boolean(config.enableAuthMode))\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n\n    CoreUtil.setModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n","import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingParams, ListingResponse } from '../types/controllerTypes'\n\n// -- Helpers -------------------------------------------------------\nconst W3M_API = 'https://explorer-api.walletconnect.com'\nconst SDK_TYPE = 'wcm'\nconst SDK_VERSION = `js-${process.env.ROLLUP_WCM_VERSION}`\n\nasync function fetchListings(endpoint: string, params: ListingParams) {\n  const allParams = { sdkType: SDK_TYPE, sdkVersion: SDK_VERSION, ...params }\n  const url = new URL(endpoint, W3M_API)\n  url.searchParams.append('projectId', ConfigCtrl.state.projectId)\n  Object.entries(allParams).forEach(([key, value]) => {\n    if (value) {\n      url.searchParams.append(key, String(value))\n    }\n  })\n  const request = await fetch(url)\n\n  return request.json() as Promise<ListingResponse>\n}\n\n// -- Utility -------------------------------------------------------\nexport const ExplorerUtil = {\n  async getDesktopListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getDesktopListings', params)\n  },\n\n  async getMobileListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getMobileListings', params)\n  },\n\n  async getInjectedListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getInjectedListings', params)\n  },\n\n  async getAllListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getAllListings', params)\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, ListingParams } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst isMobile = CoreUtil.isMobile()\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getRecomendedWallets() {\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n\n    // Don't fetch recomended wallets\n    if (\n      explorerRecommendedWalletIds === 'NONE' ||\n      (explorerExcludedWalletIds === 'ALL' && !explorerRecommendedWalletIds)\n    ) {\n      return state.recomendedWallets\n    }\n\n    // Fetch only recomended wallets defined in config\n    if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      const recommendedIds = explorerRecommendedWalletIds.join(',')\n      const params = { recommendedIds }\n      const { listings } = await ExplorerUtil.getAllListings(params)\n      const listingsArr = Object.values(listings)\n      listingsArr.sort((a, b) => {\n        const aIndex = explorerRecommendedWalletIds.indexOf(a.id)\n        const bIndex = explorerRecommendedWalletIds.indexOf(b.id)\n\n        return aIndex - bIndex\n      })\n      state.recomendedWallets = listingsArr\n    }\n\n    // Fetch default recomended wallets based on user's device, options and excluded config\n    else {\n      const { chains, isAuth } = OptionsCtrl.state\n      const chainsFilter = chains?.join(',')\n      const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds)\n      const params = {\n        page: 1,\n        sdks: isAuth ? 'auth_v1' : undefined,\n        entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n        chains: chainsFilter,\n        version: 2,\n        excludedIds: isExcluded ? explorerExcludedWalletIds.join(',') : undefined\n      }\n      const { listings } = isMobile\n        ? await ExplorerUtil.getMobileListings(params)\n        : await ExplorerUtil.getDesktopListings(params)\n      state.recomendedWallets = Object.values(listings)\n    }\n\n    return state.recomendedWallets\n  },\n\n  async getWallets(params: ListingParams) {\n    const extendedParams: ListingParams = { ...params }\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n    const { recomendedWallets } = state\n\n    // Don't fetch any wallets if all are excluded\n    if (explorerExcludedWalletIds === 'ALL') {\n      return state.wallets\n    }\n\n    // Don't fetch recomended wallets, as we already have these\n    if (recomendedWallets.length) {\n      extendedParams.excludedIds = recomendedWallets.map(wallet => wallet.id).join(',')\n    } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      extendedParams.excludedIds = explorerRecommendedWalletIds.join(',')\n    }\n\n    // Don't fetch user defined excluded wallets & recomended wallets\n    if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n      extendedParams.excludedIds = [extendedParams.excludedIds, explorerExcludedWalletIds]\n        .filter(Boolean)\n        .join(',')\n    }\n\n    // Fetch only auth wallets\n    if (OptionsCtrl.state.isAuth) {\n      extendedParams.sdks = 'auth_v1'\n    }\n\n    const { page, search } = params\n    const { listings: listingsObj, total } = isMobile\n      ? await ExplorerUtil.getMobileListings(extendedParams)\n      : await ExplorerUtil.getDesktopListings(extendedParams)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return ExplorerUtil.getWalletImageUrl(imageId)\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return ExplorerUtil.getAssetImageUrl(imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri: string\n  chains?: string[]\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isUiLoaded, isDataLoaded } = OptionsCtrl.state\n      CoreUtil.removeWalletConnectDeepLink()\n\n      OptionsCtrl.setWalletConnectUri(options?.uri)\n      OptionsCtrl.setChains(options?.chains)\n      RouterCtrl.reset('ConnectWallet')\n\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          const opts = OptionsCtrl.state\n          if (opts.isUiLoaded && opts.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","import type { ConfigCtrlState, ThemeCtrlState } from '@walletconnect/modal-core'\nimport { ConfigCtrl, ModalCtrl, OptionsCtrl, ThemeCtrl } from '@walletconnect/modal-core'\n\n/**\n * Types\n */\nexport type WalletConnectModalConfig = ConfigCtrlState & ThemeCtrlState\n\n/**\n * Client\n */\nexport class WalletConnectModal {\n  public constructor(config: WalletConnectModalConfig) {\n    ThemeCtrl.setThemeConfig(config)\n    ConfigCtrl.setConfig(config)\n    this.initUi()\n  }\n\n  private async initUi() {\n    if (typeof window !== 'undefined') {\n      await import('@walletconnect/modal-ui')\n      const modal = document.createElement('wcm-modal')\n      document.body.insertAdjacentElement('beforeend', modal)\n      OptionsCtrl.setIsUiLoaded(true)\n    }\n  }\n\n  public openModal = ModalCtrl.open\n\n  public closeModal = ModalCtrl.close\n\n  public subscribeModal = ModalCtrl.subscribe\n\n  public setTheme = ThemeCtrl.setThemeConfig\n}\n"],"names":["state","proxy","RouterCtrl","callback","valtioSub","view","data","last","CoreUtil","ua","url","appUrl","wcUri","name","safeAppUrl","encodedWcUrl","miliseconds","resolve","href","target","_a","routerData","isEnabled","EventsCtrl","snapshot","connectedWalletId","event","OptionsCtrl","chains","walletConnectUri","isCustomDesktop","isCustomMobile","isDataLoaded","isUiLoaded","isAuth","ConfigCtrl","config","_b","d","p","I","P","m","t","s","e","l","W3M_API","SDK_TYPE","SDK_VERSION","fetchListings","endpoint","params","allParams","__spreadValues","key","value","ExplorerUtil","imageId","E","u","h","y","x","f","isMobile","ExplorerCtrl","explorerRecommendedWalletIds","explorerExcludedWalletIds","listings","listingsArr","a","b","aIndex","bIndex","chainsFilter","isExcluded","extendedParams","recomendedWallets","wallet","page","search","listingsObj","total","type","ModalCtrl","options","interval","opts","i","c","r","isDarkMode","ThemeCtrl","theme","themeMode","themeVariables","ToastCtrl","message","variant","WalletConnectModal","modal"],"sourceRoot":""}
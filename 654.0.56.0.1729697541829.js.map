{"version":3,"file":"654.0.56.0.1729697541829.js","mappings":"oRAAA,m7C","sources":["webpack:///../../libs/remix-ws-templates/src/script-templates/etherscan/verifyScript.ts"],"sourcesContent":["export default \"/**\\n * @param {string} apikey - etherscan api key\\n * @param {string} contractAddress - Address of the contract to verify\\n * @param {string} contractArguments - Parameters used in the contract constructor during the initial deployment. It should be the hex encoded value\\n * @param {string} contractName - Name of the contract\\n * @param {string} contractFile - File where the contract is located\\n * @param {number | string} chainRef - Network chain id or API URL (optional)\\n * @param {boolean} isProxyContract - true, if contract is a proxy contract (optional)\\n * @param {string} expectedImplAddress - Implementation contract address, in case of proxy contract verification (optional)\\n * @returns {{ guid, status, message, succeed }} verification result\\n */\\nexport const verify = async (apikey: string, contractAddress: string, contractArguments: string, contractName: string, contractFile: string, chainRef?: number | string, isProxyContract?: boolean, expectedImplAddress?: string) => {\\n  const compilationResultParam = await remix.call('compilerArtefacts' as any, 'getCompilerAbstract', contractFile)\\n  console.log('verifying.. ' + contractName)\\n  // update apiKey and chainRef to verify contract on multiple networks\\n  return await remix.call('etherscan' as any, 'verify', apikey, contractAddress, contractArguments, contractName, compilationResultParam, chainRef, isProxyContract, expectedImplAddress)\\n}\\n\";"],"names":[],"sourceRoot":""}
{"version":3,"file":"5451.0.36.1.1695910659174.js","mappings":"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","sources":["webpack:///./src/blockchain/providers/worker-vm.ts","webpack:///../../libs/remix-lib/src/eventManager.ts","webpack:///../../libs/remix-lib/src/execution/eventsDecoder.ts","webpack:///../../libs/remix-lib/src/execution/forkAt.ts","webpack:///../../libs/remix-lib/src/execution/logsManager.ts","webpack:///../../libs/remix-lib/src/execution/txExecution.ts","webpack:///../../libs/remix-lib/src/execution/txFormat.ts","webpack:///../../libs/remix-lib/src/execution/txHelper.ts","webpack:///../../libs/remix-lib/src/execution/txListener.ts","webpack:///../../libs/remix-lib/src/execution/txRunner.ts","webpack:///../../libs/remix-lib/src/execution/txRunnerVM.ts","webpack:///../../libs/remix-lib/src/execution/txRunnerWeb3.ts","webpack:///../../libs/remix-lib/src/execution/typeConversion.ts","webpack:///../../libs/remix-lib/src/hash.ts","webpack:///../../libs/remix-lib/src/helpers/compilerHelper.ts","webpack:///../../libs/remix-lib/src/helpers/hhconsoleSigs.ts","webpack:///../../libs/remix-lib/src/helpers/txResultHelper.ts","webpack:///../../libs/remix-lib/src/helpers/uiHelper.ts","webpack:///../../libs/remix-lib/src/index.ts","webpack:///../../libs/remix-lib/src/query-params.ts","webpack:///../../libs/remix-lib/src/storage.ts","webpack:///../../libs/remix-lib/src/util.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/amd options","webpack:///webpack/runtime/chunk loaded","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/ensure chunk","webpack:///webpack/runtime/get javascript chunk filename","webpack:///webpack/runtime/get mini-css chunk filename","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/importScripts chunk loading","webpack:///webpack/runtime/startup chunk dependencies","webpack:///webpack/startup"],"sourcesContent":["import { Provider } from '@remix-project/remix-simulator'\n\nlet provider: Provider = null\nself.onmessage = (e: MessageEvent) => {\n  const data = e.data\n  switch (data.cmd) {\n  case 'init': \n  {\n    provider = new Provider({ fork: data.fork, nodeUrl: data.nodeUrl, blockNumber: data.blockNumber })\n    provider.init().then(() => {\n      self.postMessage({\n        cmd: 'initiateResult',\n        stamp: data.stamp\n      })\n    }).catch((error) => {\n      self.postMessage({\n        cmd: 'initiateResult',\n        error,\n        stamp: data.stamp\n      })\n    })\n    break\n  }\n  case 'sendAsync':\n  {\n    if (provider) {\n      provider.sendAsync(data.query, (error, result) => {\n        self.postMessage({\n          cmd: 'sendAsyncResult',\n          error,\n          result,\n          stamp: data.stamp\n        })\n      })\n    } else {\n      self.postMessage({\n        cmd: 'sendAsyncResult',\n        error: 'Provider not instantiated',\n        result: null,\n        stamp: data.stamp\n      })\n    }\n      \n    break\n  }\n  case 'addAccount':\n  {\n    if (provider) {\n      provider.Accounts._addAccount(data.privateKey, data.balance)\n    }\n      \n    break\n  }\n  case 'newAccount':\n  {\n    if (provider) {\n      provider.Accounts.newAccount((error, address: string) => {\n        if (error) {\n          self.postMessage({\n            cmd: 'newAccountResult',\n            error,\n            stamp: data.stamp\n          })\n        } else {\n          self.postMessage({\n            cmd: 'newAccountResult',\n            result: address,\n            stamp: data.stamp\n          })\n        }          \n      })\n    }\n      \n    break\n  }  \n  }\n}\n","'use strict'\n\nexport class EventManager {\n  registered\n  anonymous\n\n  constructor () {\n    this.registered = {}\n    this.anonymous = {}\n  }\n\n  /*\n    * Unregister a listener.\n    * Note that if obj is a function. the unregistration will be applied to the dummy obj {}.\n    *\n    * @param {String} eventName  - the event name\n    * @param {Object or Func} obj - object that will listen on this event\n    * @param {Func} func         - function of the listeners that will be executed\n  */\n  unregister (eventName, obj, func) {\n    if (!this.registered[eventName]) {\n      return\n    }\n    if (obj instanceof Function) {\n      func = obj\n      obj = this.anonymous\n    }\n    for (const reg in this.registered[eventName]) {\n      if ((this.registered[eventName][reg].obj === obj) && (this.registered[eventName][reg].func.toString() === func.toString())) {\n        this.registered[eventName].splice(reg, 1)\n      }\n    }\n  }\n\n  /*\n    * Register a new listener.\n    * Note that if obj is a function, the function registration will be associated with the dummy object {}\n    *\n    * @param {String} eventName  - the event name\n    * @param {Object or Func} obj - object that will listen on this event\n    * @param {Func} func         - function of the listeners that will be executed\n  */\n  register (eventName, obj, func?) {\n    if (!this.registered[eventName]) {\n      this.registered[eventName] = []\n    }\n    if (obj instanceof Function) {\n      func = obj\n      obj = this.anonymous\n    }\n    this.registered[eventName].push({ obj, func })\n  }\n\n  /*\n    * trigger event.\n    * Every listener have their associated function executed\n    *\n    * @param {String} eventName  - the event name\n    * @param {Array}j - argument that will be passed to the executed function.\n  */\n  trigger (eventName, args) {\n    if (!this.registered[eventName]) {\n      return\n    }\n    for (const listener in this.registered[eventName]) {\n      const l = this.registered[eventName][listener]\n      if (l.func) l.func.apply(l.obj === this.anonymous ? {} : l.obj, args)\n    }\n  }\n}\n","'use strict'\nimport { ethers } from 'ethers'\nimport { visitContracts } from './txHelper'\n\n/**\n  * Register to txListener and extract events\n  *\n  */\nexport class EventsDecoder {\n  resolveReceipt\n\n  constructor ({ resolveReceipt }) {\n    this.resolveReceipt = resolveReceipt\n  }\n\n  /**\n  * use Transaction Receipt to decode logs. assume that the transaction as already been resolved by txListener.\n  * logs are decoded only if the contract if known by remix.\n  *\n  * @param {Object} tx - transaction object\n  * @param {Function} cb - callback\n  */\n  parseLogs (tx, contractName, compiledContracts, cb) {\n    if (tx.isCall) return cb(null, { decoded: [], raw: [] })\n    this.resolveReceipt(tx, (error, receipt) => {\n      if (error) return cb(error)\n      this._decodeLogs(tx, receipt, contractName, compiledContracts, cb)\n    })\n  }\n\n  _decodeLogs (tx, receipt, contract, contracts, cb) {\n    if (!contract || !receipt) {\n      return cb('cannot decode logs - contract or receipt not resolved ')\n    }\n    if (!receipt.logs) {\n      return cb(null, { decoded: [], raw: [] })\n    }\n    this._decodeEvents(tx, receipt.logs, contract, contracts, cb)\n  }\n\n  _eventABI (contract): Record<string, { event, inputs, object, abi }> {\n    const eventABI: Record<string, { event, inputs, object, abi }> = {}\n    const abi = new ethers.utils.Interface(contract.abi)\n    for (const e in abi.events) {\n      const event = abi.getEvent(e)\n      eventABI[abi.getEventTopic(e).replace('0x', '')] = { event: event.name, inputs: event.inputs, object: event, abi: abi }\n    }\n    return eventABI\n  }\n\n  _eventsABI (compiledContracts): Record<string, unknown> {\n    const eventsABI: Record<string, unknown> = {}\n    visitContracts(compiledContracts, (contract) => {\n      eventsABI[contract.name] = this._eventABI(contract.object)\n    })\n    return eventsABI\n  }\n\n  _event (hash, eventsABI) {\n    // get all the events responding to that hash.\n    const contracts = []\n    for (const k in eventsABI) {\n      if (eventsABI[k][hash]) {\n        const event = eventsABI[k][hash]\n        for (const input of event.inputs) {\n          if (input.type === 'function') {\n            input.type = 'bytes24'\n            input.baseType = 'bytes24'\n          }\n        }\n        contracts.push(event)\n      }\n    }\n    return contracts\n  }\n\n  _stringifyBigNumber (value): string {\n    return value._isBigNumber ? value.toString() : value\n  }\n\n  _stringifyEvent (value) {\n    if (value === null || value === undefined) return ' - '\n    if (value._ethersType) value.type = value._ethersType\n    if (Array.isArray(value)) {\n      // for struct && array\n      return value.map((item) => { return this._stringifyEvent(item) })\n    } else {\n      return this._stringifyBigNumber(value)\n    }\n  }\n\n  _decodeEvents (tx, logs, contractName, compiledContracts, cb) {\n    const eventsABI = this._eventsABI(compiledContracts)\n    const events = []\n    for (const i in logs) {\n      // [address, topics, mem]\n      const log = logs[i]\n      const topicId = log.topics[0]\n      const eventAbis = this._event(topicId.replace('0x', ''), eventsABI)\n      for (const eventAbi of eventAbis) {\n        try {\n          if (eventAbi) {\n            const decodedlog = eventAbi.abi.parseLog(log)\n            const decoded = {}\n            for (const v in decodedlog.args) {\n              decoded[v] = this._stringifyEvent(decodedlog.args[v])\n            }\n            events.push({ from: log.address, topic: topicId, event: eventAbi.event, args: decoded })\n          } else {\n            events.push({ from: log.address, data: log.data, topics: log.topics })\n          }\n          break // if one of the iteration is successful\n        } catch (e) {\n          continue\n        }\n      }\n    }\n    cb(null, { decoded: events, raw: logs })\n  }\n}\n","'use strict'\n\n/**\n  * returns the fork name for the @argument networkId and @argument blockNumber\n  *\n  * @param {Object} networkId - network Id (1 for VM, 3 for Ropsten, 4 for Rinkeby, 5 for Goerli)\n  * @param {Object} blockNumber - block number\n  * @return {String} - fork name (Berlin, Istanbul, ...)\n  */\nexport function forkAt (networkId, blockNumber) {\n  if (forks[networkId]) {\n    let currentForkName = forks[networkId][0].name\n    for (const fork of forks[networkId]) {\n      if (blockNumber >= fork.number) {\n        currentForkName = fork.name\n      }\n    }\n    return currentForkName\n  }\n  return 'london'\n}\n\n// see https://github.com/ethereum/go-ethereum/blob/master/params/config.go\nconst forks = {\n  1: [\n    {\n      number: 4370000,\n      name: 'byzantium'\n    },\n    {\n      number: 7280000,\n      name: 'constantinople'\n    },\n    {\n      number: 7280000,\n      name: 'petersburg'\n    },\n    {\n      number: 9069000,\n      name: 'istanbul'\n    },\n    {\n      number: 9200000,\n      name: 'muirglacier'\n    },\n    {\n      number: 12244000,\n      name: 'berlin'\n    },\n    {\n      number: 12965000,\n      name: 'london'\n    },\n    {\n      number: 13773000,\n      name: 'arrowGlacier'\n    },\n    {\n      number: 15050000,\n      name: 'grayGlacier'\n    },\n    {\n      number: 15537394,\n      name: 'merge'\n    }\n  ],\n  3: [\n    {\n      number: 1700000,\n      name: 'byzantium'\n    },\n    {\n      number: 4230000,\n      name: 'constantinople'\n    },\n    {\n      number: 4939394,\n      name: 'petersburg'\n    },\n    {\n      number: 6485846,\n      name: 'istanbul'\n    },\n    {\n      number: 7117117,\n      name: 'muirglacier'\n    },\n    {\n      number: 9812189,\n      name: 'berlin'\n    },\n    {\n      number: 10499401,\n      name: 'london'\n    }\n  ],\n  4: [\n    {\n      number: 1035301,\n      name: 'byzantium'\n    },\n    {\n      number: 3660663,\n      name: 'constantinople'\n    },\n    {\n      number: 4321234,\n      name: 'petersburg'\n    },\n    {\n      number: 5435345,\n      name: 'istanbul'\n    },\n    {\n      number: 8290928,\n      name: 'berlin'\n    },\n    {\n      number: 8897988,\n      name: 'london'\n    }\n  ],\n  5: [\n    {\n      number: 1561651,\n      name: 'istanbul'\n    },\n    {\n      number: 4460644,\n      name: 'berlin'\n    },\n    {\n      number: 5062605,\n      name: 'london'\n    }\n  ]\n}\n","import { eachOf } from 'async'\nimport { randomBytes } from 'crypto'\nimport { toChecksumAddress } from '@ethereumjs/util'\n\nexport class LogsManager {\n  notificationCallbacks\n  subscriptions\n  filters\n  filterTracking\n  oldLogs\n\n  constructor () {\n    this.notificationCallbacks = []\n    this.subscriptions = {}\n    this.filters = {}\n    this.filterTracking = {}\n    this.oldLogs = []\n  }\n\n  checkBlock (blockNumber, block, web3) {\n    eachOf(block.transactions, (tx: any, i, next) => {\n      const txHash = '0x' + tx.hash().toString('hex')\n\n      web3.eth.getTransactionReceipt(txHash, (_error, receipt) => {\n        for (const log of receipt.logs) {\n          this.oldLogs.push({ type: 'block', blockNumber, block, tx, log, txNumber: i, receipt })\n          const subscriptions = this.getSubscriptionsFor({ type: 'block', blockNumber, block, tx, log, receipt})\n\n          for (const subscriptionId of subscriptions) {\n            const result = {\n              logIndex: '0x1', // 1\n              blockNumber: blockNumber,\n              blockHash: ('0x' + block.hash().toString('hex')),\n              transactionHash: ('0x' + tx.hash().toString('hex')),\n              transactionIndex: '0x' + i.toString(16),\n              // TODO: if it's a contract deploy, it should be that address instead\n              address: log.address,\n              data: log.data,\n              topics: log.topics\n            }\n\n            if (result.address === '0x') {\n              delete result.address\n            }\n\n            const response = { jsonrpc: '2.0', method: 'eth_subscription', params: { result: result, subscription: subscriptionId } }\n            this.transmit(response)\n          }\n        }\n      })\n    }, (_err) => {\n    })\n  }\n\n  eventMatchesFilter (changeEvent, queryType, queryFilter) {\n    if (queryFilter.topics.filter((logTopic) => changeEvent.log.topics.indexOf(logTopic) >= 0).length === 0) return false\n\n    if (queryType === 'logs') {\n      const fromBlock = parseInt(queryFilter.fromBlock || '0x0')\n      let toBlock\n      if (queryFilter.toBlock === 'latest' || !queryFilter.toBlock) toBlock = Number.MAX_VALUE\n      else toBlock = parseInt(queryFilter.toBlock)\n      const targetAddress = toChecksumAddress(queryFilter.address)\n      if ((toBlock >= parseInt(changeEvent.blockNumber)) && (fromBlock <= parseInt(changeEvent.blockNumber))) {\n        if (changeEvent.log && changeEvent.log.address === targetAddress) {\n          return true\n        }\n      }\n      return false\n    }\n    return false\n  }\n\n  getSubscriptionsFor (changeEvent) {\n    const matchedSubscriptions = []\n    for (const subscriptionId of Object.keys(this.subscriptions)) {\n      const subscriptionParams = this.subscriptions[subscriptionId]\n      const [queryType, queryFilter] = subscriptionParams\n\n      if (this.eventMatchesFilter(changeEvent, queryType, queryFilter || { topics: [] })) {\n        matchedSubscriptions.push(subscriptionId)\n      }\n    }\n    return matchedSubscriptions\n  }\n\n  getLogsForSubscription (subscriptionId) {\n    const subscriptionParams = this.subscriptions[subscriptionId]\n    const [_queryType, queryFilter] = subscriptionParams // eslint-disable-line\n\n    return this.getLogsFor(queryFilter)\n  }\n\n  transmit (result) {\n    this.notificationCallbacks.forEach((callback) => {\n      if (result.params.result.raw) {\n        result.params.result.data = result.params.result.raw.data\n        result.params.result.topics = result.params.result.raw.topics\n      }\n      callback(result)\n    })\n  }\n\n  addListener (_type, cb) {\n    this.notificationCallbacks.push(cb)\n  }\n\n  subscribe (params) {\n    const subscriptionId = '0x' + randomBytes(16).toString('hex')\n    this.subscriptions[subscriptionId] = params\n    return subscriptionId\n  }\n\n  unsubscribe (subscriptionId) {\n    delete this.subscriptions[subscriptionId]\n  }\n\n  newFilter (filterType, params) {\n    const filterId = '0x' + randomBytes(16).toString('hex')\n    if (filterType === 'block' || filterType === 'pendingTransactions') {\n      this.filters[filterId] = { filterType }\n    }\n    if (filterType === 'filter') {\n      this.filters[filterId] = { filterType, params }\n    }\n    this.filterTracking[filterId] = {}\n    return filterId\n  }\n\n  uninstallFilter (filterId) {\n    delete this.filters[filterId]\n  }\n\n  getLogsForFilter (filterId, logsOnly) {\n    const { filterType, params } = this.filters[filterId]\n    const tracking = this.filterTracking[filterId]\n\n    if (logsOnly || filterType === 'filter') {\n      return this.getLogsFor(params || { topics: [] })\n    }\n    if (filterType === 'block') {\n      const blocks = this.oldLogs.filter(x => x.type === 'block').filter(x => tracking.block === undefined || x.blockNumber >= tracking.block)\n      tracking.block = blocks[blocks.length - 1]\n      return blocks.map(block => ('0x' + block.hash().toString('hex')))\n    }\n    if (filterType === 'pendingTransactions') {\n      return []\n    }\n  }\n\n  getLogsByTxHash (hash) {\n    return this.oldLogs.filter((log) => '0x' + log.tx.hash().toString('hex') === hash)\n      .map((log) => {\n        return {\n          logIndex: '0x1', // 1\n          blockNumber: log.blockNumber,\n          blockHash: ('0x' + log.block.hash().toString('hex')),\n          transactionHash: ('0x' + log.tx.hash().toString('hex')),\n          transactionIndex: '0x' + log.txNumber.toString(16),\n          // TODO: if it's a contract deploy, it should be that address instead\n          address: log.log.address,\n          data: log.log.data,\n          topics: log.log.topics\n        }\n      })\n  }\n\n  getLogsFor (params) {\n    const results = []\n    for (const log of this.oldLogs) {\n      if (this.eventMatchesFilter(log, 'logs', params)) {\n        results.push({\n          logIndex: '0x1', // 1\n          blockNumber: log.blockNumber,\n          blockHash: ('0x' + log.block.hash().toString('hex')),\n          transactionHash: ('0x' + log.tx.hash().toString('hex')),\n          transactionIndex: '0x' + log.txNumber.toString(16),\n          // TODO: if it's a contract deploy, it should be that address instead\n          address: log.log.address,\n          data: log.log.data,\n          topics: log.log.topics\n        })\n      }\n    }\n\n    return results\n  }\n}\n","'use strict'\nimport { ethers } from 'ethers'\nimport { getFunctionFragment } from './txHelper'\n\n/**\n  * deploy the given contract\n  *\n  * @param {String} from    - sender address\n  * @param {String} data    - data to send with the transaction ( return of txFormat.buildData(...) ).\n  * @param {String} value    - decimal representation of value.\n  * @param {String} gasLimit    - decimal representation of gas limit.\n  * @param {Object} txRunner    - TxRunner.js instance\n  * @param {Object} callbacks    - { confirmationCb, gasEstimationForceSend, promptCb }\n  *     [validate transaction] confirmationCb (network, tx, gasEstimation, continueTxExecution, cancelCb)\n  *     [transaction failed, force send] gasEstimationForceSend (error, continueTxExecution, cancelCb)\n  *     [personal mode enabled, need password to continue] promptCb (okCb, cancelCb)\n  * @param {Function} finalCallback    - last callback.\n  */\nexport function createContract (from, data, value, gasLimit, txRunner, callbacks, finalCallback) {\n  if (!callbacks.confirmationCb || !callbacks.gasEstimationForceSend || !callbacks.promptCb) {\n    return finalCallback('all the callbacks must have been defined')\n  }\n  const tx = { from: from, to: null, data: data, useCall: false, value: value, gasLimit: gasLimit }\n  txRunner.rawRun(tx, callbacks.confirmationCb, callbacks.gasEstimationForceSend, callbacks.promptCb, (error, txResult) => {\n    // see universaldapp.js line 660 => 700 to check possible values of txResult (error case)\n    finalCallback(error, txResult)\n  })\n}\n\n/**\n  * call the current given contract ! that will create a transaction !\n  *\n  * @param {String} from    - sender address\n  * @param {String} to    - recipient address\n  * @param {String} data    - data to send with the transaction ( return of txFormat.buildData(...) ).\n  * @param {String} value    - decimal representation of value.\n  * @param {String} gasLimit    - decimal representation of gas limit.\n  * @param {Object} txRunner    - TxRunner.js instance\n  * @param {Object} callbacks    - { confirmationCb, gasEstimationForceSend, promptCb }\n  *     [validate transaction] confirmationCb (network, tx, gasEstimation, continueTxExecution, cancelCb)\n  *     [transaction failed, force send] gasEstimationForceSend (error, continueTxExecution, cancelCb)\n  *     [personal mode enabled, need password to continue] promptCb (okCb, cancelCb)\n  * @param {Function} finalCallback    - last callback.\n  */\nexport function callFunction (from, to, data, value, gasLimit, funAbi, txRunner, callbacks, finalCallback) {\n  const useCall = funAbi.stateMutability === 'view' || funAbi.stateMutability === 'pure' || funAbi.constant\n  const tx = { from, to, data, useCall, value, gasLimit }\n  txRunner.rawRun(tx, callbacks.confirmationCb, callbacks.gasEstimationForceSend, callbacks.promptCb, (error, txResult) => {\n    // see universaldapp.js line 660 => 700 to check possible values of txResult (error case)\n    finalCallback(error, txResult)\n  })\n}\n\n/**\n  * check if the vm has errored\n  *\n  * @param {Object} execResult    - execution result given by the VM, contain errorMessage and errorDate\n  * @param {Object} compiledContracts - Object containing contract compilation details\n  * @return {Object} -  { error: true/false, message: DOMNode }\n  */\nexport function checkError (execResult, compiledContracts) {\n  const errorCode = {\n    OUT_OF_GAS: 'out of gas',\n    STACK_UNDERFLOW: 'stack underflow',\n    STACK_OVERFLOW: 'stack overflow',\n    INVALID_JUMP: 'invalid JUMP',\n    INVALID_OPCODE: 'invalid opcode',\n    REVERT: 'revert',\n    STATIC_STATE_CHANGE: 'static state change',\n    INTERNAL_ERROR: 'internal error',\n    CREATE_COLLISION: 'create collision',\n    STOP: 'stop',\n    REFUND_EXHAUSTED: 'refund exhausted'\n  }\n  const ret = {\n    error: false,\n    message: ''\n  }\n  if (!execResult.errorMessage) {\n    return ret\n  }\n  const exceptionError = execResult.errorMessage || ''\n  const error = `Error occured: ${execResult.errorMessage}.\\n`\n  let msg\n  if (exceptionError === errorCode.INVALID_OPCODE) {\n    msg = '\\t\\n\\tThe execution might have thrown.\\n'\n    ret.error = true\n  } else if (exceptionError === errorCode.OUT_OF_GAS) {\n    msg = '\\tThe transaction ran out of gas. Please increase the Gas Limit.\\n'\n    ret.error = true\n  } else if (exceptionError === errorCode.REVERT || exceptionError === 'execution reverted') {\n    const returnData = execResult.errorData\n    const returnDataHex = returnData.slice(2, 10)\n    let customError\n    if (compiledContracts) {\n      let decodedCustomErrorInputsClean\n      for (const file of Object.keys(compiledContracts)) {\n        for (const contractName of Object.keys(compiledContracts[file])) {\n          const contract = compiledContracts[file][contractName]\n          for (const item of contract.abi) {\n            if (item.type === 'error') {\n              // ethers doesn't crash anymore if \"error\" type is specified, but it doesn't extract the errors. see:\n              // https://github.com/ethers-io/ethers.js/commit/bd05aed070ac9e1421a3e2bff2ceea150bedf9b7\n              // we need here to fake the type, so the \"getSighash\" function works properly\n              const fn = getFunctionFragment({ ...item, type: 'function', stateMutability: 'nonpayable' })\n              if (!fn) continue\n              const sign = fn.getSighash(item.name)\n              if (!sign) continue\n              if (returnDataHex === sign.replace('0x', '')) {\n                customError = item.name\n                const functionDesc = fn.getFunction(item.name)\n                // decoding error parameters\n                const decodedCustomErrorInputs = fn.decodeFunctionData(functionDesc, returnData)\n                decodedCustomErrorInputsClean = {}\n                let devdoc = {}\n                // \"contract\" reprensents the compilation result containing the NATSPEC documentation\n                if (contract && fn.functions && Object.keys(fn.functions).length) {\n                  const functionSignature = Object.keys(fn.functions)[0]\n                  // we check in the 'devdoc' if there's a developer documentation for this error\n                  try {\n                    devdoc = (contract.devdoc.errors && contract.devdoc.errors[functionSignature][0]) || {}\n                  } catch (e) {\n                    console.error(e.message)\n                  }\n                  // we check in the 'userdoc' if there's an user documentation for this error\n                  try {\n                    const userdoc = (contract.userdoc.errors && contract.userdoc.errors[functionSignature][0]) || {}\n                    if (userdoc && (userdoc as any).notice) customError += ' : ' + (userdoc as any).notice // we append the user doc if any\n                  } catch (e) {\n                    console.error(e.message)\n                  }\n                }\n                let inputIndex = 0\n                for (const input of functionDesc.inputs) {\n                  const inputKey = input.name || inputIndex\n                  const v = decodedCustomErrorInputs[inputKey]\n\n                  decodedCustomErrorInputsClean[inputKey] = {\n                    value: v.toString ? v.toString() : v\n                  }\n                  if (devdoc && (devdoc as any).params) {\n                    decodedCustomErrorInputsClean[input.name].documentation = (devdoc as any).params[inputKey] // we add the developer documentation for this input parameter if any\n                  }\n                  inputIndex++\n                }\n                break\n              }\n            }\n          }\n        }\n      }\n      if (decodedCustomErrorInputsClean) {\n        msg = '\\tThe transaction has been reverted to the initial state.\\nError provided by the contract:'\n        msg += `\\n${customError}`\n        msg += '\\nParameters:'\n        msg += `\\n${JSON.stringify(decodedCustomErrorInputsClean, null, ' ')}`\n      }\n    }\n    if (!customError) {\n      // It is the hash of Error(string)\n      if (returnData && (returnDataHex === '08c379a0')) {\n        const abiCoder = new ethers.utils.AbiCoder()\n        const reason = abiCoder.decode(['string'], '0x' + returnData.slice(10))[0]\n        msg = `\\tThe transaction has been reverted to the initial state.\\nReason provided by the contract: \"${reason}\".`\n      } else {\n        msg = '\\tThe transaction has been reverted to the initial state.\\nNote: The called function should be payable if you send value and the value you send should be less than your current balance.'\n      }\n    }\n    ret.error = true\n  } else if (exceptionError === errorCode.STATIC_STATE_CHANGE) {\n    msg = '\\tState changes is not allowed in Static Call context\\n'\n    ret.error = true\n  }\n  ret.message = `${error}\\n${exceptionError}\\n${msg}\\nDebug the transaction to get more information.`\n  return ret\n}","'use strict'\nimport { ethers } from 'ethers'\nimport { encodeParams as encodeParamsHelper, encodeFunctionId, makeFullTypeDefinition } from './txHelper'\nimport { eachOfSeries } from 'async'\nimport { linkBytecode as linkBytecodeSolc } from 'solc/linker'\nimport { isValidAddress, addHexPrefix } from '@ethereumjs/util'\nimport fromExponential from 'from-exponential';\n\n/**\n  * build the transaction data\n  *\n  * @param {Object} function abi\n  * @param {Object} values to encode\n  * @param {String} contractbyteCode\n  */\nexport function encodeData (funABI, values, contractbyteCode) {\n  let encoded\n  let encodedHex\n  try {\n    encoded = encodeParamsHelper(funABI, values)\n    encodedHex = encoded.toString('hex')\n  } catch (e) {\n    return { error: 'cannot encode arguments' }\n  }\n  if (contractbyteCode) {\n    return { data: '0x' + contractbyteCode + encodedHex.replace('0x', '') }\n  } else {\n    return { data: encodeFunctionId(funABI) + encodedHex.replace('0x', '') }\n  }\n}\n\n/**\n* encode function / constructor parameters\n*\n* @param {Object} params    - input paramater of the function to call\n* @param {Object} funAbi    - abi definition of the function to call. null if building data for the ctor.\n* @param {Function} callback    - callback\n*/\nexport function encodeParams (params, funAbi, callback?) {\n  return new Promise((resolve, reject) => {\n    let data: Buffer | string = ''\n    let dataHex = ''\n    let funArgs = []\n    if (Array.isArray(params)) {\n      funArgs = params\n      if (funArgs.length > 0) {\n        try {\n          data = encodeParamsHelper(funAbi, funArgs)\n          dataHex = data.toString()\n        } catch (e) {\n          reject('Error encoding arguments: ' + e)\n          return callback && callback('Error encoding arguments: ' + e)\n        }\n      }\n      if (data.slice(0, 9) === 'undefined') {\n        dataHex = data.slice(9)\n      }\n      if (data.slice(0, 2) === '0x') {\n        dataHex = data.slice(2)\n      }\n    } else if (params.indexOf('raw:0x') === 0) {\n      // in that case we consider that the input is already encoded and *does not* contain the method signature\n      dataHex = params.replace('raw:0x', '')\n      data = Buffer.from(dataHex, 'hex')\n    } else {\n      try {\n        funArgs = parseFunctionParams(params)\n      } catch (e) {\n        reject('Error encoding arguments: ' + e)\n        return callback && callback('Error encoding arguments: ' + e)\n      }\n      try {\n        if (funArgs.length > 0) {\n          data = encodeParamsHelper(funAbi, funArgs)\n          dataHex = data.toString()\n        }\n      } catch (e) {\n        reject('Error encoding arguments: ' + e)\n        return callback && callback('Error encoding arguments: ' + e)\n      }\n      if (data.slice(0, 9) === 'undefined') {\n        dataHex = data.slice(9)\n      }\n      if (data.slice(0, 2) === '0x') {\n        dataHex = data.slice(2)\n      }\n    }\n    const result = { data: data, dataHex: dataHex, funArgs: funArgs }\n    callback && callback(null, result)\n    resolve(result)\n  })  \n}\n\n/**\n* encode function call (function id + encoded parameters)\n*\n* @param {Object} params    - input paramater of the function to call\n* @param {Object} funAbi    - abi definition of the function to call. null if building data for the ctor.\n* @param {Function} callback    - callback\n*/\nexport function encodeFunctionCall (params, funAbi, callback) {\n  encodeParams(params, funAbi, (error, encodedParam) => {\n    if (error) return callback(error)\n    callback(null, { dataHex: encodeFunctionId(funAbi) + encodedParam.dataHex, funAbi, funArgs: encodedParam.funArgs })\n  })\n}\n\n/**\n* encode constructor creation and link with provided libraries if needed\n*\n* @param {Object} contract    - input paramater of the function to call\n* @param {Object} params    - input paramater of the function to call\n* @param {Object} funAbi    - abi definition of the function to call. null if building data for the ctor.\n* @param {Object} linkLibraries    - contains {linkReferences} object which list all the addresses to be linked\n* @param {Object} linkReferences    - given by the compiler, contains the proper linkReferences\n* @param {Function} callback    - callback\n*/\nexport function encodeConstructorCallAndLinkLibraries (contract, params, funAbi, linkLibrariesAddresses, linkReferences, callback) {\n  encodeParams(params, funAbi, (error, encodedParam) => {\n    if (error) return callback(error)\n    linkLibraries(contract, linkLibrariesAddresses, linkReferences, (error, bytecodeToDeploy) => {\n      callback(error, { dataHex: bytecodeToDeploy + encodedParam.dataHex, funAbi, funArgs: encodedParam.funArgs, contractBytecode: contract.evm.bytecode.object })\n    })\n  })\n}\n\n/**\n* link with provided libraries if needed\n*\n* @param {Object} contract    - input paramater of the function to call\n* @param {Object} linkLibraries    - contains {linkReferences} object which list all the addresses to be linked\n* @param {Object} linkReferences    - given by the compiler, contains the proper linkReferences\n* @param {Function} callback    - callback\n*/\nexport function linkLibraries (contract, linkLibraries, linkReferences, callback) {\n  let bytecodeToDeploy = contract.evm.bytecode.object\n  if (bytecodeToDeploy.indexOf('_') >= 0) {\n    if (linkLibraries && linkReferences) {\n      for (const libFile in linkLibraries) {\n        for (const lib in linkLibraries[libFile]) {\n          const address = linkLibraries[libFile][lib]\n          if (!isValidAddress(address)) return callback(address + ' is not a valid address. Please check the provided address is valid.')\n          bytecodeToDeploy = linkLibraryStandardFromlinkReferences(lib, address.replace('0x', ''), bytecodeToDeploy, linkReferences)\n        }\n      }\n    }\n  }\n  if (bytecodeToDeploy.indexOf('_') >= 0) {\n    return callback('Failed to link some libraries')\n  }\n  return callback(null, bytecodeToDeploy)\n}\n\n/**\n* encode constructor creation and deploy librairies if needed\n*\n* @param {String} contractName    - current contract name\n* @param {Object} contract    - input paramater of the function to call\n* @param {Object} contracts    - map of all compiled contracts.\n* @param {Object} params    - input paramater of the function to call\n* @param {Object} funAbi    - abi definition of the function to call. null if building data for the ctor.\n* @param {Function} callback    - callback\n* @param {Function} callbackStep  - callbackStep\n* @param {Function} callbackDeployLibrary  - callbackDeployLibrary\n* @param {Function} callback    - callback\n*/\nexport function encodeConstructorCallAndDeployLibraries (contractName, contract, contracts, params, funAbi, callback, callbackStep, callbackDeployLibrary) {\n  encodeParams(params, funAbi, (error, encodedParam) => {\n    if (error) return callback(error)\n    let dataHex = ''\n    const contractBytecode = contract.evm.bytecode.object\n    let bytecodeToDeploy = contract.evm.bytecode.object\n    if (bytecodeToDeploy.indexOf('_') >= 0) {\n      linkBytecode(contract, contracts, (err, bytecode) => {\n        if (err) {\n          callback('Error deploying required libraries: ' + err)\n        } else {\n          bytecodeToDeploy = bytecode + dataHex\n          return callback(null, { dataHex: bytecodeToDeploy, funAbi, funArgs: encodedParam.funArgs, contractBytecode, contractName: contractName })\n        }\n      }, callbackStep, callbackDeployLibrary)\n      return\n    } else {\n      dataHex = bytecodeToDeploy + encodedParam.dataHex\n    }\n    callback(null, { dataHex: bytecodeToDeploy, funAbi, funArgs: encodedParam.funArgs, contractBytecode, contractName: contractName })\n  })\n}\n\n/**\n* (DEPRECATED) build the transaction data\n*\n* @param {String} contractName\n* @param {Object} contract    - abi definition of the current contract.\n* @param {Object} contracts    - map of all compiled contracts.\n* @param {Bool} isConstructor    - isConstructor.\n* @param {Object} funAbi    - abi definition of the function to call. null if building data for the ctor.\n* @param {Object} params    - input paramater of the function to call\n* @param {Function} callback    - callback\n* @param {Function} callbackStep  - callbackStep\n* @param {Function} callbackDeployLibrary  - callbackDeployLibrary\n*/\nexport function buildData (contractName, contract, contracts, isConstructor, funAbi, params, callback, callbackStep, callbackDeployLibrary) {\n  let funArgs = []\n  let data: Buffer | string = ''\n  let dataHex = ''\n\n  if (params.indexOf('raw:0x') === 0) {\n    // in that case we consider that the input is already encoded and *does not* contain the method signature\n    dataHex = params.replace('raw:0x', '')\n    data = Buffer.from(dataHex, 'hex')\n  } else {\n    try {\n      if (params.length > 0) {\n        funArgs = parseFunctionParams(params)\n      }\n    } catch (e) {\n      return callback('Error encoding arguments: ' + e)\n    }\n    try {\n      data = encodeParamsHelper(funAbi, funArgs)\n      dataHex = data.toString()\n    } catch (e) {\n      return callback('Error encoding arguments: ' + e)\n    }\n    if (data.slice(0, 9) === 'undefined') {\n      dataHex = data.slice(9)\n    }\n    if (data.slice(0, 2) === '0x') {\n      dataHex = data.slice(2)\n    }\n  }\n  let contractBytecode\n  if (isConstructor) {\n    contractBytecode = contract.evm.bytecode.object\n    let bytecodeToDeploy = contract.evm.bytecode.object\n    if (bytecodeToDeploy.indexOf('_') >= 0) {\n      linkBytecode(contract, contracts, (err, bytecode) => {\n        if (err) {\n          callback('Error deploying required libraries: ' + err)\n        } else {\n          bytecodeToDeploy = bytecode + dataHex\n          return callback(null, { dataHex: bytecodeToDeploy, funAbi, funArgs, contractBytecode, contractName: contractName })\n        }\n      }, callbackStep, callbackDeployLibrary)\n      return\n    } else {\n      dataHex = bytecodeToDeploy + dataHex\n    }\n  } else {\n    dataHex = encodeFunctionId(funAbi) + dataHex\n  }\n  callback(null, { dataHex, funAbi, funArgs, contractBytecode, contractName: contractName })\n}\n\nexport function atAddress () {}\n\nexport function linkBytecodeStandard (contract, contracts, callback, callbackStep, callbackDeployLibrary) {\n  let contractBytecode = contract.evm.bytecode.object\n  eachOfSeries(contract.evm.bytecode.linkReferences, (libs, file, cbFile) => {\n    eachOfSeries(contract.evm.bytecode.linkReferences[file], (libRef, libName, cbLibDeployed) => {\n      const library = contracts[file][libName]\n      if (library) {\n        deployLibrary(file + ':' + libName, libName, library, contracts, (error, address) => {\n          if (error) {\n            return cbLibDeployed(error)\n          }\n          let hexAddress = address.toString('hex')\n          if (hexAddress.slice(0, 2) === '0x') {\n            hexAddress = hexAddress.slice(2)\n          }\n          contractBytecode = linkLibraryStandard(libName, hexAddress, contractBytecode, contract)\n          cbLibDeployed()\n        }, callbackStep, callbackDeployLibrary)\n      } else {\n        //@ts-ignore\n        cbLibDeployed('Cannot find compilation data of library ' + libName)\n      }\n    }, (error) => {\n      cbFile(error)\n    })\n  }, (error) => {\n    if (error) {\n      callbackStep(error)\n    }\n    callback(error, contractBytecode)\n  })\n}\n\nexport function linkBytecodeLegacy (contract, contracts, callback, callbackStep, callbackDeployLibrary) {\n  const libraryRefMatch = contract.evm.bytecode.object.match(/__([^_]{1,36})__/)\n  if (!libraryRefMatch) {\n    return callback('Invalid bytecode format.')\n  }\n  const libraryName = libraryRefMatch[1]\n  // file_name:library_name\n  const libRef = libraryName.match(/(.*):(.*)/)\n  if (!libRef) {\n    return callback('Cannot extract library reference ' + libraryName)\n  }\n  if (!contracts[libRef[1]] || !contracts[libRef[1]][libRef[2]]) {\n    return callback('Cannot find library reference ' + libraryName)\n  }\n  const libraryShortName = libRef[2]\n  const library = contracts[libRef[1]][libraryShortName]\n  if (!library) {\n    return callback('Library ' + libraryName + ' not found.')\n  }\n  deployLibrary(libraryName, libraryShortName, library, contracts, (err, address) => {\n    if (err) {\n      return callback(err)\n    }\n    let hexAddress = address.toString('hex')\n    if (hexAddress.slice(0, 2) === '0x') {\n      hexAddress = hexAddress.slice(2)\n    }\n    contract.evm.bytecode.object = linkLibrary(libraryName, hexAddress, contract.evm.bytecode.object)\n    linkBytecode(contract, contracts, callback, callbackStep, callbackDeployLibrary)\n  }, callbackStep, callbackDeployLibrary)\n}\n\nexport function linkBytecode (contract, contracts, callback?, callbackStep?, callbackDeployLibrary?) {\n  if (contract.evm.bytecode.object.indexOf('_') < 0) {\n    return callback(null, contract.evm.bytecode.object)\n  }\n  if (contract.evm.bytecode.linkReferences && Object.keys(contract.evm.bytecode.linkReferences).length) {\n    linkBytecodeStandard(contract, contracts, callback, callbackStep, callbackDeployLibrary)\n  } else {\n    linkBytecodeLegacy(contract, contracts, callback, callbackStep, callbackDeployLibrary)\n  }\n}\n\nexport function deployLibrary (libraryName, libraryShortName, library, contracts, callback, callbackStep, callbackDeployLibrary) {\n  const address = library.address\n  if (address) {\n    return callback(null, address)\n  }\n  const bytecode = library.evm.bytecode.object\n  if (bytecode.indexOf('_') >= 0) {\n    linkBytecode(library, contracts, (err, bytecode) => {\n      if (err) callback(err)\n      else {\n        library.evm.bytecode.object = bytecode\n        deployLibrary(libraryName, libraryShortName, library, contracts, callback, callbackStep, callbackDeployLibrary)\n      }\n    }, callbackStep, callbackDeployLibrary)\n  } else {\n    callbackStep(`creation of library ${libraryName} pending...`)\n    const data = { dataHex: bytecode, funAbi: { type: 'constructor' }, funArgs: [], contractBytecode: bytecode, contractName: libraryShortName, contractABI: library.abi }\n    callbackDeployLibrary({ data: data, useCall: false }, (err, txResult) => {\n      if (err) {\n        return callback(err)\n      }\n      const address = txResult.receipt.contractAddress\n      library.address = address\n      callback(err, address)\n    })\n  }\n}\n\nexport function linkLibraryStandardFromlinkReferences (libraryName, address, bytecode, linkReferences) {\n  for (const file in linkReferences) {\n    for (const libName in linkReferences[file]) {\n      if (libraryName === libName) {\n        bytecode = setLibraryAddress(address, bytecode, linkReferences[file][libName])\n      }\n    }\n  }\n  return bytecode\n}\n\nexport function linkLibraryStandard (libraryName, address, bytecode, contract) {\n  return linkLibraryStandardFromlinkReferences(libraryName, address, bytecode, contract.evm.bytecode.linkReferences)\n}\n\nexport function setLibraryAddress (address, bytecodeToLink, positions) {\n  if (positions) {\n    for (const pos of positions) {\n      const regpos = bytecodeToLink.match(new RegExp(`(.{${2 * pos.start}})(.{${2 * pos.length}})(.*)`))\n      if (regpos) {\n        bytecodeToLink = regpos[1] + address + regpos[3]\n      }\n    }\n  }\n  return bytecodeToLink\n}\n\nexport function linkLibrary (libraryName, address, bytecodeToLink) {\n  return linkBytecodeSolc(bytecodeToLink, { [libraryName]: addHexPrefix(address) })\n}\n\nexport function decodeResponse (response, fnabi) {\n  // Only decode if there supposed to be fields\n  if (fnabi.outputs && fnabi.outputs.length > 0) {\n    try {\n      let i\n      const outputTypes = []\n      for (i = 0; i < fnabi.outputs.length; i++) {\n        const type = fnabi.outputs[i].type\n        outputTypes.push(type.indexOf('tuple') === 0 ? makeFullTypeDefinition(fnabi.outputs[i]) : type)\n      }\n      if (!response || !response.length) response = new Uint8Array(32 * fnabi.outputs.length) // ensuring the data is at least filled by 0 cause `AbiCoder` throws if there's not engouh data\n      // decode data\n      const abiCoder = new ethers.utils.AbiCoder()\n      const decodedObj = abiCoder.decode(outputTypes, response)\n\n      const json = {}\n      for (i = 0; i < outputTypes.length; i++) {\n        const name = fnabi.outputs[i].name\n        json[i] = outputTypes[i] + ': ' + (name ? name + ' ' + decodedObj[i] : decodedObj[i])\n      }\n\n      return json\n    } catch (e) {\n      return { error: 'Failed to decode output: ' + e }\n    }\n  }\n  return {}\n}\n\nexport function parseFunctionParams (params) {\n  const args = []\n  // Check if parameter string starts with array or string\n  let startIndex = isArrayOrStringStart(params, 0) ? -1 : 0\n  for (let i = 0; i < params.length; i++) {\n    // If a quote is received\n    if (params.charAt(i) === '\"') {\n      startIndex = -1\n      let endQuoteIndex = false\n      // look for closing quote. On success, push the complete string in arguments list\n      for (let j = i + 1; !endQuoteIndex; j++) {\n        if (params.charAt(j) === '\"') {\n          args.push(normalizeParam(params.substring(i + 1, j)))\n          endQuoteIndex = true\n          i = j\n        }\n        // Throw error if end of params string is arrived but couldn't get end quote\n        if (!endQuoteIndex && j === params.length - 1) {\n          throw new Error('invalid params')\n        }\n      }\n    } else if (params.charAt(i) === '[') { // If an array/struct opening bracket is received\n      startIndex = -1\n      let bracketCount = 1\n      let j\n      for (j = i + 1; bracketCount !== 0; j++) {\n        // Increase count if another array opening bracket is received (To handle nested array)\n        if (params.charAt(j) === '[') {\n          bracketCount++\n        } else if (params.charAt(j) === ']') { // // Decrease count if an array closing bracket is received (To handle nested array)\n          bracketCount--\n        }\n        // Throw error if end of params string is arrived but couldn't get end of tuple\n        if (bracketCount !== 0 && j === params.length - 1) {\n          throw new Error('invalid tuple params')\n        }\n        if (bracketCount === 0) break\n      }\n      args.push(parseFunctionParams(params.substring(i + 1, j)))\n      i = j - 1\n    } else if (params.charAt(i) === ',' || i === params.length - 1) { // , or end of string\n      // if startIndex >= 0, it means a parameter was being parsed, it can be first or other parameter\n      if (startIndex >= 0) {\n        let param = params.substring(startIndex, i === params.length - 1 ? undefined : i)\n        param = normalizeParam(param)\n        args.push(param)\n      }\n      // Register start index of a parameter to parse\n      startIndex = isArrayOrStringStart(params, i + 1) ? -1 : i + 1\n    }\n  }\n  return args\n}\n\nexport const normalizeParam = (param) => {\n  param = param.trim()\n  if (param.startsWith('0x')) param = `${param}`\n  if (/[0-9]/g.test(param)) param = `${param}`\n\n  // fromExponential\n  if (!param.startsWith('0x')) {\n    const regSci = REGEX_SCIENTIFIC.exec(param)\n    const exponents = regSci ? regSci[2] : null\n    if (regSci && REGEX_DECIMAL.exec(exponents)) {\n      try {\n        let paramTrimmed = param.replace(/^'/g, '').replace(/'$/g, '')\n        paramTrimmed = paramTrimmed.replace(/^\"/g, '').replace(/\"$/g, '')\n        param = fromExponential(paramTrimmed)     \n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }  \n\n  if (typeof param === 'string') {          \n    if (param === 'true') param = true\n    if (param === 'false') param = false        \n  }\n  return param\n}\n\nexport const REGEX_SCIENTIFIC = /^-?(\\d+\\.?\\d*)e\\d*(\\d+)$/\n\nexport const REGEX_DECIMAL = /^\\d*/\n\nexport function isArrayOrStringStart (str, index) {\n  return str.charAt(index) === '\"' || str.charAt(index) === '['\n}\n","'use strict'\nimport { ethers } from 'ethers'\n\nexport function makeFullTypeDefinition (typeDef) {\n  if (typeDef && typeDef.type.indexOf('tuple') === 0 && typeDef.components) {\n    const innerTypes = typeDef.components.map((innerType) => { return makeFullTypeDefinition(innerType) })\n    return `tuple(${innerTypes.join(',')})${extractSize(typeDef.type)}`\n  }\n  return typeDef.type\n}\n\nexport function encodeParams (funABI, args) {\n  const types = []\n  if (funABI.inputs && funABI.inputs.length) {\n    for (let i = 0; i < funABI.inputs.length; i++) {\n      const type = funABI.inputs[i].type\n      // \"false\" will be converting to `false` and \"true\" will be working\n      // fine as abiCoder assume anything in quotes as `true`\n      if (type === 'bool' && args[i] === 'false') {\n        args[i] = false\n      }\n      types.push(type.indexOf('tuple') === 0 ? makeFullTypeDefinition(funABI.inputs[i]) : type)\n      if (args.length < types.length) {\n        args.push('')\n      }\n    }\n  }\n\n  // NOTE: the caller will concatenate the bytecode and this\n  //       it could be done here too for consistency\n  const abiCoder = new ethers.utils.AbiCoder()\n  return abiCoder.encode(types, args)\n}\n\nexport function encodeFunctionId (funABI) {\n  if (funABI.type === 'fallback' || funABI.type === 'receive') return '0x'\n  const abi = new ethers.utils.Interface([funABI])\n  return abi.getSighash(funABI.name)\n}\n\nexport function getFunctionFragment (funABI): ethers.utils.Interface {\n  if (funABI.type === 'fallback' || funABI.type === 'receive') return null\n  return new ethers.utils.Interface([funABI])\n}\n\nexport function sortAbiFunction (contractabi) {\n  // Check if function is constant (introduced with Solidity 0.6.0)\n  const isConstant = ({ stateMutability }) => stateMutability === 'view' || stateMutability === 'pure'\n  // Sorts the list of ABI entries. Constant functions will appear first,\n  // followed by non-constant functions. Within those t wo groupings, functions\n  // will be sorted by their names.\n  return contractabi.sort(function (a, b) {\n    if (isConstant(a) && !isConstant(b)) {\n      return 1\n    } else if (isConstant(b) && !isConstant(a)) {\n      return -1\n    }\n    // If we reach here, either a and b are both constant or both not; sort by name then\n    // special case for fallback, receive and constructor function\n    if (a.type === 'function' && typeof a.name !== 'undefined') {\n      return a.name.localeCompare(b.name)\n    } else if (a.type === 'constructor' || a.type === 'fallback' || a.type === 'receive') {\n      return 1\n    }\n  })\n}\n\nexport function getConstructorInterface (abi) {\n  const funABI = { name: '', inputs: [], type: 'constructor', payable: false, outputs: [] }\n  if (typeof abi === 'string') {\n    try {\n      abi = JSON.parse(abi)\n    } catch (e) {\n      console.log('exception retrieving ctor abi ' + abi)\n      return funABI\n    }\n  }\n\n  for (let i = 0; i < abi.length; i++) {\n    if (abi[i].type === 'constructor') {\n      funABI.inputs = abi[i].inputs || []\n      funABI.payable = abi[i].payable\n      funABI['stateMutability'] = abi[i].stateMutability\n      break\n    }\n  }\n\n  return funABI\n}\n\nexport function serializeInputs (fnAbi) {\n  let serialized = '('\n  if (fnAbi.inputs && fnAbi.inputs.length) {\n    serialized += fnAbi.inputs.map((input) => { return input.type }).join(',')\n  }\n  serialized += ')'\n  return serialized\n}\n\nexport function extractSize (type) {\n  const size = type.match(/([a-zA-Z0-9])(\\[.*\\])/)\n  return size ? size[2] : ''\n}\n\nexport function getFunctionLiner (fn, detailTuple: boolean = true) {\n  /*\n    if detailsTuple is True, this will return something like fnName((uint, string))\n    if detailsTuple is False, this will return something like fnName(tuple)\n  */\n  return fn.name + '(' + fn.inputs.map((value) => {\n    if (detailTuple && value.components) {\n      const fullType = makeFullTypeDefinition(value)\n      return fullType.replace(/tuple/g, '') // return of makeFullTypeDefinition might contain `tuple`, need to remove it cause `methodIdentifier` (fnName) does not include `tuple` keyword\n    } else {\n      return value.type\n    }\n  }).join(',') + ')'\n}\n\nexport function getFunction (abi, fnName) {\n  for (let i = 0; i < abi.length; i++) {\n    const fn = abi[i]\n    if (fn.type === 'function' && (fnName === getFunctionLiner(fn, true) || fnName === getFunctionLiner(fn, false))) {\n      return fn\n    }\n  }\n  return null\n}\n\nexport function getFallbackInterface (abi) {\n  for (let i = 0; i < abi.length; i++) {\n    if (abi[i].type === 'fallback') {\n      return abi[i]\n    }\n  }\n}\n\nexport function getReceiveInterface (abi) {\n  for (let i = 0; i < abi.length; i++) {\n    if (abi[i].type === 'receive') {\n      return abi[i]\n    }\n  }\n}\n\n/**\n  * return the contract obj of the given @arg name. Uses last compilation result.\n  * return null if not found\n  * @param {String} name    - contract name\n  * @returns contract obj and associated file: { contract, file } or null\n  */\nexport function getContract (contractName, contracts) {\n  for (const file in contracts) {\n    if (contracts[file][contractName]) {\n      return { object: contracts[file][contractName], file: file }\n    }\n  }\n  return null\n}\n\n/**\n  * call the given @arg cb (function) for all the contracts. Uses last compilation result\n  * stop visiting when cb return true\n  * @param {Function} cb    - callback\n  */\nexport function visitContracts (contracts, cb) {\n  for (const file in contracts) {\n    for (const name in contracts[file]) {\n      if (cb({ name: name, object: contracts[file][name], file: file })) return\n    }\n  }\n}\n\nexport function inputParametersDeclarationToString (abiinputs) {\n  const inputs = (abiinputs || []).map((inp) => inp.type + ' ' + inp.name)\n  return inputs.join(', ')\n}\n","'use strict'\nimport { ethers } from 'ethers'\nimport { toBuffer, addHexPrefix } from '@ethereumjs/util'\nimport { EventManager } from '../eventManager'\nimport { compareByteCode, getinputParameters } from '../util'\nimport { decodeResponse } from './txFormat'\nimport { getFunction, getReceiveInterface, getConstructorInterface, visitContracts, makeFullTypeDefinition } from './txHelper'\n\nfunction addExecutionCosts (txResult, tx, execResult) {\n  if (txResult) {\n    if (execResult) {\n      tx.returnValue = execResult.returnValue\n      if (execResult.executionGasUsed) tx.executionCost = execResult.executionGasUsed.toString(10)\n    }\n    if (txResult.receipt && txResult.receipt.gasUsed) tx.transactionCost = txResult.receipt.gasUsed.toString(10)\n  }\n}\n\n/**\n  * poll web3 each 2s if web3\n  * listen on transaction executed event if VM\n  * attention: blocks returned by the event `newBlock` have slightly different json properties whether web3 or the VM is used\n  * trigger 'newBlock'\n  *\n  */\nexport class TxListener {\n  event\n  executionContext\n  _resolvedTransactions\n  _api\n  _resolvedContracts\n  _isListening: boolean\n  _listenOnNetwork:boolean\n  _loopId\n  blocks\n  \n  constructor (opt, executionContext) {\n    this.event = new EventManager()\n    // has a default for now for backwards compatability\n    this.executionContext = executionContext\n    this._api = opt.api\n    this._resolvedTransactions = {}\n    this._resolvedContracts = {}\n    this._isListening = false\n    this._listenOnNetwork = false\n    this._loopId = null\n    this.init()\n    this.executionContext.event.register('contextChanged', (context) => {\n      if (this._isListening) {\n        this.stopListening()\n        this.startListening()\n      }\n    })\n\n    opt.event.udapp.register('callExecuted', async (error, from, to, data, lookupOnly, txResult) => {\n      if (error) return\n      // we go for that case if\n      // in VM mode\n      // in web3 mode && listen remix txs only\n      if (!this._isListening) return // we don't listen\n      if (this._loopId) return // we seems to already listen on a \"web3\" network\n\n      let returnValue\n      let execResult\n      if (this.executionContext.isVM()) {\n        execResult = await this.executionContext.web3().eth.getExecutionResultFromSimulator(txResult.transactionHash)\n        returnValue = toBuffer(execResult.returnValue)\n      } else {\n        returnValue = toBuffer(addHexPrefix(txResult.result))\n      }\n      const call = {\n        from: from,\n        to: to,\n        input: data,\n        hash: txResult.transactionHash ? txResult.transactionHash : 'call' + (from || '') + to + data,\n        isCall: true,\n        returnValue,\n        envMode: this.executionContext.getProvider()\n      }\n\n      addExecutionCosts(txResult, call, execResult)\n      this._resolveTx(call, call, (error, resolvedData) => {\n        if (!error) {\n          this.event.trigger('newCall', [call])\n        }\n      })\n    })\n\n    opt.event.udapp.register('transactionExecuted', (error, from, to, data, lookupOnly, txResult) => {\n      if (error) return\n      if (lookupOnly) return\n      // we go for that case if\n      // in VM mode\n      // in web3 mode && listen remix txs only\n      if (!this._isListening) return // we don't listen\n      if (this._loopId) return // we seems to already listen on a \"web3\" network\n      this.executionContext.web3().eth.getTransaction(txResult.transactionHash, async (error, tx) => {\n        if (error) return console.log(error)\n\n        let execResult\n        if (this.executionContext.isVM()) {\n          execResult = await this.executionContext.web3().eth.getExecutionResultFromSimulator(txResult.transactionHash)\n        }\n\n        addExecutionCosts(txResult, tx, execResult)\n        tx.envMode = this.executionContext.getProvider()\n        tx.status = txResult.receipt.status\n        this._resolve([tx])\n      })\n    })\n  }\n\n  /**\n    * define if txlistener should listen on the network or if only tx created from remix are managed\n    *\n    * @param {Bool} type - true if listen on the network\n    */\n  setListenOnNetwork (listenOnNetwork) {\n    this._listenOnNetwork = listenOnNetwork\n    if (this._loopId) {\n      clearInterval(this._loopId)\n    }\n    this._listenOnNetwork ? this.startListening() : this.stopListening()\n  }\n\n  /**\n    * reset recorded transactions\n    */\n  init () {\n    this.blocks = []\n  }\n\n  /**\n    * start listening for incoming transactions\n    *\n    * @param {String} type - type/name of the provider to add\n    * @param {Object} obj  - provider\n    */\n  startListening () {\n    this.init()\n    this._isListening = true\n    if (this._listenOnNetwork && !this.executionContext.isVM()) {\n      this._startListenOnNetwork()\n    }\n  }\n\n  /**\n    * stop listening for incoming transactions. do not reset the recorded pool.\n    *\n    * @param {String} type - type/name of the provider to add\n    * @param {Object} obj  - provider\n    */\n  stopListening () {\n    if (this._loopId) {\n      clearInterval(this._loopId)\n    }\n    this._loopId = null\n    this._isListening = false\n  }\n\n  async _startListenOnNetwork () {\n    let lastSeenBlock = this.executionContext.lastBlock?.number - 1\n    let processingBlock = false\n\n    const processBlocks = async () => {\n      if (!this._isListening) return\n      if (processingBlock) return\n      processingBlock = true\n      const currentLoopId = this._loopId\n      if (this._loopId === null) {\n        processingBlock = false\n        return\n      }\n      if (!lastSeenBlock) {\n        lastSeenBlock = this.executionContext.lastBlock?.number // trying to resynchronize\n        console.log('listen on blocks, resynchronising')\n        processingBlock = false\n        return\n      }\n      const current = this.executionContext.lastBlock?.number\n      if (!current) {\n        console.log(new Error('no last block found'))\n        processingBlock = false\n        return\n      }\n      if (currentLoopId === this._loopId && lastSeenBlock < current) {\n        while (lastSeenBlock <= current) {\n          try {\n            if (!this._isListening) break\n            await this._manageBlock(lastSeenBlock)\n          } catch (e) {\n            console.log(e)\n          }\n          lastSeenBlock++\n        }\n        lastSeenBlock = current\n      }\n      processingBlock = false\n    }\n    this._loopId = setInterval(processBlocks, 20000)\n    processBlocks()\n  }\n\n  async _manageBlock (blockNumber) {\n    try {\n      const result = await this.executionContext.web3().eth.getBlock(blockNumber, true)\n      return await this._newBlock(Object.assign({ type: 'web3' }, result))  \n    } catch (e) {}\n  }\n\n  /**\n    * try to resolve the contract name from the given @arg address\n    *\n    * @param {String} address - contract address to resolve\n    * @return {String} - contract name\n    */\n  resolvedContract (address) {\n    if (this._resolvedContracts[address]) return this._resolvedContracts[address].name\n    return null\n  }\n\n  /**\n    * try to resolve the transaction from the given @arg txHash\n    *\n    * @param {String} txHash - contract address to resolve\n    * @return {String} - contract name\n    */\n  resolvedTransaction (txHash) {\n    return this._resolvedTransactions[txHash]\n  }\n\n  async _newBlock (block) {\n    this.blocks.push(block)\n    await this._resolve(block.transactions)\n    this.event.trigger('newBlock', [block])\n  }\n\n  _resolveAsync (tx) {\n    return new Promise((resolve, reject) => {\n      this._api.resolveReceipt(tx, (error, receipt) => {\n        if (error) return reject(error)\n        this._resolveTx(tx, receipt, (error, resolvedData) => {\n          if (error) return reject(error)\n          if (resolvedData) {\n            this.event.trigger('txResolved', [tx, receipt, resolvedData])\n          }\n          this.event.trigger('newTransaction', [tx, receipt])\n          resolve({})\n        })\n      })\n    })\n  }\n\n  async _resolve (transactions) {\n    for (const tx of transactions) {\n      try {\n        if (!this._isListening) break\n        await this._resolveAsync(tx)\n      } catch (e) {}\n    }\n  }\n\n  _resolveTx (tx, receipt, cb) {\n    const contracts = this._api.contracts()\n    if (!contracts) return cb()\n    let fun\n    let contract\n    if (!tx.to || tx.to === '0x0') { // testrpc returns 0x0 in that case\n      // contract creation / resolve using the creation bytes code\n      // if web3: we have to call getTransactionReceipt to get the created address\n      // if VM: created address already included\n      const code = tx.input\n      contract = this._tryResolveContract(code, contracts, true)\n      if (contract) {\n        const address = receipt.contractAddress\n        this._resolvedContracts[address] = contract\n        fun = this._resolveFunction(contract, tx, true)\n        if (this._resolvedTransactions[tx.hash]) {\n          this._resolvedTransactions[tx.hash].contractAddress = address\n        }\n        return cb(null, { to: null, contractName: contract.name, function: fun, creationAddress: address })\n      }\n      return cb()\n    } else {\n      // first check known contract, resolve against the `runtimeBytecode` if not known\n      contract = this._resolvedContracts[tx.to]\n      if (!contract) {\n        this.executionContext.web3().eth.getCode(tx.to, (error, code) => {\n          if (error) return cb(error)\n          if (code) {\n            const contract = this._tryResolveContract(code, contracts, false)\n            if (contract) {\n              this._resolvedContracts[tx.to] = contract\n              const fun = this._resolveFunction(contract, tx, false)\n              return cb(null, { to: tx.to, contractName: contract.name, function: fun })\n            }\n          }\n          return cb()\n        })\n        return\n      }\n      if (contract) {\n        fun = this._resolveFunction(contract, tx, false)\n        return cb(null, { to: tx.to, contractName: contract.name, function: fun })\n      }\n      return cb()\n    }\n  }\n\n  _resolveFunction (contract, tx, isCtor) {\n    if (!contract) {\n      console.log('txListener: cannot resolve contract - contract is null')\n      return\n    }\n    const abi = contract.object.abi\n    const inputData = tx.input.replace('0x', '')\n    if (!isCtor) {\n      const methodIdentifiers = contract.object.evm.methodIdentifiers\n      for (const fn in methodIdentifiers) {\n        if (methodIdentifiers[fn] === inputData.substring(0, 8)) {\n          const fnabi = getFunction(abi, fn)\n          this._resolvedTransactions[tx.hash] = {\n            contractName: contract.name,\n            to: tx.to,\n            fn: fn,\n            params: this._decodeInputParams(inputData.substring(8), fnabi)\n          }\n          if (tx.returnValue) {\n            this._resolvedTransactions[tx.hash].decodedReturnValue = decodeResponse(tx.returnValue, fnabi)\n          }\n          return this._resolvedTransactions[tx.hash]\n        }\n      }\n      // receive function\n      if (!inputData && getReceiveInterface(abi)) {\n        this._resolvedTransactions[tx.hash] = {\n          contractName: contract.name,\n          to: tx.to,\n          fn: '(receive)',\n          params: null\n        }\n      } else {\n        // fallback function\n        this._resolvedTransactions[tx.hash] = {\n          contractName: contract.name,\n          to: tx.to,\n          fn: '(fallback)',\n          params: null\n        }\n      }\n    } else {\n      const bytecode = contract.object.evm.bytecode.object\n      let params = null\n      if (bytecode && bytecode.length) {\n        params = this._decodeInputParams(getinputParameters(inputData), getConstructorInterface(abi))\n      }\n      this._resolvedTransactions[tx.hash] = {\n        contractName: contract.name,\n        to: null,\n        fn: '(constructor)',\n        params: params\n      }\n    }\n    return this._resolvedTransactions[tx.hash]\n  }\n\n  _tryResolveContract (codeToResolve, compiledContracts, isCreation) {\n    let found = null\n    visitContracts(compiledContracts, (contract) => {\n      const bytes = isCreation ? contract.object.evm.bytecode.object : contract.object.evm.deployedBytecode.object\n      if (compareByteCode(codeToResolve, '0x' + bytes)) {\n        found = contract\n        return true\n      }\n    })\n    return found\n  }\n\n  _decodeInputParams (data, abi) {\n    data = toBuffer(addHexPrefix(data))\n    if (!data.length) data = new Uint8Array(32 * abi.inputs.length) // ensuring the data is at least filled by 0 cause `AbiCoder` throws if there's not engouh data\n\n    const inputTypes = []\n    for (let i = 0; i < abi.inputs.length; i++) {\n      const type = abi.inputs[i].type\n      inputTypes.push(type.indexOf('tuple') === 0 ? makeFullTypeDefinition(abi.inputs[i]) : type)\n    }\n    const abiCoder = new ethers.utils.AbiCoder()\n    const decoded = abiCoder.decode(inputTypes, data)\n    const ret = {}\n    for (const k in abi.inputs) {\n      ret[abi.inputs[k].type + ' ' + abi.inputs[k].name] = decoded[k]\n    }\n    return ret\n  }\n}\n","'use strict'\nimport { EventManager } from '../eventManager'\n\nexport type Transaction = {\n  from: string,\n  to: string,\n  value: string,\n  data: string,\n  gasLimit: number,\n  useCall: boolean,\n  timestamp?: number\n  type: '0x1' | '0x2'\n}\n\nexport class TxRunner {\n  event\n  pendingTxs\n  queusTxs\n  opt\n  internalRunner\n  constructor (internalRunner, opt) {\n    this.opt = opt || {}\n    this.internalRunner = internalRunner\n    this.event = new EventManager()\n\n    this.pendingTxs = {}\n    this.queusTxs = []\n  }\n\n  rawRun (args: Transaction, confirmationCb, gasEstimationForceSend, promptCb, cb) {\n    run(this, args, args.timestamp || Date.now(), confirmationCb, gasEstimationForceSend, promptCb, cb)\n  }\n\n  execute (args: Transaction, confirmationCb, gasEstimationForceSend, promptCb, callback) {\n    let data = args.data\n    if (data.slice(0, 2) !== '0x') {\n      data = '0x' + data\n    }\n    this.internalRunner.execute(args, confirmationCb, gasEstimationForceSend, promptCb, callback)\n  }\n}\n\nfunction run (self, tx: Transaction, stamp, confirmationCb, gasEstimationForceSend = null, promptCb = null, callback = null) {\n  if (Object.keys(self.pendingTxs).length) {\n    return self.queusTxs.push({ tx, stamp, confirmationCb, gasEstimationForceSend, promptCb, callback })\n  }\n  self.pendingTxs[stamp] = tx\n  self.execute(tx, confirmationCb, gasEstimationForceSend, promptCb, function (error, result) {\n    delete self.pendingTxs[stamp]\n    if (callback && typeof callback === 'function') callback(error, result)\n    if (self.queusTxs.length) {\n      const next = self.queusTxs.pop()\n      run(self, next.tx, next.stamp, next.confirmationCb, next.gasEstimationForceSend, next.promptCb, next.callback)\n    }\n  })\n}\n","'use strict'\nimport { RunBlockResult, RunTxResult } from '@ethereumjs/vm'\nimport { ConsensusType } from '@ethereumjs/common'\nimport { Transaction, FeeMarketEIP1559Transaction } from '@ethereumjs/tx'\nimport { Block } from '@ethereumjs/block'\nimport { bufferToHex, Address } from '@ethereumjs/util'\nimport type { Account } from '@ethereumjs/util'\nimport { EventManager } from '../eventManager'\nimport { LogsManager } from './logsManager'\nimport type { Transaction as InternalTransaction } from './txRunner'\n\nexport type VMexecutionResult = {\n  result: RunTxResult,\n  transactionHash: string\n  block: Block,\n  tx: Transaction\n}\n\nexport type VMExecutionCallBack = (error: string | Error, result?: VMexecutionResult) => void\n\nexport class TxRunnerVM {\n  event\n  blockNumber\n  pendingTxs\n  vmaccounts\n  queusTxs\n  blocks\n  logsManager\n  commonContext\n  blockParentHash\n  nextNonceForCall: number\n  getVMObject: () => any\n\n  constructor (vmaccounts, api, getVMObject) {\n    this.event = new EventManager()\n    this.logsManager = new LogsManager()\n    // has a default for now for backwards compatability\n    this.getVMObject = getVMObject\n    this.commonContext = this.getVMObject().common\n    this.blockNumber = 0\n    this.pendingTxs = {}\n    this.vmaccounts = vmaccounts\n    this.queusTxs = []\n    this.blocks = []\n    /*\n      txHash is generated using the nonce,\n      in order to have unique transaction hash, we need to keep using different nonce (in case of a call)\n      so we increment this value after each call.\n      For this to function we also need to skip nonce validation, in the vm: `{ skipNonce: true }`\n    */\n    this.nextNonceForCall = 0\n\n    const vm = this.getVMObject().vm\n    this.blockParentHash = vm.blockchain.genesisBlock.hash()\n  }\n\n  execute (args: InternalTransaction, confirmationCb, gasEstimationForceSend, promptCb, callback: VMExecutionCallBack) {\n    let data = args.data\n    if (data.slice(0, 2) !== '0x') {\n      data = '0x' + data\n    }\n\n    try {\n      this.runInVm(args.from, args.to, data, args.value, args.gasLimit, args.useCall, callback)\n    } catch (e) {\n      callback(e, null)\n    }\n  }\n\n  runInVm (from: string, to: string, data: string, value: string, gasLimit: number, useCall: boolean, callback: VMExecutionCallBack) {\n    let account\n    if (!from && useCall && Object.keys(this.vmaccounts).length) {\n      from = Object.keys(this.vmaccounts)[0]\n      account = this.vmaccounts[from]\n    } else account = this.vmaccounts[from] \n    \n    if (!account) {\n      return callback('Invalid account selected')\n    }\n    \n    this.getVMObject().stateManager.getAccount(Address.fromString(from)).then((res: Account) => {\n      const EIP1559 = this.commonContext.hardfork() !== 'berlin' // berlin is the only pre eip1559 fork that we handle.\n      let tx\n      if (!EIP1559) {\n        tx = Transaction.fromTxData({\n          nonce: useCall ? this.nextNonceForCall : res.nonce,\n          gasPrice: '0x1',\n          gasLimit: gasLimit,\n          to: to,\n          value: value,\n          data: Buffer.from(data.slice(2), 'hex')\n        }, { common: this.commonContext }).sign(account.privateKey)\n      } else {\n        tx = FeeMarketEIP1559Transaction.fromTxData({\n          nonce: useCall ? this.nextNonceForCall : res.nonce,\n          maxPriorityFeePerGas: '0x01',\n          maxFeePerGas: '0x1',\n          gasLimit: gasLimit,\n          to: to,\n          value: value,\n          data: Buffer.from(data.slice(2), 'hex')\n        }).sign(account.privateKey)\n      }\n      if (useCall) this.nextNonceForCall++\n\n      const coinbases = ['0x0e9281e9c6a0808672eaba6bd1220e144c9bb07a', '0x8945a1288dc78a6d8952a92c77aee6730b414778', '0x94d76e24f818426ae84aa404140e8d5f60e10e7e']\n      const difficulties = [69762765929000, 70762765929000, 71762765929000]\n      const difficulty = this.commonContext.consensusType() === ConsensusType.ProofOfStake ? 0 : difficulties[this.blockNumber % difficulties.length]\n      \n      const blocknumber = this.blockNumber + 1\n      const block = Block.fromBlockData({\n        header: {\n          timestamp: new Date().getTime() / 1000 | 0,\n          number: blocknumber,\n          coinbase: coinbases[blocknumber % coinbases.length],\n          difficulty,\n          gasLimit,\n          baseFeePerGas: EIP1559 ? '0x1' : undefined,\n          parentHash: this.blockParentHash\n        },\n        transactions: [tx]\n      }, { common: this.commonContext, hardforkByBlockNumber: false, hardforkByTTD: undefined })\n\n      if (!useCall) {\n        this.blockNumber = this.blockNumber + 1\n        this.blockParentHash = block.hash()\n        this.runBlockInVm(tx, block, (err, result) => {\n          if (!err) this.getVMObject().vm.blockchain.putBlock(block)\n          callback(err, result)\n        })\n      } else {\n        this.getVMObject().stateManager.checkpoint().then(() => {\n          this.runBlockInVm(tx, block, (err, result) => {\n            this.getVMObject().stateManager.revert().then(() => {\n              callback(err, result)\n            })\n          })\n        })\n      }\n    }).catch((e) => {\n      callback(e)\n    })\n  }\n\n  runBlockInVm (tx, block, callback) {\n    this.getVMObject().vm.runBlock({ block: block, generate: true, skipBlockValidation: true, skipBalance: false, skipNonce: true }).then((results: RunBlockResult) => {\n      const result: RunTxResult = results.results[0]\n      callback(null, {\n        result,\n        transactionHash: bufferToHex(Buffer.from(tx.hash())),\n        block,\n        tx\n      })\n    }).catch(function (err) {\n      callback(err)\n    })\n  }\n}\n","'use strict'\nimport { EventManager } from '../eventManager'\nimport type { Transaction as InternalTransaction } from './txRunner'\nimport Web3 from 'web3'\n\nexport class TxRunnerWeb3 {\n  event\n  _api\n  getWeb3: () => Web3\n  currentblockGasLimit: () => number\n\n  constructor (api, getWeb3, currentblockGasLimit) {\n    this.event = new EventManager()\n    this.getWeb3 = getWeb3\n    this.currentblockGasLimit = currentblockGasLimit\n    this._api = api\n  }\n\n  _executeTx (tx, network, txFee, api, promptCb, callback) {\n    if (network && network.lastBlock && network.lastBlock.baseFeePerGas) {\n      // the sending stack (web3.js / metamask need to have the type defined)\n      // this is to avoid the following issue: https://github.com/MetaMask/metamask-extension/issues/11824\n      tx.type = '0x2'\n    }\n    if (txFee) {\n      if (txFee.baseFeePerGas) {\n        tx.maxPriorityFeePerGas = this.getWeb3().utils.toHex(this.getWeb3().utils.toWei(txFee.maxPriorityFee, 'gwei'))\n        tx.maxFeePerGas = this.getWeb3().utils.toHex(this.getWeb3().utils.toWei(txFee.maxFee, 'gwei'))\n        tx.type = '0x2'\n      } else {\n        tx.gasPrice = this.getWeb3().utils.toHex(this.getWeb3().utils.toWei(txFee.gasPrice, 'gwei'))\n        tx.type = '0x1'\n      }\n    }\n\n    if (api.personalMode()) {\n      promptCb(\n        (value) => {\n          this._sendTransaction((this.getWeb3() as any).personal.sendTransaction, tx, value, callback)\n        },\n        () => {\n          return callback('Canceled by user.')\n        }\n      )\n    } else {\n      this._sendTransaction(this.getWeb3().eth.sendTransaction, tx, null, callback)\n    }\n  }\n\n  _sendTransaction (sendTx, tx, pass, callback) {\n    let currentDateTime = new Date();\n    const start = currentDateTime.getTime() / 1000\n    const cb = (err, resp) => {\n      if (err) {\n        return callback(err, resp)\n      }\n      this.event.trigger('transactionBroadcasted', [resp])\n      const listenOnResponse = () => {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n          const receipt = await tryTillReceiptAvailable(resp, this.getWeb3())\n          tx = await tryTillTxAvailable(resp, this.getWeb3())\n          currentDateTime = new Date();\n          const end = currentDateTime.getTime() / 1000\n          console.log('tx duration', end - start)\n          resolve({\n            receipt,\n            tx,\n            transactionHash: receipt ? receipt['transactionHash'] : null\n          })\n        })\n      }\n      listenOnResponse().then((txData) => { callback(null, txData) }).catch((error) => { callback(error) })\n    }\n    const args = pass !== null ? [tx, pass, cb] : [tx, cb]\n    try {\n      sendTx.apply({}, args)\n    } catch (e) {\n      return callback(`Send transaction failed: ${e.message} . if you use an injected provider, please check it is properly unlocked. `)\n    }\n  }\n\n  execute (args: InternalTransaction, confirmationCb, gasEstimationForceSend, promptCb, callback) {\n    let data = args.data\n    if (data.slice(0, 2) !== '0x') {\n      data = '0x' + data\n    }\n\n    return this.runInNode(args.from, args.to, data, args.value, args.gasLimit, args.useCall, args.timestamp, confirmationCb, gasEstimationForceSend, promptCb, callback)\n  }\n\n  runInNode (from, to, data, value, gasLimit, useCall, timestamp, confirmCb, gasEstimationForceSend, promptCb, callback) {\n    const tx = { from: from, to: to, data: data, value: value }\n    if (!from) return callback('the value of \"from\" is not defined. Please make sure an account is selected.')\n    if (useCall) {\n      tx['gas'] = gasLimit\n      if (this._api && this._api.isVM()) tx['timestamp'] = timestamp\n      return this.getWeb3().eth.call(tx, function (error, result: any) {\n        if (error) return callback(error)\n        callback(null, {\n          result: result\n        })\n      })\n    }\n    this._api.detectNetwork((errNetWork, network) => {\n      if (errNetWork) {\n        console.log(errNetWork)\n        return\n      }\n      const txCopy =  { ...tx, type: undefined, maxFeePerGas: undefined, gasPrice: undefined }\n      if (network && network.lastBlock) {\n        if (network.lastBlock.baseFeePerGas) {\n          // the sending stack (web3.js / metamask need to have the type defined)\n          // this is to avoid the following issue: https://github.com/MetaMask/metamask-extension/issues/11824\n          txCopy.type = '0x2'\n          txCopy.maxFeePerGas = Math.ceil(network.lastBlock.baseFeePerGas + network.lastBlock.baseFeePerGas / 3)\n        } else {\n          txCopy.type = '0x1'\n          txCopy.gasPrice = network.lastBlock.baseFeePerGas\n        }\n      }      \n      this.getWeb3().eth.estimateGas(txCopy, (err, gasEstimation) => {\n        if (err && err.message.indexOf('Invalid JSON RPC response') !== -1) {\n          // // @todo(#378) this should be removed when https://github.com/WalletConnect/walletconnect-monorepo/issues/334 is fixed\n          callback(new Error('Gas estimation failed because of an unknown internal error. This may indicated that the transaction will fail.'))\n        }\n        err = network.name === 'VM' ? null : err // just send the tx if \"VM\"\n        gasEstimationForceSend(err, () => {\n          // callback is called whenever no error\n          tx['gas'] = !gasEstimation ? gasLimit : gasEstimation\n  \n          if (this._api.config.getUnpersistedProperty('doNotShowTransactionConfirmationAgain')) {\n            return this._executeTx(tx, network, null, this._api, promptCb, callback)\n          }\n\n          confirmCb(network, tx, tx['gas'], (txFee) => {\n            return this._executeTx(tx, network, txFee, this._api, promptCb, callback)\n          }, (error) => {\n            callback(error)\n          })\n        }, () => {\n          const blockGasLimit = this.currentblockGasLimit()\n          // NOTE: estimateGas very likely will return a large limit if execution of the code failed\n          //       we want to be able to run the code in order to debug and find the cause for the failure\n          if (err) return callback(err)\n  \n          let warnEstimation = ' An important gas estimation might also be the sign of a problem in the contract code. Please check loops and be sure you did not sent value to a non payable function (that\\'s also the reason of strong gas estimation). '\n          warnEstimation += ' ' + err\n  \n          if (gasEstimation > gasLimit) {\n            return callback('Gas required exceeds limit: ' + gasLimit + '. ' + warnEstimation)\n          }\n          if (gasEstimation > blockGasLimit) {\n            return callback('Gas required exceeds block gas limit: ' + gasLimit + '. ' + warnEstimation)\n          }\n        })\n      })\n    })\n  }\n}\n\nasync function tryTillReceiptAvailable (txhash, web3) {\n  try {\n    const receipt = await web3.eth.getTransactionReceipt(txhash)\n    if (receipt) return receipt\n  } catch (e) {}\n  await pause()\n  return await tryTillReceiptAvailable(txhash, web3)\n}\n\nasync function tryTillTxAvailable (txhash, web3) {\n  try {\n    const tx = await web3.eth.getTransaction(txhash)\n    if (tx && tx.blockHash) return tx\n  } catch (e) {}\n  return await tryTillTxAvailable(txhash, web3)\n}\n\nasync function pause () { return new Promise((resolve, reject) => { setTimeout(resolve, 500) }) }\n","'use strict'\nimport { BN } from 'bn.js'\nimport { bufferToHex } from '@ethereumjs/util'\n\nexport function toInt (h) {\n  if (h.indexOf && h.indexOf('0x') === 0) {\n    return (new BN(h.replace('0x', ''), 16)).toString(10)\n  } else if ((h.constructor && h.constructor.name === 'BigNumber') || BN.isBN(h)) {\n    return h.toString(10)\n  }\n  return h\n}\n\nexport const stringify = convertToString\n\nfunction convertToString (v) {\n  try {\n    if (v instanceof Array) {\n      const ret = []\n      for (const k in v) {\n        ret.push(convertToString(v[k]))\n      }\n      return ret\n    } else if (BN.isBN(v) || (v.constructor && v.constructor.name === 'BigNumber')) {\n      return v.toString(10)\n    } else if (v._isBuffer) {\n      return bufferToHex(v)\n    } else if (typeof v === 'object') {\n      const retObject = {}\n      for (const i in v) {\n        retObject[i] = convertToString(v[i])\n      }\n      return retObject\n    } else {\n      return v\n    }\n  } catch (e) {\n    console.log(e)\n    return v\n  }\n}\n","import { keccak224, keccak384, keccak256 as k256, keccak512 } from 'ethereum-cryptography/keccak'\nconst createHash = require('create-hash')\nimport { encode, Input } from 'rlp'\nimport { toBuffer, setLengthLeft, isHexString } from '@ethereumjs/util'\n\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccak = function(a: Buffer, bits: number = 256): Buffer {\n  assertIsBuffer(a)\n  switch (bits) {\n  case 224: {\n    return toBuffer(keccak224(a))\n  }\n  case 256: {\n    return toBuffer(k256(a))\n  }\n  case 384: {\n    return toBuffer(keccak384(a))\n  }\n  case 512: {\n    return toBuffer(keccak512(a))\n  }\n  default: {\n    throw new Error(`Invald algorithm: keccak${bits}`)\n  }\n  }\n}\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexport const keccak256 = function(a: Buffer): Buffer {\n  return keccak(a)\n}\n\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromString = function(a: string, bits: number = 256) {\n  assertIsString(a)\n  const buf = Buffer.from(a, 'utf8')\n  return keccak(buf, bits)\n}\n\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromHexString = function(a: string, bits: number = 256) {\n  assertIsHexString(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromArray = function(a: number[], bits: number = 256) {\n  assertIsArray(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nconst _sha256 = function(a: any): Buffer {\n  a = toBuffer(a)\n  return createHash('sha256')\n    .update(a)\n    .digest()\n}\n\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexport const sha256 = function(a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexport const sha256FromString = function(a: string): Buffer {\n  assertIsString(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexport const sha256FromArray = function(a: number[]): Buffer {\n  assertIsArray(a)\n  return _sha256(a)\n}\n\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nconst _ripemd160 = function(a: any, padded: boolean): Buffer {\n  a = toBuffer(a)\n  const hash = createHash('rmd160')\n    .update(a)\n    .digest()\n  if (padded === true) {\n    return setLengthLeft(hash, 32)\n  } else {\n    return hash\n  }\n}\n\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160 = function(a: Buffer, padded: boolean): Buffer {\n  assertIsBuffer(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromString = function(a: string, padded: boolean): Buffer {\n  assertIsString(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromArray = function(a: number[], padded: boolean): Buffer {\n  assertIsArray(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexport const rlphash = function(a: Input): Buffer {\n  return keccak(encode(a))\n}\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function(input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function(input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function(input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function(input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}","export function compilerInput (contracts) {\n  return JSON.stringify({\n    language: 'Solidity',\n    sources: {\n      'test.sol': {\n        content: contracts\n      }\n    },\n    settings: {\n      optimizer: {\n        enabled: false,\n        runs: 200\n      },\n      outputSelection: {\n        '*': {\n          '': ['ast'],\n          '*': ['abi', 'metadata', 'evm.legacyAssembly', 'evm.bytecode', 'evm.deployedBytecode', 'evm.methodIdentifiers', 'evm.gasEstimates']\n        }\n      }\n    }\n  })\n}\n","// Fetched from https://github.com/nomiclabs/hardhat/blob/ee4969a0a8f746f4775d4018326056d161066869/packages/hardhat-core/src/internal/hardhat-network/stack-traces/logger.ts#L47\n\nexport const ConsoleLogs = {\n  // Legacy method signatures before this PR: https://github.com/NomicFoundation/hardhat/pull/2964\n  1368866505: '()',\n  1309416733: '(int)',\n  4122065833: '(uint)',\n  1093685164: '(string)',\n  843419373: '(bool)',\n  741264322: '(address)',\n  199720790: '(bytes)',\n  1847107880: '(bytes1)',\n  3921027734: '(bytes2)',\n  763578662: '(bytes3)',\n  3764340945: '(bytes4)',\n  2793701517: '(bytes5)',\n  2927928721: '(bytes6)',\n  1322614312: '(bytes7)',\n  1334060334: '(bytes8)',\n  2428341456: '(bytes9)',\n  20780939: '(bytes10)',\n  67127854: '(bytes11)',\n  2258660029: '(bytes12)',\n  2488442420: '(bytes13)',\n  2456219775: '(bytes14)',\n  3667227872: '(bytes15)',\n  1717330180: '(bytes16)',\n  866084666: '(bytes17)',\n  3302112666: '(bytes18)',\n  1584093747: '(bytes19)',\n  1367925737: '(bytes20)',\n  3923391840: '(bytes21)',\n  3589990556: '(bytes22)',\n  2879508237: '(bytes23)',\n  4055063348: '(bytes24)',\n  193248344: '(bytes25)',\n  4172368369: '(bytes26)',\n  976705501: '(bytes27)',\n  3358255854: '(bytes28)',\n  1265222613: '(bytes29)',\n  3994207469: '(bytes30)',\n  3263516050: '(bytes31)',\n  666357637: '(bytes32)',\n  1812949376: '(uint,uint)',\n  262402885: '(uint,string)',\n  510514412: '(uint,bool)',\n  1491830284: '(uint,address)',\n  2534451664: '(string,uint)',\n  1264337527: '(string,string)',\n  3283441205: '(string,bool)',\n  832238387: '(string,address)',\n  910912146: '(bool,uint)',\n  2414527781: '(bool,string)',\n  705760899: '(bool,bool)',\n  2235320393: '(bool,address)',\n  574869411: '(address,uint)',\n  1973388987: '(address,string)',\n  1974863315: '(address,bool)',\n  3673216170: '(address,address)',\n  3884059252: '(uint,uint,uint)',\n  2104037094: '(uint,uint,string)',\n  1733758967: '(uint,uint,bool)',\n  3191032091: '(uint,uint,address)',\n  1533929535: '(uint,string,uint)',\n  1062716053: '(uint,string,string)',\n  1185403086: '(uint,string,bool)',\n  529592906: '(uint,string,address)',\n  1515034914: '(uint,bool,uint)',\n  2332955902: '(uint,bool,string)',\n  3587091680: '(uint,bool,bool)',\n  1112473535: '(uint,bool,address)',\n  2286109610: '(uint,address,uint)',\n  3464692859: '(uint,address,string)',\n  2060456590: '(uint,address,bool)',\n  2104993307: '(uint,address,address)',\n  2526862595: '(string,uint,uint)',\n  2750793529: '(string,uint,string)',\n  4043501061: '(string,uint,bool)',\n  3817119609: '(string,uint,address)',\n  4083337817: '(string,string,uint)',\n  753761519: '(string,string,string)',\n  2967534005: '(string,string,bool)',\n  2515337621: '(string,string,address)',\n  689682896: '(string,bool,uint)',\n  3801674877: '(string,bool,string)',\n  2232122070: '(string,bool,bool)',\n  2469116728: '(string,bool,address)',\n  130552343: '(string,address,uint)',\n  3773410639: '(string,address,string)',\n  3374145236: '(string,address,bool)',\n  4243355104: '(string,address,address)',\n  995886048: '(bool,uint,uint)',\n  3359211184: '(bool,uint,string)',\n  464374251: '(bool,uint,bool)',\n  3302110471: '(bool,uint,address)',\n  3224906412: '(bool,string,uint)',\n  2960557183: '(bool,string,string)',\n  3686056519: '(bool,string,bool)',\n  2509355347: '(bool,string,address)',\n  2954061243: '(bool,bool,uint)',\n  626391622: '(bool,bool,string)',\n  1349555864: '(bool,bool,bool)',\n  276362893: '(bool,bool,address)',\n  3950005167: '(bool,address,uint)',\n  3734671984: '(bool,address,string)',\n  415876934: '(bool,address,bool)',\n  3530962535: '(bool,address,address)',\n  2273710942: '(address,uint,uint)',\n  3136907337: '(address,uint,string)',\n  3846889796: '(address,uint,bool)',\n  2548867988: '(address,uint,address)',\n  484110986: '(address,string,uint)',\n  4218888805: '(address,string,string)',\n  3473018801: '(address,string,bool)',\n  4035396840: '(address,string,address)',\n  742821141: '(address,bool,uint)',\n  555898316: '(address,bool,string)',\n  3951234194: '(address,bool,bool)',\n  4044790253: '(address,bool,address)',\n  1815506290: '(address,address,uint)',\n  7426238: '(address,address,string)',\n  4070990470: '(address,address,bool)',\n  25986242: '(address,address,address)',\n  1554033982: '(uint,uint,uint,uint)',\n  2024634892: '(uint,uint,uint,string)',\n  1683143115: '(uint,uint,uint,bool)',\n  3766828905: '(uint,uint,uint,address)',\n  949229117: '(uint,uint,string,uint)',\n  2080582194: '(uint,uint,string,string)',\n  2989403910: '(uint,uint,string,bool)',\n  1127384482: '(uint,uint,string,address)',\n  1818524812: '(uint,uint,bool,uint)',\n  4024028142: '(uint,uint,bool,string)',\n  2495495089: '(uint,uint,bool,bool)',\n  3776410703: '(uint,uint,bool,address)',\n  1628154048: '(uint,uint,address,uint)',\n  3600994782: '(uint,uint,address,string)',\n  2833785006: '(uint,uint,address,bool)',\n  3398671136: '(uint,uint,address,address)',\n  3221501959: '(uint,string,uint,uint)',\n  2730232985: '(uint,string,uint,string)',\n  2270850606: '(uint,string,uint,bool)',\n  2877020669: '(uint,string,uint,address)',\n  1995203422: '(uint,string,string,uint)',\n  1474103825: '(uint,string,string,string)',\n  310782872: '(uint,string,string,bool)',\n  3432549024: '(uint,string,string,address)',\n  2763295359: '(uint,string,bool,uint)',\n  2370346144: '(uint,string,bool,string)',\n  1371286465: '(uint,string,bool,bool)',\n  2037328032: '(uint,string,bool,address)',\n  2565338099: '(uint,string,address,uint)',\n  4170733439: '(uint,string,address,string)',\n  4181720887: '(uint,string,address,bool)',\n  2141537675: '(uint,string,address,address)',\n  1451396516: '(uint,bool,uint,uint)',\n  3906845782: '(uint,bool,uint,string)',\n  3534472445: '(uint,bool,uint,bool)',\n  1329595790: '(uint,bool,uint,address)',\n  2438978344: '(uint,bool,string,uint)',\n  2754870525: '(uint,bool,string,string)',\n  879671495: '(uint,bool,string,bool)',\n  1231956916: '(uint,bool,string,address)',\n  3173363033: '(uint,bool,bool,uint)',\n  831186331: '(uint,bool,bool,string)',\n  1315722005: '(uint,bool,bool,bool)',\n  1392910941: '(uint,bool,bool,address)',\n  1102442299: '(uint,bool,address,uint)',\n  2721084958: '(uint,bool,address,string)',\n  2449150530: '(uint,bool,address,bool)',\n  2263728396: '(uint,bool,address,address)',\n  3399106228: '(uint,address,uint,uint)',\n  1054063912: '(uint,address,uint,string)',\n  435581801: '(uint,address,uint,bool)',\n  4256361684: '(uint,address,uint,address)',\n  2697204968: '(uint,address,string,uint)',\n  2373420580: '(uint,address,string,string)',\n  581204390: '(uint,address,string,bool)',\n  3420819197: '(uint,address,string,address)',\n  2064181483: '(uint,address,bool,uint)',\n  1676730946: '(uint,address,bool,string)',\n  2116501773: '(uint,address,bool,bool)',\n  3056677012: '(uint,address,bool,address)',\n  2587672470: '(uint,address,address,uint)',\n  2034490470: '(uint,address,address,string)',\n  22350596: '(uint,address,address,bool)',\n  1430734329: '(uint,address,address,address)',\n  149837414: '(string,uint,uint,uint)',\n  2773406909: '(string,uint,uint,string)',\n  4147936829: '(string,uint,uint,bool)',\n  3201771711: '(string,uint,uint,address)',\n  2697245221: '(string,uint,string,uint)',\n  1821956834: '(string,uint,string,string)',\n  3919545039: '(string,uint,string,bool)',\n  3144824297: '(string,uint,string,address)',\n  1427009269: '(string,uint,bool,uint)',\n  1993105508: '(string,uint,bool,string)',\n  3816813520: '(string,uint,bool,bool)',\n  3847527825: '(string,uint,bool,address)',\n  1481210622: '(string,uint,address,uint)',\n  844415720: '(string,uint,address,string)',\n  285649143: '(string,uint,address,bool)',\n  3939013249: '(string,uint,address,address)',\n  3587119056: '(string,string,uint,uint)',\n  2366909661: '(string,string,uint,string)',\n  3864418506: '(string,string,uint,bool)',\n  1565476480: '(string,string,uint,address)',\n  2681211381: '(string,string,string,uint)',\n  3731419658: '(string,string,string,string)',\n  739726573: '(string,string,string,bool)',\n  1834430276: '(string,string,string,address)',\n  2256636538: '(string,string,bool,uint)',\n  1585754346: '(string,string,bool,string)',\n  1081628777: '(string,string,bool,bool)',\n  3279013851: '(string,string,bool,address)',\n  1250010474: '(string,string,address,uint)',\n  3944480640: '(string,string,address,string)',\n  1556958775: '(string,string,address,bool)',\n  1134328815: '(string,string,address,address)',\n  1572859960: '(string,bool,uint,uint)',\n  1119461927: '(string,bool,uint,string)',\n  1019590099: '(string,bool,uint,bool)',\n  1909687565: '(string,bool,uint,address)',\n  885731469: '(string,bool,string,uint)',\n  2821114603: '(string,bool,string,string)',\n  1066037277: '(string,bool,string,bool)',\n  3764542249: '(string,bool,string,address)',\n  2155164136: '(string,bool,bool,uint)',\n  2636305885: '(string,bool,bool,string)',\n  2304440517: '(string,bool,bool,bool)',\n  1905304873: '(string,bool,bool,address)',\n  685723286: '(string,bool,address,uint)',\n  764294052: '(string,bool,address,string)',\n  2508990662: '(string,bool,address,bool)',\n  870964509: '(string,bool,address,address)',\n  3668153533: '(string,address,uint,uint)',\n  1280700980: '(string,address,uint,string)',\n  1522647356: '(string,address,uint,bool)',\n  2741431424: '(string,address,uint,address)',\n  2405583849: '(string,address,string,uint)',\n  609847026: '(string,address,string,string)',\n  1595265676: '(string,address,string,bool)',\n  2864486961: '(string,address,string,address)',\n  3318856587: '(string,address,bool,uint)',\n  72663161: '(string,address,bool,string)',\n  2038975531: '(string,address,bool,bool)',\n  573965245: '(string,address,bool,address)',\n  1857524797: '(string,address,address,uint)',\n  2148146279: '(string,address,address,string)',\n  3047013728: '(string,address,address,bool)',\n  3985582326: '(string,address,address,address)',\n  853517604: '(bool,uint,uint,uint)',\n  3657852616: '(bool,uint,uint,string)',\n  2753397214: '(bool,uint,uint,bool)',\n  4049711649: '(bool,uint,uint,address)',\n  1098907931: '(bool,uint,string,uint)',\n  3542771016: '(bool,uint,string,string)',\n  2446522387: '(bool,uint,string,bool)',\n  2781285673: '(bool,uint,string,address)',\n  3554563475: '(bool,uint,bool,uint)',\n  3067439572: '(bool,uint,bool,string)',\n  2650928961: '(bool,uint,bool,bool)',\n  1114097656: '(bool,uint,bool,address)',\n  3399820138: '(bool,uint,address,uint)',\n  403247937: '(bool,uint,address,string)',\n  1705899016: '(bool,uint,address,bool)',\n  2318373034: '(bool,uint,address,address)',\n  2387273838: '(bool,string,uint,uint)',\n  2007084013: '(bool,string,uint,string)',\n  549177775: '(bool,string,uint,bool)',\n  1529002296: '(bool,string,uint,address)',\n  1574643090: '(bool,string,string,uint)',\n  392356650: '(bool,string,string,string)',\n  508266469: '(bool,string,string,bool)',\n  2547225816: '(bool,string,string,address)',\n  2372902053: '(bool,string,bool,uint)',\n  1211958294: '(bool,string,bool,string)',\n  3697185627: '(bool,string,bool,bool)',\n  1401816747: '(bool,string,bool,address)',\n  453743963: '(bool,string,address,uint)',\n  316065672: '(bool,string,address,string)',\n  1842623690: '(bool,string,address,bool)',\n  724244700: '(bool,string,address,address)',\n  1181212302: '(bool,bool,uint,uint)',\n  1348569399: '(bool,bool,uint,string)',\n  2874982852: '(bool,bool,uint,bool)',\n  201299213: '(bool,bool,uint,address)',\n  395003525: '(bool,bool,string,uint)',\n  1830717265: '(bool,bool,string,string)',\n  3092715066: '(bool,bool,string,bool)',\n  4188875657: '(bool,bool,string,address)',\n  3259532109: '(bool,bool,bool,uint)',\n  719587540: '(bool,bool,bool,string)',\n  992632032: '(bool,bool,bool,bool)',\n  2352126746: '(bool,bool,bool,address)',\n  1620281063: '(bool,bool,address,uint)',\n  2695133539: '(bool,bool,address,string)',\n  3231908568: '(bool,bool,address,bool)',\n  4102557348: '(bool,bool,address,address)',\n  2617143996: '(bool,address,uint,uint)',\n  2691192883: '(bool,address,uint,string)',\n  4002252402: '(bool,address,uint,bool)',\n  1760647349: '(bool,address,uint,address)',\n  194640930: '(bool,address,string,uint)',\n  2805734838: '(bool,address,string,string)',\n  3804222987: '(bool,address,string,bool)',\n  1870422078: '(bool,address,string,address)',\n  1287000017: '(bool,address,bool,uint)',\n  1248250676: '(bool,address,bool,string)',\n  1788626827: '(bool,address,bool,bool)',\n  474063670: '(bool,address,bool,address)',\n  1384430956: '(bool,address,address,uint)',\n  3625099623: '(bool,address,address,string)',\n  1180699616: '(bool,address,address,bool)',\n  487903233: '(bool,address,address,address)',\n  1024368100: '(address,uint,uint,uint)',\n  2301889963: '(address,uint,uint,string)',\n  3964381346: '(address,uint,uint,bool)',\n  519451700: '(address,uint,uint,address)',\n  4111650715: '(address,uint,string,uint)',\n  2119616147: '(address,uint,string,string)',\n  2751614737: '(address,uint,string,bool)',\n  3698927108: '(address,uint,string,address)',\n  1770996626: '(address,uint,bool,uint)',\n  2391690869: '(address,uint,bool,string)',\n  4272018778: '(address,uint,bool,bool)',\n  602229106: '(address,uint,bool,address)',\n  2782496616: '(address,uint,address,uint)',\n  1567749022: '(address,uint,address,string)',\n  4051804649: '(address,uint,address,bool)',\n  3961816175: '(address,uint,address,address)',\n  2764647008: '(address,string,uint,uint)',\n  1561552329: '(address,string,uint,string)',\n  2116357467: '(address,string,uint,bool)',\n  3755464715: '(address,string,uint,address)',\n  2706362425: '(address,string,string,uint)',\n  1560462603: '(address,string,string,string)',\n  900007711: '(address,string,string,bool)',\n  2689478535: '(address,string,string,address)',\n  3877655068: '(address,string,bool,uint)',\n  3154862590: '(address,string,bool,string)',\n  1595759775: '(address,string,bool,bool)',\n  542667202: '(address,string,bool,address)',\n  2350461865: '(address,string,address,uint)',\n  4158874181: '(address,string,address,string)',\n  233909110: '(address,string,address,bool)',\n  221706784: '(address,string,address,address)',\n  3255869470: '(address,bool,uint,uint)',\n  2606272204: '(address,bool,uint,string)',\n  2244855215: '(address,bool,uint,bool)',\n  227337758: '(address,bool,uint,address)',\n  2652011374: '(address,bool,string,uint)',\n  1197235251: '(address,bool,string,string)',\n  1353532957: '(address,bool,string,bool)',\n  436029782: '(address,bool,string,address)',\n  3484780374: '(address,bool,bool,uint)',\n  3754205928: '(address,bool,bool,string)',\n  3401856121: '(address,bool,bool,bool)',\n  3476636805: '(address,bool,bool,address)',\n  3698398930: '(address,bool,address,uint)',\n  769095910: '(address,bool,address,string)',\n  2801077007: '(address,bool,address,bool)',\n  1711502813: '(address,bool,address,address)',\n  1425929188: '(address,address,uint,uint)',\n  2647731885: '(address,address,uint,string)',\n  3270936812: '(address,address,uint,bool)',\n  3603321462: '(address,address,uint,address)',\n  69767936: '(address,address,string,uint)',\n  566079269: '(address,address,string,string)',\n  1863997774: '(address,address,string,bool)',\n  2406706454: '(address,address,string,address)',\n  2513854225: '(address,address,bool,uint)',\n  2858762440: '(address,address,bool,string)',\n  752096074: '(address,address,bool,bool)',\n  2669396846: '(address,address,bool,address)',\n  3982404743: '(address,address,address,uint)',\n  4161329696: '(address,address,address,string)',\n  238520724: '(address,address,address,bool)',\n  1717301556: '(address,address,address,address)',\n  4133908826: '(uint,uint)',\n  3054400204: '(string,uint)',\n\n  // Latest method signatures after updating uint to uint256 and int to int256\n\n  760966329: '(int256)',\n  4163653873: '(uint256)',\n  1681903839: '(uint256, string)',\n  480083635: '(uint256, bool)',\n  1764191366: '(uint256, address)',\n  965833939: '(bool, uint256)',\n  2198464680: '(address, uint256)',\n  3522001468: '(uint256, uint256, uint256)',\n  1909476082: '(uint256, uint256, string)',\n  1197922930: '(uint256, uint256, bool)',\n  1553380145: '(uint256, uint256, address)',\n  933920076: '(uint256, string, uint256)',\n  2970968351: '(uint256, string, string)',\n  1290643290: '(uint256, string, bool)',\n  2063255897: '(uint256, string, address)',\n  537493524: '(uint256, bool, uint256)',\n  2239189025: '(uint256, bool, string)',\n  544310864: '(uint256, bool, bool)',\n  889741179: '(uint256, bool, address)',\n  1520131797: '(uint256, address, uint256)',\n  1674265081: '(uint256, address, string)',\n  2607726658: '(uint256, address, bool)',\n  3170737120: '(uint256, address, address)',\n  3393701099: '(string, uint256, uint256)',\n  1500569737: '(string, uint256, string)',\n  3396809649: '(string, uint256, bool)',\n  478069832: '(string, uint256, address)',\n  1478619041: '(string, string, uint256)',\n  3378075862: '(string, bool, uint256)',\n  220641573: '(string, address, uint256)',\n  923808615: '(bool, uint256, uint256)',\n  3288086896: '(bool, uint256, string)',\n  3906927529: '(bool, uint256, bool)',\n  143587794: '(bool, uint256, address)',\n  278130193: '(bool, string, uint256)',\n  317855234: '(bool, bool, uint256)',\n  1601936123: '(bool, address, uint256)',\n  3063663350: '(address, uint256, uint256)',\n  2717051050: '(address, uint256, string)',\n  1736575400: '(address, uint256, bool)',\n  2076235848: '(address, uint256, address)',\n  1742565361: '(address, string, uint256)',\n  2622462459: '(address, bool, uint256)',\n  402547077: '(address, address, uint256)',\n  423606272: '(uint256, uint256, uint256, uint256)',\n  1506790371: '(uint256, uint256, uint256, string)',\n  4202792367: '(uint256, uint256, uint256, address)',\n  1570936811: '(uint256, uint256, string, uint256)',\n  668512210: '(uint256, uint256, string, string)',\n  2062986021: '(uint256, uint256, string, bool)',\n  1121066423: '(uint256, uint256, string, address)',\n  3950997458: '(uint256, uint256, bool, uint256)',\n  2780101785: '(uint256, uint256, bool, string)',\n  2869451494: '(uint256, uint256, bool, bool)',\n  2592172675: '(uint256, uint256, bool, address)',\n  2297881778: '(uint256, uint256, address, uint256)',\n  1826504888: '(uint256, uint256, address, string)',\n  365610102: '(uint256, uint256, address, bool)',\n  1453707697: '(uint256, uint256, address, address)',\n  2193775476: '(uint256, string, uint256, uint256)',\n  3082360010: '(uint256, string, uint256, string)',\n  1763348340: '(uint256, string, uint256, bool)',\n  992115124: '(uint256, string, uint256, address)',\n  2955463101: '(uint256, string, string, uint256)',\n  564987523: '(uint256, string, string, string)',\n  3014047421: '(uint256, string, string, bool)',\n  3582182914: '(uint256, string, string, address)',\n  3472922752: '(uint256, string, bool, uint256)',\n  3537118157: '(uint256, string, bool, string)',\n  3126025628: '(uint256, string, bool, bool)',\n  2922300801: '(uint256, string, bool, address)',\n  3906142605: '(uint256, string, address, uint256)',\n  2621104033: '(uint256, string, address, string)',\n  2428701270: '(uint256, string, address, bool)',\n  1634266465: '(uint256, string, address, address)',\n  3333212072: '(uint256, bool, uint256, uint256)',\n  3724797812: '(uint256, bool, uint256, string)',\n  2443193898: '(uint256, bool, uint256, bool)',\n  2295029825: '(uint256, bool, uint256, address)',\n  740099910: '(uint256, bool, string, uint256)',\n  1757984957: '(uint256, bool, string, string)',\n  3952250239: '(uint256, bool, string, bool)',\n  4015165464: '(uint256, bool, string, address)',\n  1952763427: '(uint256, bool, bool, uint256)',\n  3722155361: '(uint256, bool, bool, string)',\n  3069540257: '(uint256, bool, bool, bool)',\n  1768164185: '(uint256, bool, bool, address)',\n  125994997: '(uint256, bool, address, uint256)',\n  2917159623: '(uint256, bool, address, string)',\n  1162695845: '(uint256, bool, address, bool)',\n  2716814523: '(uint256, bool, address, address)',\n  211605953: '(uint256, address, uint256, uint256)',\n  3719324961: '(uint256, address, uint256, string)',\n  1601452668: '(uint256, address, uint256, bool)',\n  364980149: '(uint256, address, uint256, address)',\n  1182952285: '(uint256, address, string, uint256)',\n  1041403043: '(uint256, address, string, string)',\n  3425872647: '(uint256, address, string, bool)',\n  2629472255: '(uint256, address, string, address)',\n  1522374954: '(uint256, address, bool, uint256)',\n  2432370346: '(uint256, address, bool, string)',\n  3813741583: '(uint256, address, bool, bool)',\n  4017276179: '(uint256, address, bool, address)',\n  1936653238: '(uint256, address, address, uint256)',\n  52195187: '(uint256, address, address, string)',\n  153090805: '(uint256, address, address, bool)',\n  612938772: '(uint256, address, address, address)',\n  2812835923: '(string, uint256, uint256, uint256)',\n  2236298390: '(string, uint256, uint256, string)',\n  1982258066: '(string, uint256, uint256, bool)',\n  3793609336: '(string, uint256, uint256, address)',\n  3330189777: '(string, uint256, string, uint256)',\n  1522028063: '(string, uint256, string, string)',\n  2099530013: '(string, uint256, string, bool)',\n  2084975268: '(string, uint256, string, address)',\n  3827003247: '(string, uint256, bool, uint256)',\n  2885106328: '(string, uint256, bool, string)',\n  894187222: '(string, uint256, bool, bool)',\n  3773389720: '(string, uint256, bool, address)',\n  1325727174: '(string, uint256, address, uint256)',\n  2684039059: '(string, uint256, address, string)',\n  2182163010: '(string, uint256, address, bool)',\n  1587722158: '(string, uint256, address, address)',\n  4099767596: '(string, string, uint256, uint256)',\n  1562023706: '(string, string, uint256, string)',\n  3282609748: '(string, string, uint256, bool)',\n  270792626: '(string, string, uint256, address)',\n  2393878571: '(string, string, string, uint256)',\n  3601791698: '(string, string, bool, uint256)',\n  2093204999: '(string, string, address, uint256)',\n  1689631591: '(string, bool, uint256, uint256)',\n  1949134567: '(string, bool, uint256, string)',\n  2331496330: '(string, bool, uint256, bool)',\n  2472413631: '(string, bool, uint256, address)',\n  620303461: '(string, bool, string, uint256)',\n  2386524329: '(string, bool, bool, uint256)',\n  1560853253: '(string, bool, address, uint256)',\n  4176812830: '(string, address, uint256, uint256)',\n  1514632754: '(string, address, uint256, string)',\n  4232594928: '(string, address, uint256, bool)',\n  1677429701: '(string, address, uint256, address)',\n  2446397742: '(string, address, string, uint256)',\n  1050642026: '(string, address, bool, uint256)',\n  2398352281: '(string, address, address, uint256)',\n  927708338: '(bool, uint256, uint256, uint256)',\n  2389310301: '(bool, uint256, uint256, string)',\n  3197649747: '(bool, uint256, uint256, bool)',\n  14518201: '(bool, uint256, uint256, address)',\n  1779538402: '(bool, uint256, string, uint256)',\n  4122747465: '(bool, uint256, string, string)',\n  3857124139: '(bool, uint256, string, bool)',\n  4275904511: '(bool, uint256, string, address)',\n  2437143473: '(bool, uint256, bool, string)',\n  3468031191: '(bool, uint256, bool, bool)',\n  2597139990: '(bool, uint256, bool, address)',\n  355982471: '(bool, uint256, address, uint256)',\n  464760986: '(bool, uint256, address, string)',\n  3032683775: '(bool, uint256, address, bool)',\n  653615272: '(bool, uint256, address, address)',\n  679886795: '(bool, string, uint256, uint256)',\n  450457062: '(bool, string, uint256, string)',\n  1796103507: '(bool, string, uint256, bool)',\n  362193358: '(bool, string, uint256, address)',\n  2078327787: '(bool, string, string, uint256)',\n  369533843: '(bool, string, bool, uint256)',\n  196087467: '(bool, bool, uint256, uint256)',\n  2111099104: '(bool, bool, uint256, string)',\n  1637764366: '(bool, bool, uint256, bool)',\n  1420274080: '(bool, bool, uint256, address)',\n  3819555375: '(bool, bool, string, uint256)',\n  1836074433: '(bool, bool, bool, uint256)',\n  1276263767: '(bool, bool, address, uint256)',\n  2079424929: '(bool, address, uint256, uint256)',\n  1374724088: '(bool, address, uint256, string)',\n  3590430492: '(bool, address, uint256, bool)',\n  325780957: '(bool, address, uint256, address)',\n  3256837319: '(bool, address, string, uint256)',\n  126031106: '(bool, address, bool, uint256)',\n  208064958: '(bool, address, address, uint256)',\n  888202806: '(address, uint256, uint256, uint256)',\n  1244184599: '(address, uint256, uint256, string)',\n  1727118439: '(address, uint256, uint256, bool)',\n  551786573: '(address, uint256, uint256, address)',\n  3204577425: '(address, uint256, string, uint256)',\n  2292761606: '(address, uint256, string, string)',\n  3474460764: '(address, uint256, string, bool)',\n  1547898183: '(address, uint256, string, address)',\n  586594713: '(address, uint256, bool, uint256)',\n  3316483577: '(address, uint256, bool, string)',\n  1005970743: '(address, uint256, bool, bool)',\n  2736520652: '(address, uint256, bool, address)',\n  269444366: '(address, uint256, address, uint256)',\n  497649386: '(address, uint256, address, string)',\n  2713504179: '(address, uint256, address, bool)',\n  1200430178: '(address, uint256, address, address)',\n  499704248: '(address, string, uint256, uint256)',\n  1149776040: '(address, string, uint256, string)',\n  251125840: '(address, string, uint256, bool)',\n  1662531192: '(address, string, uint256, address)',\n  362776871: '(address, string, string, uint256)',\n  1365129398: '(address, string, bool, uint256)',\n  1166009295: '(address, string, address, uint256)',\n  946861556: '(address, bool, uint256, uint256)',\n  178704301: '(address, bool, uint256, string)',\n  3294903840: '(address, bool, uint256, bool)',\n  3438776481: '(address, bool, uint256, address)',\n  2162598411: '(address, bool, string, uint256)',\n  2353946086: '(address, bool, bool, uint256)',\n  2807847390: '(address, bool, address, uint256)',\n  3193255041: '(address, address, uint256, uint256)',\n  4256496016: '(address, address, uint256, string)',\n  2604815586: '(address, address, uint256, bool)',\n  2376523509: '(address, address, uint256, address)',\n  4011651047: '(address, address, string, uint256)',\n  963766156: '(address, address, bool, uint256)',\n  2485456247: '(address, address, address, uint256)',\n}\n","'use strict'\nimport { bufferToHex } from '@ethereumjs/util'\nimport { isHexString } from 'ethjs-util'\n\nfunction convertToPrefixedHex (input) {\n  if (input === undefined || input === null || isHexString(input)) {\n    return input\n  } else if (Buffer.isBuffer(input)) {\n    return bufferToHex(input)\n  }\n  return '0x' + input.toString(16)\n}\n\n/*\n txResult.result can be 3 different things:\n - VM call or tx: ethereumjs-vm result object\n - Node transaction: object returned from eth.getTransactionReceipt()\n - Node call: return value from function call (not an object)\n\n Also, VM results use BN and Buffers, Node results use hex strings/ints,\n So we need to normalize the values to prefixed hex strings\n*/\nexport function resultToRemixTx (txResult, execResult?) {\n  const { receipt, transactionHash, result } = txResult\n  const { status, gasUsed, contractAddress } = receipt\n  let returnValue, errorMessage\n\n  if (isHexString(result)) {\n    returnValue = result\n  } else if (execResult !== undefined) {\n    returnValue = execResult.returnValue\n    errorMessage = execResult.exceptionError\n  }\n\n  return {\n    transactionHash,\n    status,\n    gasUsed: convertToPrefixedHex(gasUsed),\n    error: errorMessage,\n    return: convertToPrefixedHex(returnValue),\n    createdAddress: convertToPrefixedHex(contractAddress)\n  }\n}\n","'use strict'\nexport function formatMemory (mem, width) {\n  const ret = {}\n  if (!mem) {\n    return ret\n  }\n\n  if (!mem.substr) {\n    mem = mem.join('') // geth returns an array, eth return raw string\n  }\n\n  for (let k = 0; k < mem.length; k += (width * 2)) {\n    const memory = mem.substr(k, width * 2)\n    const content = tryConvertAsciiFormat(memory)\n    ret['0x' + (k / 2).toString(16)] = content.raw + '\\t' + content.ascii\n  }\n  return ret\n}\n\nexport function tryConvertAsciiFormat (memorySlot) {\n  const ret = { ascii: '', raw: '' }\n  for (let k = 0; k < memorySlot.length; k += 2) {\n    const raw = memorySlot.substr(k, 2)\n    let ascii = String.fromCharCode(parseInt(raw, 16))\n    ascii = ascii.replace(/[^\\w\\s]/, '?')\n    if (ascii === '') {\n      ascii = '?'\n    }\n    ret.ascii += ascii\n    ret.raw += raw\n  }\n  return ret\n}\n\n/**\n * format @args css1, css2, css3 to css inline style\n *\n * @param {Object} css1 - css inline declaration\n * @param {Object} css2 - css inline declaration\n * @param {Object} css3 - css inline declaration\n * @param {Object} ...\n * @return {String} css inline style\n *                  if the key start with * the value is direcly appended to the inline style (which should be already inline style formatted)\n *                  used if multiple occurences of the same key is needed\n */\nexport function formatCss (css1, css2) {\n  let ret = ''\n  for (const arg in arguments) { // eslint-disable-line\n    for (const k in arguments[arg]) { // eslint-disable-line\n      if (arguments[arg][k] && ret.indexOf(k) === -1) { // eslint-disable-line\n        if (k.indexOf('*') === 0) {\n          ret += arguments[arg][k] // eslint-disable-line\n        } else {\n          ret += k + ':' + arguments[arg][k] + ';' // eslint-disable-line\n        }\n      }\n    }\n  }\n  return ret\n}\n\nexport function normalizeHex (hex) {\n  if (hex.indexOf('0x') === 0) {\n    hex = hex.replace('0x', '')\n  }\n  hex = hex.replace(/^0+/, '')\n  return '0x' + hex\n}\n\nexport function normalizeHexAddress (hex) {\n  if (hex.indexOf('0x') === 0) hex = hex.replace('0x', '')\n  if (hex.length >= 40) {\n    const reg = /(.{40})$/.exec(hex)\n    if (reg) {\n      return '0x' + reg[0]\n    }\n  } else {\n    return '0x' + (new Array(40 - hex.length + 1).join('0')) + hex\n  }\n}\n\nexport function runInBrowser () {\n  return typeof window !== 'undefined'\n}\n","import { EventManager } from './eventManager'\nimport * as uiHelper from './helpers/uiHelper'\nimport * as compilerHelper from './helpers/compilerHelper'\nimport * as util from './util'\nimport * as hash from './hash'\nimport { Storage } from './storage'\nimport { EventsDecoder } from './execution/eventsDecoder'\nimport * as txExecution from './execution/txExecution'\nimport * as txHelper from './execution/txHelper'\nimport * as txFormat from './execution/txFormat'\nimport { TxListener } from './execution/txListener'\nimport { TxRunner } from './execution/txRunner'\nimport { LogsManager } from './execution/logsManager'\nimport { forkAt } from './execution/forkAt'\nimport * as typeConversion from './execution/typeConversion'\nimport { TxRunnerVM } from './execution/txRunnerVM'\nimport { TxRunnerWeb3 } from './execution/txRunnerWeb3'\nimport * as txResultHelper from './helpers/txResultHelper'\nexport { ConsoleLogs } from './helpers/hhconsoleSigs'\nexport { ICompilerApi, ConfigurationSettings } from './types/ICompilerApi'\nexport { QueryParams } from './query-params'\nexport { VMexecutionResult } from './execution/txRunnerVM'\n\nconst helpers = {\n  ui: uiHelper,\n  compiler: compilerHelper,\n  txResultHelper\n}\nconst execution = {\n  EventsDecoder: EventsDecoder,\n  txExecution: txExecution,\n  txHelper: txHelper,\n  txFormat: txFormat,\n  txListener: TxListener,\n  TxRunner: TxRunner,\n  TxRunnerWeb3: TxRunnerWeb3,\n  TxRunnerVM: TxRunnerVM,\n  typeConversion: typeConversion,\n  LogsManager,\n  forkAt\n}\nexport { EventManager, helpers, Storage, util, execution, hash }\n","'use strict'\n\nexport class QueryParams  {\n\n  update (params) {\n    const currentParams = this.get()\n    const keys = Object.keys(params)\n    for (const x in keys) {\n      currentParams[keys[x]] = params[keys[x]]\n    }\n    let queryString = '#'\n    const updatedKeys = Object.keys(currentParams)\n    for (const y in updatedKeys) {\n      queryString += updatedKeys[y] + '=' + currentParams[updatedKeys[y]] + '&'\n    }\n    window.location.hash = queryString.slice(0, -1)\n  }\n\n  get () {\n    const qs = window.location.hash.substr(1)\n\n    if (window.location.search.length > 0) {\n      // use legacy query params instead of hash\n      window.location.hash = window.location.search.substr(1)\n      window.location.search = ''\n    }\n\n    const params = {}\n    const parts = qs.split('&')\n    for (const x in parts) {\n      const keyValue = parts[x].split('=')\n      if (keyValue[0] !== '') {\n        params[keyValue[0]] = keyValue[1]\n      }\n    }\n    return params\n  }\n}\n","'use strict'\n\nexport class Storage {\n  prefix\n\n  constructor (prefix) {\n    this.prefix = prefix\n\n    // on startup, upgrade the old storage layout\n    if (typeof window !== 'undefined') {\n      this.safeKeys().forEach(function (name) {\n        if (name.indexOf('sol-cache-file-', 0) === 0) {\n          const content = window.localStorage.getItem(name)\n          window.localStorage.setItem(name.replace(/^sol-cache-file-/, 'sol:'), content)\n          window.localStorage.removeItem(name)\n        }\n      })\n    }\n\n    // remove obsolete key\n    if (typeof window !== 'undefined') {\n      window.localStorage.removeItem('editor-size-cache')\n    }\n  }\n\n  exists (name) {\n    if (typeof window !== 'undefined') {\n      return this.get(name) !== null\n    }\n  }\n\n  get (name) {\n    if (typeof window !== 'undefined') {\n      return window.localStorage.getItem(this.prefix + name)\n    }\n  }\n\n  set (name, content) {\n    try {\n      if (typeof window !== 'undefined') {\n        window.localStorage.setItem(this.prefix + name, content)\n      }\n    } catch (exception) {\n      return false\n    }\n    return true\n  }\n\n  remove (name) {\n    if (typeof window !== 'undefined') {\n      window.localStorage.removeItem(this.prefix + name)\n    }\n    return true\n  }\n\n  rename (originalName, newName) {\n    const content = this.get(originalName)\n    if (!this.set(newName, content)) {\n      return false\n    }\n    this.remove(originalName)\n    return true\n  }\n\n  safeKeys () {\n    // NOTE: this is a workaround for some browsers\n    if (typeof window !== 'undefined') {\n      return Object.keys(window.localStorage).filter(function (item) { return item !== null && item !== undefined })\n    }\n    return []\n  }\n\n  keys () {\n    return this.safeKeys()\n      // filter any names not including the prefix\n      .filter(item => item.indexOf(this.prefix, 0) === 0)\n      // remove prefix from filename and add the 'browser' path\n      .map(item => item.substr(this.prefix.length))\n  }\n}\n","'use strict'\nimport { hash } from '@remix-project/remix-lib'\nimport { bufferToHex, setLengthLeft, toBuffer, addHexPrefix } from '@ethereumjs/util'\nimport stringSimilarity from 'string-similarity'\n\n/*\n contains misc util: @TODO should be splitted\n  - hex conversion\n  - binary search\n  - CALL related look up\n  - sha3 calculation\n  - swarm hash extraction\n  - bytecode comparison\n*/\n/*\n    ints: IntArray\n  */\n\n/**\n   * Converts a hex string to an array of integers.\n   */\nexport function hexToIntArray (hexString) {\n  if (hexString.slice(0, 2) === '0x') {\n    hexString = hexString.slice(2)\n  }\n  const integers = []\n  for (let i = 0; i < hexString.length; i += 2) {\n    integers.push(parseInt(hexString.slice(i, i + 2), 16))\n  }\n  return integers\n}\n\n/*\n    ints: list of BNs\n  */\nexport function hexListFromBNs (bnList) {\n  const ret = []\n  for (const k in bnList) {\n    const v = bnList[k].toString(16)\n    ret.push('0x' + v.padStart(64, '0'))\n  }\n  return ret\n}\n\nexport function toHexPaddedString(v: bigint | string): string {\n  if (v) {\n    if (typeof v === 'string') {\n      return v.startsWith('0x') ? v : '0x' + v\n    } else {\n      return '0x' + v.toString(16).padStart(64, '0')\n    }\n  }\n  else\n    return '0x' + '0'.padStart(64, '0')\n}\n\n/*\n  ints: ints: IntArray\n*/\nexport function formatMemory (mem) {\n  const hexMem = bufferToHex(mem).substr(2)\n  const ret = []\n  for (let k = 0; k < hexMem.length; k += 32) {\n    const row = hexMem.substr(k, 32)\n    ret.push(row)\n  }\n  return ret\n}\n\n/*\n  Binary Search:\n  Assumes that @arg array is sorted increasingly\n  return largest i such that array[i] <= target; return -1 if array[0] > target || array is empty\n*/\nexport function findLowerBound (target, array) {\n  let start = 0\n  let length = array.length\n  while (length > 0) {\n    const half = length >> 1\n    const middle = start + half\n    if (array[middle] <= target) {\n      length = length - 1 - half\n      start = middle + 1\n    } else {\n      length = half\n    }\n  }\n  return start - 1\n}\n\n/*\n  Binary Search:\n  Assumes that @arg array is sorted increasingly\n  return largest array[i] such that array[i] <= target; return null if array[0] > target || array is empty\n*/\nexport function findLowerBoundValue (target, array) {\n  const index = findLowerBound(target, array)\n  return index >= 0 ? array[index] : null\n}\n\n/*\n  Binary Search:\n  Assumes that @arg array is sorted increasingly\n  return Return i such that |array[i] - target| is smallest among all i and -1 for an empty array.\n  Returns the smallest i for multiple candidates.\n*/\nexport function findClosestIndex (target, array): number {\n  if (array.length === 0) {\n    return -1\n  }\n  const index = findLowerBound(target, array)\n  if (index < 0) {\n    return 0\n  } else if (index >= array.length - 1) {\n    return array.length - 1\n  } else {\n    const middle = (array[index] + array[index + 1]) / 2\n    return target <= middle ? index : index + 1\n  }\n}\n\n/**\n  * Find the call from @args rootCall which contains @args index (recursive)\n  *\n  * @param {Int} index - index of the vmtrace\n  * @param {Object} rootCall  - call tree, built by the trace analyser\n  * @return {Object} - return the call which include the @args index\n  */\nexport function findCall (index, rootCall) {\n  const ret = buildCallPath(index, rootCall)\n  return ret[ret.length - 1]\n}\n\n/**\n  * Find calls path from @args rootCall which leads to @args index (recursive)\n  *\n  * @param {Int} index - index of the vmtrace\n  * @param {Object} rootCall  - call tree, built by the trace analyser\n  * @return {Array} - return the calls path to @args index\n  */\nexport function buildCallPath (index, rootCall) {\n  const ret = []\n  findCallInternal(index, rootCall, ret)\n  return ret\n}\n\n/**\n  * sha3 the given @arg value (left pad to 32 bytes)\n  *\n  * @param {String} value - value to sha3\n  * @return {Object} - return sha3ied value\n  */\n// eslint-disable-next-line camelcase\nexport function sha3_256 (value) {\n  value = toBuffer(addHexPrefix(value))\n  const retInBuffer: Buffer = hash.keccak(setLengthLeft(value, 32))\n  return bufferToHex(retInBuffer)\n}\n\n/**\n  * return a regex which extract the swarmhash from the bytecode.\n  *\n  * @return {RegEx}\n  */\nexport function swarmHashExtraction () {\n  return /a165627a7a72305820([0-9a-f]{64})0029$/\n}\n\n/**\n  * return a regex which extract the swarmhash from the bytecode, from POC 0.3\n  *\n  * @return {RegEx}\n  */\nexport function swarmHashExtractionPOC31 () {\n  return /a265627a7a72315820([0-9a-f]{64})64736f6c6343([0-9a-f]{6})0032$/\n}\n\n/**\n  * return a regex which extract the swarmhash from the bytecode, from POC 0.3\n  *\n  * @return {RegEx}\n  */\nexport function swarmHashExtractionPOC32 () {\n  return /a265627a7a72305820([0-9a-f]{64})64736f6c6343([0-9a-f]{6})0032$/\n}\n\n/**\n  * return a regex which extract the cbor encoded metadata : {\"ipfs\": <IPFS hash>, \"solc\": <compiler version>} from the bytecode.\n  * ref https://solidity.readthedocs.io/en/v0.6.6/metadata.html?highlight=ipfs#encoding-of-the-metadata-hash-in-the-bytecode\n  * @return {RegEx}\n  */\nexport function cborEncodedValueExtraction () {\n  return /64697066735822([0-9a-f]{68})64736f6c6343([0-9a-f]{6})0033$/\n}\n\n/**\n  * return a regex which extract the input parameters from the bytecode\n  *\n  * @return {RegEx}\n  */\nexport function inputParametersExtraction () {\n  return /64697066735822[0-9a-f]{68}64736f6c6343[0-9a-f]{6}0033(.*)$/\n}\n\nexport function extractcborMetadata (value) {\n  const cbor = value.match(cborEncodedValueExtraction())\n  if (cbor && cbor[0]) value = value.replace(cbor[0], '')\n  return value\n}\n\nexport function extractSwarmHash (value) {\n  value = value.replace(swarmHashExtraction(), '')\n  value = value.replace(swarmHashExtractionPOC31(), '')\n  value = value.replace(swarmHashExtractionPOC32(), '')\n  return value\n}\n\nexport function extractinputParameters (value) {\n  const inputsParam = getinputParameters(value)\n  if (inputsParam) value = value.replace(inputsParam, '')\n  return value\n}\n\nexport function getinputParameters (value) {\n  const regex = value.match(inputParametersExtraction())\n  if (regex && regex[1]) {\n    return regex[1]\n  } else\n    return ''\n}\n\n/**\n  * Compare bytecode. return true if the code is equal (handle swarm hash and library references)\n  * @param {String} code1 - the bytecode that is actually deployed (contains resolved library reference and a potentially different swarmhash)\n  * @param {String} code2 - the bytecode generated by the compiler (contains unresolved library reference and a potentially different swarmhash)\n                            this will return false if the generated bytecode is empty (asbtract contract cannot be deployed)\n  *\n  * @return {bool}\n  */\nexport function compareByteCode (code1, code2) {\n  if (code1 === code2) return true\n  if (code2 === '0x') return false // abstract contract. see comment\n\n  if (code2.substr(2, 46) === '7300000000000000000000000000000000000000003014') {\n    // testing the following signature: PUSH20 00..00 ADDRESS EQ\n    // in the context of a library, that slot contains the address of the library (pushed by the compiler to avoid calling library other than with a DELEGATECALL)\n    // if code2 is not a library, well we still suppose that the comparison remain relevant even if we remove some information from `code1`\n    code1 = replaceLibReference(code1, 4)\n  }\n  let pos = -1\n  while ((pos = code2.search(/__(.*)__/)) !== -1) {\n    code2 = replaceLibReference(code2, pos)\n    code1 = replaceLibReference(code1, pos)\n  }\n\n  code1 = removeImmutableReference(code1, code2)\n  code1 = extractinputParameters(code1)  \n  code1 = extractSwarmHash(code1)\n  code1 = extractcborMetadata(code1)\n  code2 = extractinputParameters(code2)\n  code2 = extractSwarmHash(code2)\n  code2 = extractcborMetadata(code2)\n\n  if (code1 && code2) {\n    if (code1.length !== code2.length) {\n      // if the length isn't the same, we have an issue with extracting the metadata hash.\n      const minLength = code1.length > code2.length ? code2.length: code1.length\n      code1 = code1.substr(0, minLength - 10)\n      code2 = code2.substr(0, minLength - 10) \n    }\n    const compare = stringSimilarity.compareTwoStrings(code1, code2)\n    return compare == 1\n  }\n\n  return false\n}\n/* util extracted out from remix-ide. @TODO split this file, cause it mix real util fn with solidity related stuff ... */\nexport function groupBy (arr, key) {\n  return arr.reduce((sum, item) => {\n    const groupByVal = item[key]\n    const groupedItems = sum[groupByVal] || []\n    groupedItems.push(item)\n    sum[groupByVal] = groupedItems\n    return sum\n  }, {})\n}\n\nexport function concatWithSeperator (list, seperator) {\n  return list.reduce((sum, item) => sum + item + seperator, '').slice(0, -seperator.length)\n}\n\nexport function escapeRegExp (str) {\n  return str.replace(/[-[\\]/{}()+?.\\\\^$|]/g, '\\\\$&')\n}\n\nfunction replaceLibReference (code, pos) {\n  return code.substring(0, pos) + '0000000000000000000000000000000000000000' + code.substring(pos + 40)\n}\n\nfunction removeByIndex (code, index, length, emptyRef) {\n  if (!code) return code\n  return code.slice(0, index) + emptyRef + code.slice(index + length)\n}\n\nfunction removeImmutableReference (code1, code2) {\n  try {\n    const refOccurence = code2.match(/7f0000000000000000000000000000000000000000000000000000000000000000/g)\n    if (!refOccurence) return code1\n    let offset = 0\n    refOccurence.map((value) => {\n      offset = code2.indexOf(value, offset)\n      code1 = removeByIndex(code1, offset, value.length, '7f0000000000000000000000000000000000000000000000000000000000000000')\n      offset = offset + 1\n    })\n  } catch (e) {\n    console.log('error removeImmutableReference', e)\n  }\n  return code1\n}\n\nfunction findCallInternal (index, rootCall, callsPath) {\n  const calls = Object.keys(rootCall.calls)\n  const ret = rootCall\n  callsPath.push(rootCall)\n  for (const k in calls) {\n    const subCall = rootCall.calls[calls[k]]\n    if (index >= subCall.start && index <= subCall.return) {\n      findCallInternal(index, subCall, callsPath)\n      break\n    }\n  }\n  return ret\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [8166,8482,3770,9062], () => (__webpack_require__(58689)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".0.36.1.1695910659174.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t5451: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([8166,8482,3770,9062].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["provider","self","onmessage","e","data","cmd","Provider","fork","nodeUrl","blockNumber","init","then","postMessage","stamp","error","sendAsync","query","result","Accounts","_addAccount","privateKey","balance","newAccount","address","EventManager","this","registered","anonymous","unregister","eventName","obj","func","Function","reg","toString","splice","register","push","trigger","args","listener","l","apply","EventsDecoder","resolveReceipt","parseLogs","tx","contractName","compiledContracts","cb","isCall","decoded","raw","receipt","_decodeLogs","contract","contracts","logs","_decodeEvents","_eventABI","eventABI","abi","ethers","utils","Interface","events","event","getEvent","getEventTopic","replace","name","inputs","object","_eventsABI","eventsABI","visitContracts","_event","hash","k","input","type","baseType","_stringifyBigNumber","value","_isBigNumber","_stringifyEvent","undefined","_ethersType","Array","isArray","map","item","i","log","topicId","topics","eventAbis","eventAbi","decodedlog","parseLog","v","from","topic","forkAt","networkId","forks","currentForkName","number","LogsManager","notificationCallbacks","subscriptions","filters","filterTracking","oldLogs","checkBlock","block","web3","eachOf","transactions","next","txHash","eth","getTransactionReceipt","_error","txNumber","getSubscriptionsFor","subscriptionId","logIndex","blockHash","transactionHash","transactionIndex","response","jsonrpc","method","params","subscription","transmit","_err","eventMatchesFilter","changeEvent","queryType","queryFilter","filter","logTopic","indexOf","length","fromBlock","parseInt","toBlock","Number","MAX_VALUE","targetAddress","toChecksumAddress","matchedSubscriptions","Object","keys","subscriptionParams","getLogsForSubscription","_queryType","getLogsFor","forEach","callback","addListener","_type","subscribe","randomBytes","unsubscribe","newFilter","filterType","filterId","uninstallFilter","getLogsForFilter","logsOnly","tracking","blocks","x","getLogsByTxHash","results","createContract","gasLimit","txRunner","callbacks","finalCallback","confirmationCb","gasEstimationForceSend","promptCb","to","useCall","rawRun","txResult","callFunction","funAbi","stateMutability","constant","checkError","execResult","errorCode","OUT_OF_GAS","STACK_UNDERFLOW","STACK_OVERFLOW","INVALID_JUMP","INVALID_OPCODE","REVERT","STATIC_STATE_CHANGE","INTERNAL_ERROR","CREATE_COLLISION","STOP","REFUND_EXHAUSTED","ret","message","errorMessage","exceptionError","msg","returnData","errorData","returnDataHex","slice","customError","decodedCustomErrorInputsClean","file","fn","getFunctionFragment","sign","getSighash","functionDesc","getFunction","decodedCustomErrorInputs","decodeFunctionData","devdoc","functions","functionSignature","errors","console","userdoc","notice","inputIndex","inputKey","documentation","JSON","stringify","abiCoder","AbiCoder","reason","decode","encodeData","funABI","values","contractbyteCode","encoded","encodedHex","encodeParamsHelper","encodeFunctionId","encodeParams","Promise","resolve","reject","dataHex","funArgs","Buffer","parseFunctionParams","encodeFunctionCall","encodedParam","encodeConstructorCallAndLinkLibraries","linkLibrariesAddresses","linkReferences","linkLibraries","bytecodeToDeploy","contractBytecode","evm","bytecode","libFile","lib","isValidAddress","linkLibraryStandardFromlinkReferences","encodeConstructorCallAndDeployLibraries","callbackStep","callbackDeployLibrary","linkBytecode","err","buildData","isConstructor","atAddress","linkBytecodeStandard","eachOfSeries","libs","cbFile","libRef","libName","cbLibDeployed","library","deployLibrary","hexAddress","linkLibraryStandard","linkBytecodeLegacy","libraryRefMatch","match","libraryName","libraryShortName","linkLibrary","contractABI","contractAddress","setLibraryAddress","bytecodeToLink","positions","pos","regpos","RegExp","start","linkBytecodeSolc","addHexPrefix","decodeResponse","fnabi","outputs","outputTypes","makeFullTypeDefinition","Uint8Array","decodedObj","json","startIndex","isArrayOrStringStart","charAt","endQuoteIndex","j","normalizeParam","substring","Error","bracketCount","param","trim","startsWith","test","regSci","REGEX_SCIENTIFIC","exec","exponents","REGEX_DECIMAL","paramTrimmed","fromExponential","str","index","typeDef","components","innerTypes","innerType","join","extractSize","types","encode","sortAbiFunction","contractabi","isConstant","sort","a","b","localeCompare","getConstructorInterface","payable","parse","serializeInputs","fnAbi","serialized","size","getFunctionLiner","detailTuple","fullType","fnName","getFallbackInterface","getReceiveInterface","getContract","inputParametersDeclarationToString","abiinputs","inp","addExecutionCosts","returnValue","executionGasUsed","executionCost","gasUsed","transactionCost","TxListener","opt","executionContext","_api","api","_resolvedTransactions","_resolvedContracts","_isListening","_listenOnNetwork","_loopId","context","stopListening","startListening","udapp","lookupOnly","isVM","getExecutionResultFromSimulator","toBuffer","call","envMode","getProvider","_resolveTx","resolvedData","getTransaction","status","_resolve","setListenOnNetwork","listenOnNetwork","clearInterval","_startListenOnNetwork","lastSeenBlock","lastBlock","processingBlock","processBlocks","currentLoopId","current","_manageBlock","setInterval","getBlock","_newBlock","assign","resolvedContract","resolvedTransaction","_resolveAsync","fun","code","_tryResolveContract","_resolveFunction","function","creationAddress","getCode","isCtor","inputData","methodIdentifiers","_decodeInputParams","decodedReturnValue","getinputParameters","codeToResolve","isCreation","found","bytes","deployedBytecode","compareByteCode","inputTypes","TxRunner","internalRunner","pendingTxs","queusTxs","run","timestamp","Date","now","execute","pop","TxRunnerVM","vmaccounts","getVMObject","logsManager","commonContext","common","nextNonceForCall","vm","blockParentHash","blockchain","genesisBlock","runInVm","account","stateManager","getAccount","Address","fromString","res","EIP1559","hardfork","Transaction","fromTxData","nonce","gasPrice","FeeMarketEIP1559Transaction","maxPriorityFeePerGas","maxFeePerGas","coinbases","difficulties","difficulty","consensusType","ConsensusType","ProofOfStake","blocknumber","Block","fromBlockData","header","getTime","coinbase","baseFeePerGas","parentHash","hardforkByBlockNumber","hardforkByTTD","runBlockInVm","putBlock","checkpoint","revert","runBlock","generate","skipBlockValidation","skipBalance","skipNonce","bufferToHex","TxRunnerWeb3","getWeb3","currentblockGasLimit","_executeTx","network","txFee","toHex","toWei","maxPriorityFee","maxFee","personalMode","_sendTransaction","personal","sendTransaction","sendTx","pass","currentDateTime","resp","listenOnResponse","tryTillReceiptAvailable","tryTillTxAvailable","end","txData","runInNode","confirmCb","detectNetwork","errNetWork","txCopy","Math","ceil","estimateGas","gasEstimation","config","getUnpersistedProperty","blockGasLimit","warnEstimation","txhash","pause","setTimeout","toInt","h","BN","constructor","isBN","convertToString","_isBuffer","retObject","createHash","require","keccak","bits","assertIsBuffer","keccak224","k256","keccak384","keccak512","keccak256","keccakFromString","assertIsString","buf","keccakFromHexString","assertIsHexString","keccakFromArray","assertIsArray","_sha256","update","digest","sha256","sha256FromString","sha256FromArray","_ripemd160","padded","setLengthLeft","ripemd160","ripemd160FromString","ripemd160FromArray","rlphash","isHexString","isBuffer","compilerInput","language","sources","content","settings","optimizer","enabled","runs","outputSelection","ConsoleLogs","convertToPrefixedHex","resultToRemixTx","return","createdAddress","formatMemory","mem","width","substr","memory","tryConvertAsciiFormat","ascii","memorySlot","String","fromCharCode","formatCss","css1","css2","arg","arguments","normalizeHex","hex","normalizeHexAddress","runInBrowser","window","helpers","ui","uiHelper","compiler","compilerHelper","txResultHelper","execution","txExecution","txHelper","txFormat","txListener","typeConversion","QueryParams","currentParams","get","queryString","updatedKeys","y","location","qs","search","parts","split","keyValue","Storage","prefix","safeKeys","localStorage","getItem","setItem","removeItem","exists","set","exception","remove","rename","originalName","newName","hexToIntArray","hexString","integers","hexListFromBNs","bnList","padStart","toHexPaddedString","hexMem","row","findLowerBound","target","array","half","middle","findLowerBoundValue","findClosestIndex","findCall","rootCall","buildCallPath","findCallInternal","sha3_256","retInBuffer","swarmHashExtraction","swarmHashExtractionPOC31","swarmHashExtractionPOC32","cborEncodedValueExtraction","inputParametersExtraction","extractcborMetadata","cbor","extractSwarmHash","extractinputParameters","inputsParam","regex","code1","code2","replaceLibReference","removeImmutableReference","minLength","compare","stringSimilarity","compareTwoStrings","groupBy","arr","key","reduce","sum","groupByVal","groupedItems","concatWithSeperator","list","seperator","escapeRegExp","removeByIndex","emptyRef","refOccurence","offset","callsPath","calls","subCall","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","m","__webpack_exports__","O","amdO","deferred","chunkIds","priority","notFulfilled","Infinity","fulfilled","every","r","d","definition","o","defineProperty","enumerable","f","chunkId","all","promises","u","miniCssF","g","globalThis","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","p","installedChunks","installChunk","moreModules","runtime","parentChunkLoadingFunction","importScripts","chunkLoadingGlobal","bind"],"sourceRoot":""}
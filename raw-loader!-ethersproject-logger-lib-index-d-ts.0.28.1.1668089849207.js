(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[69],{

/***/ 3466:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("export declare enum LogLevel {\n    DEBUG = \"DEBUG\",\n    INFO = \"INFO\",\n    WARNING = \"WARNING\",\n    ERROR = \"ERROR\",\n    OFF = \"OFF\"\n}\nexport declare enum ErrorCode {\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n    SERVER_ERROR = \"SERVER_ERROR\",\n    TIMEOUT = \"TIMEOUT\",\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n    MISSING_NEW = \"MISSING_NEW\",\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\"\n}\nexport declare class Logger {\n    readonly version: string;\n    static errors: typeof ErrorCode;\n    static levels: typeof LogLevel;\n    constructor(version: string);\n    _log(logLevel: LogLevel, args: Array<any>): void;\n    debug(...args: Array<any>): void;\n    info(...args: Array<any>): void;\n    warn(...args: Array<any>): void;\n    makeError(message: string, code?: ErrorCode, params?: any): Error;\n    throwError(message: string, code?: ErrorCode, params?: any): never;\n    throwArgumentError(message: string, name: string, value: any): never;\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void;\n    assertArgument(condition: any, message: string, name: string, value: any): void;\n    checkNormalize(message?: string): void;\n    checkSafeUint53(value: number, message?: string): void;\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void;\n    checkNew(target: any, kind: any): void;\n    checkAbstract(target: any, kind: any): void;\n    static globalLogger(): Logger;\n    static setCensorship(censorship: boolean, permanent?: boolean): void;\n    static setLogLevel(logLevel: LogLevel): void;\n    static from(version: string): Logger;\n}\n//# sourceMappingURL=index.d.ts.map");

/***/ })

}]);
//# sourceMappingURL=raw-loader!-ethersproject-logger-lib-index-d-ts.0.28.1.1668089849207.js.map
//# sourceMappingURL=raw-loader!-ethersproject-logger-lib-index-d-ts.0.28.1.1668089849207.js.map
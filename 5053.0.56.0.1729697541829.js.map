{"version":3,"file":"5053.0.56.0.1729697541829.js","mappings":"kRAQA,IAAIA,KAAO,CACTC,YAAa,qFACbC,SAAU,CACRC,YAAa,KACbC,aAAc,CAAC,IAAK,MAEtBC,SAAU,CACR,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAERC,iBAAkB,CAChB,CAAEC,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,MAEtBC,iBAAkB,CAChB,CAAEF,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,MAEtBE,QAAS,CACPC,QAAS,CACPC,MAAO,IAAIC,OAAO,sCAClBC,IAAK,IAAID,OAAO,8BAItB,IAAIE,SAAW,CACbC,aAAc,GACdC,aAAc,UACdC,WAAY,KACZb,SAAU,CACR,CAAEE,KAAM,IAAKC,MAAO,IAAKW,MAAO,mBAChC,CAAEZ,KAAM,IAAKC,MAAO,IAAKW,MAAO,oBAChC,CAAEZ,KAAM,IAAKC,MAAO,IAAKW,MAAO,yBAChC,CAAEZ,KAAM,IAAKC,MAAO,IAAKW,MAAO,oBAElCC,SAAU,CACR,WACA,WACA,MACA,WACA,QACA,KACA,MACA,YACA,QACA,WACA,OACA,QACA,QACA,WACA,UACA,MACA,OACA,MACA,SACA,UACA,WACA,MACA,OACA,eACA,UACA,UACA,UACA,OACA,KACA,aACA,SACA,KACA,QACA,YACA,iBACA,YACA,KACA,QACA,UACA,MACA,SACA,OACA,OACA,MACA,SACA,KACA,KACA,OACA,WACA,UACA,YACA,WACA,UACA,SACA,MACA,UACA,UACA,YACA,SACA,YACA,YACA,iBACA,YACA,OACA,SACA,WACA,WACA,iBACA,aACA,UACA,MACA,MACA,MACA,aACA,SACA,SACA,OACA,YACA,KACA,MACA,OACA,OACA,OACA,MACA,OACA,UACA,UACA,WACA,cACA,OACA,QACA,MACA,OACA,QACA,YACA,WACA,cACA,aACA,WACA,QACA,WACA,OACA,QACA,QACA,KACA,MACA,QACA,SACA,SAEFC,aAAc,CACZ,UACA,SACA,OACA,UACA,WACA,OACA,UACA,QACA,UAEFC,UAAW,CACT,IACA,IACA,IACA,KACA,KACA,KACA,IACA,KACA,MACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFC,QAAS,wBACTC,UAAW,CACTC,KAAM,CACJ,CACE,iBACA,CACEC,MAAO,CACL,YAAa,CAAEP,MAAO,cACtB,WAAY,gBAIlB,CAAEQ,QAAS,eACX,CAAC,aAAc,aACf,CAAC,mBAAoB,aACrB,CACE,WACA,CACED,MAAO,CACL,aAAc,YACd,WAAY,MAIlB,CAAC,2BAA4B,gBAC7B,CAAC,sBAAuB,cACxB,CAAC,MAAO,UACR,CAAC,QAAS,aACV,CAAC,kBAAmB,kBACpB,CAAC,IAAK,SAAU,WAChB,CAAC,WAAY,UACb,CAAC,IAAK,kBACN,CAAC,QAAS,WAEZE,QAAS,CACP,CAAC,WAAY,WACb,CAAC,KAAM,UAAW,QAClB,CAAC,OAAQ,YAEXC,OAAQ,CACN,CAAC,UAAW,UACZ,CAAC,MAAO,yBACR,CAAC,IAAK,CAAEV,MAAO,eAAgBW,QAAS,SAAUC,KAAM,UAE1DC,WAAY,CACV,CAAC,aAAc,SACf,CAAC,KAAM,UAAW,YAClB,CAAC,UAAW,a","sources":["webpack:///../../node_modules/monaco-editor/esm/vs/basic-languages/pascal/pascal.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.44.0(3e047efd345ff102c8c61b5398fb30845aaac166)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/pascal/pascal.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"{\", \"}\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"],\n    [\"<\", \">\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*\\\\{\\\\$REGION(\\\\s\\\\'.*\\\\')?\\\\}\"),\n      end: new RegExp(\"^\\\\s*\\\\{\\\\$ENDREGION\\\\}\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".pascal\",\n  ignoreCase: true,\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n  ],\n  keywords: [\n    \"absolute\",\n    \"abstract\",\n    \"all\",\n    \"and_then\",\n    \"array\",\n    \"as\",\n    \"asm\",\n    \"attribute\",\n    \"begin\",\n    \"bindable\",\n    \"case\",\n    \"class\",\n    \"const\",\n    \"contains\",\n    \"default\",\n    \"div\",\n    \"else\",\n    \"end\",\n    \"except\",\n    \"exports\",\n    \"external\",\n    \"far\",\n    \"file\",\n    \"finalization\",\n    \"finally\",\n    \"forward\",\n    \"generic\",\n    \"goto\",\n    \"if\",\n    \"implements\",\n    \"import\",\n    \"in\",\n    \"index\",\n    \"inherited\",\n    \"initialization\",\n    \"interrupt\",\n    \"is\",\n    \"label\",\n    \"library\",\n    \"mod\",\n    \"module\",\n    \"name\",\n    \"near\",\n    \"not\",\n    \"object\",\n    \"of\",\n    \"on\",\n    \"only\",\n    \"operator\",\n    \"or_else\",\n    \"otherwise\",\n    \"override\",\n    \"package\",\n    \"packed\",\n    \"pow\",\n    \"private\",\n    \"program\",\n    \"protected\",\n    \"public\",\n    \"published\",\n    \"interface\",\n    \"implementation\",\n    \"qualified\",\n    \"read\",\n    \"record\",\n    \"resident\",\n    \"requires\",\n    \"resourcestring\",\n    \"restricted\",\n    \"segment\",\n    \"set\",\n    \"shl\",\n    \"shr\",\n    \"specialize\",\n    \"stored\",\n    \"strict\",\n    \"then\",\n    \"threadvar\",\n    \"to\",\n    \"try\",\n    \"type\",\n    \"unit\",\n    \"uses\",\n    \"var\",\n    \"view\",\n    \"virtual\",\n    \"dynamic\",\n    \"overload\",\n    \"reintroduce\",\n    \"with\",\n    \"write\",\n    \"xor\",\n    \"true\",\n    \"false\",\n    \"procedure\",\n    \"function\",\n    \"constructor\",\n    \"destructor\",\n    \"property\",\n    \"break\",\n    \"continue\",\n    \"exit\",\n    \"abort\",\n    \"while\",\n    \"do\",\n    \"for\",\n    \"raise\",\n    \"repeat\",\n    \"until\"\n  ],\n  typeKeywords: [\n    \"boolean\",\n    \"double\",\n    \"byte\",\n    \"integer\",\n    \"shortint\",\n    \"char\",\n    \"longint\",\n    \"float\",\n    \"string\"\n  ],\n  operators: [\n    \"=\",\n    \">\",\n    \"<\",\n    \"<=\",\n    \">=\",\n    \"<>\",\n    \":\",\n    \":=\",\n    \"and\",\n    \"or\",\n    \"+\",\n    \"-\",\n    \"*\",\n    \"/\",\n    \"@\",\n    \"&\",\n    \"^\",\n    \"%\"\n  ],\n  symbols: /[=><:@\\^&|+\\-*\\/\\^%]+/,\n  tokenizer: {\n    root: [\n      [\n        /[a-zA-Z_][\\w]*/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      { include: \"@whitespace\" },\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/[<>](?!@symbols)/, \"@brackets\"],\n      [\n        /@symbols/,\n        {\n          cases: {\n            \"@operators\": \"delimiter\",\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/\\$[0-9a-fA-F]{1,16}/, \"number.hex\"],\n      [/\\d+/, \"number\"],\n      [/[;,.]/, \"delimiter\"],\n      [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\n      [/'/, \"string\", \"@string\"],\n      [/'[^\\\\']'/, \"string\"],\n      [/'/, \"string.invalid\"],\n      [/\\#\\d+/, \"string\"]\n    ],\n    comment: [\n      [/[^\\*\\}]+/, \"comment\"],\n      [/\\}/, \"comment\", \"@pop\"],\n      [/[\\{]/, \"comment\"]\n    ],\n    string: [\n      [/[^\\\\']+/, \"string\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/'/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/\\{/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","typeKeywords","operators","symbols","tokenizer","root","cases","include","comment","string","bracket","next","whitespace"],"sourceRoot":""}
{"version":3,"file":"2794.0.56.0.1729697541829.js","mappings":"qRAAA,+/B","sources":["webpack:///../../libs/remix-ws-templates/src/templates/hashchecker/circuits/calculate_hash.circom"],"sourcesContent":["export default \"pragma circom 2.0.0;\\n\\ninclude \\\"circomlib/circuits/poseidon.circom\\\";\\n\\ntemplate CalculateHash() {\\n    signal input value1;\\n    signal input value2;\\n    signal input value3;\\n    signal input value4;\\n    signal output out;\\n\\n    component poseidon = Poseidon(4);\\n\\n    poseidon.inputs[0] <== value1;\\n    poseidon.inputs[1] <== value2;\\n    poseidon.inputs[2] <== value3;\\n    poseidon.inputs[3] <== value4;\\n\\n    out <== poseidon.out;\\n}\\ntemplate HashChecker() {\\n    signal input value1;\\n    signal input value2;\\n    signal input value3;\\n    signal input value4;\\n    signal input hash;\\n\\n    component calculateSecret = CalculateHash();\\n    calculateSecret.value1 <== value1;\\n    calculateSecret.value2 <== value2;\\n    calculateSecret.value3 <== value3;\\n    calculateSecret.value4 <== value4;\\n\\n    signal calculatedHash;\\n    calculatedHash <== calculateSecret.out;\\n\\n    assert(hash == calculatedHash);\\n    \\n}\\n\\ncomponent main {public [hash]} = HashChecker();\\n\";"],"names":[],"sourceRoot":""}
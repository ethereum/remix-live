{"version":3,"file":"7551.0.56.0.1729697541829.js","mappings":"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","sources":["webpack:///../../node_modules/monaco-editor/esm/vs/basic-languages/freemarker2/freemarker2.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.44.0(3e047efd345ff102c8c61b5398fb30845aaac166)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/freemarker2/freemarker2.ts\nvar EMPTY_ELEMENTS = [\n  \"assign\",\n  \"flush\",\n  \"ftl\",\n  \"return\",\n  \"global\",\n  \"import\",\n  \"include\",\n  \"break\",\n  \"continue\",\n  \"local\",\n  \"nested\",\n  \"nt\",\n  \"setting\",\n  \"stop\",\n  \"t\",\n  \"lt\",\n  \"rt\",\n  \"fallback\"\n];\nvar BLOCK_ELEMENTS = [\n  \"attempt\",\n  \"autoesc\",\n  \"autoEsc\",\n  \"compress\",\n  \"comment\",\n  \"escape\",\n  \"noescape\",\n  \"function\",\n  \"if\",\n  \"list\",\n  \"items\",\n  \"sep\",\n  \"macro\",\n  \"noparse\",\n  \"noParse\",\n  \"noautoesc\",\n  \"noAutoEsc\",\n  \"outputformat\",\n  \"switch\",\n  \"visit\",\n  \"recurse\"\n];\nvar TagSyntaxAngle = {\n  close: \">\",\n  id: \"angle\",\n  open: \"<\"\n};\nvar TagSyntaxBracket = {\n  close: \"\\\\]\",\n  id: \"bracket\",\n  open: \"\\\\[\"\n};\nvar TagSyntaxAuto = {\n  close: \"[>\\\\]]\",\n  id: \"auto\",\n  open: \"[<\\\\[]\"\n};\nvar InterpolationSyntaxDollar = {\n  close: \"\\\\}\",\n  id: \"dollar\",\n  open1: \"\\\\$\",\n  open2: \"\\\\{\"\n};\nvar InterpolationSyntaxBracket = {\n  close: \"\\\\]\",\n  id: \"bracket\",\n  open1: \"\\\\[\",\n  open2: \"=\"\n};\nfunction createLangConfiguration(ts) {\n  return {\n    brackets: [\n      [\"<\", \">\"],\n      [\"[\", \"]\"],\n      [\"(\", \")\"],\n      [\"{\", \"}\"]\n    ],\n    comments: {\n      blockComment: [`${ts.open}--`, `--${ts.close}`]\n    },\n    autoCloseBefore: \"\\n\\r\t }]),.:;=\",\n    autoClosingPairs: [\n      { open: \"{\", close: \"}\" },\n      { open: \"[\", close: \"]\" },\n      { open: \"(\", close: \")\" },\n      { open: '\"', close: '\"', notIn: [\"string\"] },\n      { open: \"'\", close: \"'\", notIn: [\"string\"] }\n    ],\n    surroundingPairs: [\n      { open: '\"', close: '\"' },\n      { open: \"'\", close: \"'\" },\n      { open: \"{\", close: \"}\" },\n      { open: \"[\", close: \"]\" },\n      { open: \"(\", close: \")\" },\n      { open: \"<\", close: \">\" }\n    ],\n    folding: {\n      markers: {\n        start: new RegExp(`${ts.open}#(?:${BLOCK_ELEMENTS.join(\"|\")})([^/${ts.close}]*(?!/)${ts.close})[^${ts.open}]*$`),\n        end: new RegExp(`${ts.open}/#(?:${BLOCK_ELEMENTS.join(\"|\")})[\\\\r\\\\n\\\\t ]*>`)\n      }\n    },\n    onEnterRules: [\n      {\n        beforeText: new RegExp(`${ts.open}#(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([a-zA-Z_]+)([^/${ts.close}]*(?!/)${ts.close})[^${ts.open}]*$`),\n        afterText: new RegExp(`^${ts.open}/#([a-zA-Z_]+)[\\\\r\\\\n\\\\t ]*${ts.close}$`),\n        action: {\n          indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n        }\n      },\n      {\n        beforeText: new RegExp(`${ts.open}#(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([a-zA-Z_]+)([^/${ts.close}]*(?!/)${ts.close})[^${ts.open}]*$`),\n        action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n      }\n    ]\n  };\n}\nfunction createLangConfigurationAuto() {\n  return {\n    brackets: [\n      [\"<\", \">\"],\n      [\"[\", \"]\"],\n      [\"(\", \")\"],\n      [\"{\", \"}\"]\n    ],\n    autoCloseBefore: \"\\n\\r\t }]),.:;=\",\n    autoClosingPairs: [\n      { open: \"{\", close: \"}\" },\n      { open: \"[\", close: \"]\" },\n      { open: \"(\", close: \")\" },\n      { open: '\"', close: '\"', notIn: [\"string\"] },\n      { open: \"'\", close: \"'\", notIn: [\"string\"] }\n    ],\n    surroundingPairs: [\n      { open: '\"', close: '\"' },\n      { open: \"'\", close: \"'\" },\n      { open: \"{\", close: \"}\" },\n      { open: \"[\", close: \"]\" },\n      { open: \"(\", close: \")\" },\n      { open: \"<\", close: \">\" }\n    ],\n    folding: {\n      markers: {\n        start: new RegExp(`[<\\\\[]#(?:${BLOCK_ELEMENTS.join(\"|\")})([^/>\\\\]]*(?!/)[>\\\\]])[^<\\\\[]*$`),\n        end: new RegExp(`[<\\\\[]/#(?:${BLOCK_ELEMENTS.join(\"|\")})[\\\\r\\\\n\\\\t ]*>`)\n      }\n    },\n    onEnterRules: [\n      {\n        beforeText: new RegExp(`[<\\\\[]#(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([a-zA-Z_]+)([^/>\\\\]]*(?!/)[>\\\\]])[^[<\\\\[]]*$`),\n        afterText: new RegExp(`^[<\\\\[]/#([a-zA-Z_]+)[\\\\r\\\\n\\\\t ]*[>\\\\]]$`),\n        action: {\n          indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n        }\n      },\n      {\n        beforeText: new RegExp(`[<\\\\[]#(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([a-zA-Z_]+)([^/>\\\\]]*(?!/)[>\\\\]])[^[<\\\\[]]*$`),\n        action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n      }\n    ]\n  };\n}\nfunction createMonarchLanguage(ts, is) {\n  const id = `_${ts.id}_${is.id}`;\n  const s = (name) => name.replace(/__id__/g, id);\n  const r = (regexp) => {\n    const source = regexp.source.replace(/__id__/g, id);\n    return new RegExp(source, regexp.flags);\n  };\n  return {\n    unicode: true,\n    includeLF: false,\n    start: s(\"default__id__\"),\n    ignoreCase: false,\n    defaultToken: \"invalid\",\n    tokenPostfix: `.freemarker2`,\n    brackets: [\n      { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n      { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n      { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n      { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n    ],\n    [s(\"open__id__\")]: new RegExp(ts.open),\n    [s(\"close__id__\")]: new RegExp(ts.close),\n    [s(\"iOpen1__id__\")]: new RegExp(is.open1),\n    [s(\"iOpen2__id__\")]: new RegExp(is.open2),\n    [s(\"iClose__id__\")]: new RegExp(is.close),\n    [s(\"startTag__id__\")]: r(/(@open__id__)(#)/),\n    [s(\"endTag__id__\")]: r(/(@open__id__)(\\/#)/),\n    [s(\"startOrEndTag__id__\")]: r(/(@open__id__)(\\/?#)/),\n    [s(\"closeTag1__id__\")]: r(/((?:@blank)*)(@close__id__)/),\n    [s(\"closeTag2__id__\")]: r(/((?:@blank)*\\/?)(@close__id__)/),\n    blank: /[ \\t\\n\\r]/,\n    keywords: [\"false\", \"true\", \"in\", \"as\", \"using\"],\n    directiveStartCloseTag1: /attempt|recover|sep|auto[eE]sc|no(?:autoe|AutoE)sc|compress|default|no[eE]scape|comment|no[pP]arse/,\n    directiveStartCloseTag2: /else|break|continue|return|stop|flush|t|lt|rt|nt|nested|recurse|fallback|ftl/,\n    directiveStartBlank: /if|else[iI]f|list|for[eE]ach|switch|case|assign|global|local|include|import|function|macro|transform|visit|stop|return|call|setting|output[fF]ormat|nested|recurse|escape|ftl|items/,\n    directiveEndCloseTag1: /if|list|items|sep|recover|attempt|for[eE]ach|local|global|assign|function|macro|output[fF]ormat|auto[eE]sc|no(?:autoe|AutoE)sc|compress|transform|switch|escape|no[eE]scape/,\n    escapedChar: /\\\\(?:[ntrfbgla\\\\'\"\\{=]|(?:x[0-9A-Fa-f]{1,4}))/,\n    asciiDigit: /[0-9]/,\n    integer: /[0-9]+/,\n    nonEscapedIdStartChar: /[\\$@-Z_a-z\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u1FFF\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183-\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3006\\u3031-\\u3035\\u303B-\\u303C\\u3040-\\u318F\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3300-\\u337F\\u3400-\\u4DB5\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5-\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n    escapedIdChar: /\\\\[\\-\\.:#]/,\n    idStartChar: /(?:@nonEscapedIdStartChar)|(?:@escapedIdChar)/,\n    id: /(?:@idStartChar)(?:(?:@idStartChar)|(?:@asciiDigit))*/,\n    specialHashKeys: /\\*\\*|\\*|false|true|in|as|using/,\n    namedSymbols: /&lt;=|&gt;=|\\\\lte|\\\\lt|&lt;|\\\\gte|\\\\gt|&gt;|&amp;&amp;|\\\\and|-&gt;|->|==|!=|\\+=|-=|\\*=|\\/=|%=|\\+\\+|--|<=|&&|\\|\\||:|\\.\\.\\.|\\.\\.\\*|\\.\\.<|\\.\\.!|\\?\\?|=|<|\\+|-|\\*|\\/|%|\\||\\.\\.|\\?|!|&|\\.|,|;/,\n    arrows: [\"->\", \"-&gt;\"],\n    delimiters: [\";\", \":\", \",\", \".\"],\n    stringOperators: [\"lte\", \"lt\", \"gte\", \"gt\"],\n    noParseTags: [\"noparse\", \"noParse\", \"comment\"],\n    tokenizer: {\n      [s(\"default__id__\")]: [\n        { include: s(\"@directive_token__id__\") },\n        { include: s(\"@interpolation_and_text_token__id__\") }\n      ],\n      [s(\"fmExpression__id__.directive\")]: [\n        { include: s(\"@blank_and_expression_comment_token__id__\") },\n        { include: s(\"@directive_end_token__id__\") },\n        { include: s(\"@expression_token__id__\") }\n      ],\n      [s(\"fmExpression__id__.interpolation\")]: [\n        { include: s(\"@blank_and_expression_comment_token__id__\") },\n        { include: s(\"@expression_token__id__\") },\n        { include: s(\"@greater_operators_token__id__\") }\n      ],\n      [s(\"inParen__id__.plain\")]: [\n        { include: s(\"@blank_and_expression_comment_token__id__\") },\n        { include: s(\"@directive_end_token__id__\") },\n        { include: s(\"@expression_token__id__\") }\n      ],\n      [s(\"inParen__id__.gt\")]: [\n        { include: s(\"@blank_and_expression_comment_token__id__\") },\n        { include: s(\"@expression_token__id__\") },\n        { include: s(\"@greater_operators_token__id__\") }\n      ],\n      [s(\"noSpaceExpression__id__\")]: [\n        { include: s(\"@no_space_expression_end_token__id__\") },\n        { include: s(\"@directive_end_token__id__\") },\n        { include: s(\"@expression_token__id__\") }\n      ],\n      [s(\"unifiedCall__id__\")]: [{ include: s(\"@unified_call_token__id__\") }],\n      [s(\"singleString__id__\")]: [{ include: s(\"@string_single_token__id__\") }],\n      [s(\"doubleString__id__\")]: [{ include: s(\"@string_double_token__id__\") }],\n      [s(\"rawSingleString__id__\")]: [{ include: s(\"@string_single_raw_token__id__\") }],\n      [s(\"rawDoubleString__id__\")]: [{ include: s(\"@string_double_raw_token__id__\") }],\n      [s(\"expressionComment__id__\")]: [{ include: s(\"@expression_comment_token__id__\") }],\n      [s(\"noParse__id__\")]: [{ include: s(\"@no_parse_token__id__\") }],\n      [s(\"terseComment__id__\")]: [{ include: s(\"@terse_comment_token__id__\") }],\n      [s(\"directive_token__id__\")]: [\n        [\n          r(/(?:@startTag__id__)(@directiveStartCloseTag1)(?:@closeTag1__id__)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            {\n              cases: {\n                \"@noParseTags\": { token: \"tag\", next: s(\"@noParse__id__.$3\") },\n                \"@default\": { token: \"tag\" }\n              }\n            },\n            { token: \"delimiter.directive\" },\n            { token: \"@brackets.directive\" }\n          ]\n        ],\n        [\n          r(/(?:@startTag__id__)(@directiveStartCloseTag2)(?:@closeTag2__id__)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            { token: \"tag\" },\n            { token: \"delimiter.directive\" },\n            { token: \"@brackets.directive\" }\n          ]\n        ],\n        [\n          r(/(?:@startTag__id__)(@directiveStartBlank)(@blank)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            { token: \"tag\" },\n            { token: \"\", next: s(\"@fmExpression__id__.directive\") }\n          ]\n        ],\n        [\n          r(/(?:@endTag__id__)(@directiveEndCloseTag1)(?:@closeTag1__id__)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            { token: \"tag\" },\n            { token: \"delimiter.directive\" },\n            { token: \"@brackets.directive\" }\n          ]\n        ],\n        [\n          r(/(@open__id__)(@)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\", next: s(\"@unifiedCall__id__\") }\n          ]\n        ],\n        [\n          r(/(@open__id__)(\\/@)((?:(?:@id)(?:\\.(?:@id))*)?)(?:@closeTag1__id__)/),\n          [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            { token: \"tag\" },\n            { token: \"delimiter.directive\" },\n            { token: \"@brackets.directive\" }\n          ]\n        ],\n        [\n          r(/(@open__id__)#--/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : { token: \"comment\", next: s(\"@terseComment__id__\") }\n        ],\n        [\n          r(/(?:@startOrEndTag__id__)([a-zA-Z_]+)/),\n          ts.id === \"auto\" ? {\n            cases: {\n              \"$1==<\": { token: \"@rematch\", switchTo: `@default_angle_${is.id}` },\n              \"$1==[\": { token: \"@rematch\", switchTo: `@default_bracket_${is.id}` }\n            }\n          } : [\n            { token: \"@brackets.directive\" },\n            { token: \"delimiter.directive\" },\n            { token: \"tag.invalid\", next: s(\"@fmExpression__id__.directive\") }\n          ]\n        ]\n      ],\n      [s(\"interpolation_and_text_token__id__\")]: [\n        [\n          r(/(@iOpen1__id__)(@iOpen2__id__)/),\n          [\n            { token: is.id === \"bracket\" ? \"@brackets.interpolation\" : \"delimiter.interpolation\" },\n            {\n              token: is.id === \"bracket\" ? \"delimiter.interpolation\" : \"@brackets.interpolation\",\n              next: s(\"@fmExpression__id__.interpolation\")\n            }\n          ]\n        ],\n        [/[\\$#<\\[\\{]|(?:@blank)+|[^\\$<#\\[\\{\\n\\r\\t ]+/, { token: \"source\" }]\n      ],\n      [s(\"string_single_token__id__\")]: [\n        [/[^'\\\\]/, { token: \"string\" }],\n        [/@escapedChar/, { token: \"string.escape\" }],\n        [/'/, { token: \"string\", next: \"@pop\" }]\n      ],\n      [s(\"string_double_token__id__\")]: [\n        [/[^\"\\\\]/, { token: \"string\" }],\n        [/@escapedChar/, { token: \"string.escape\" }],\n        [/\"/, { token: \"string\", next: \"@pop\" }]\n      ],\n      [s(\"string_single_raw_token__id__\")]: [\n        [/[^']+/, { token: \"string.raw\" }],\n        [/'/, { token: \"string.raw\", next: \"@pop\" }]\n      ],\n      [s(\"string_double_raw_token__id__\")]: [\n        [/[^\"]+/, { token: \"string.raw\" }],\n        [/\"/, { token: \"string.raw\", next: \"@pop\" }]\n      ],\n      [s(\"expression_token__id__\")]: [\n        [\n          /(r?)(['\"])/,\n          {\n            cases: {\n              \"r'\": [\n                { token: \"keyword\" },\n                { token: \"string.raw\", next: s(\"@rawSingleString__id__\") }\n              ],\n              'r\"': [\n                { token: \"keyword\" },\n                { token: \"string.raw\", next: s(\"@rawDoubleString__id__\") }\n              ],\n              \"'\": [{ token: \"source\" }, { token: \"string\", next: s(\"@singleString__id__\") }],\n              '\"': [{ token: \"source\" }, { token: \"string\", next: s(\"@doubleString__id__\") }]\n            }\n          }\n        ],\n        [\n          /(?:@integer)(?:\\.(?:@integer))?/,\n          {\n            cases: {\n              \"(?:@integer)\": { token: \"number\" },\n              \"@default\": { token: \"number.float\" }\n            }\n          }\n        ],\n        [\n          /(\\.)(@blank*)(@specialHashKeys)/,\n          [{ token: \"delimiter\" }, { token: \"\" }, { token: \"identifier\" }]\n        ],\n        [\n          /(?:@namedSymbols)/,\n          {\n            cases: {\n              \"@arrows\": { token: \"meta.arrow\" },\n              \"@delimiters\": { token: \"delimiter\" },\n              \"@default\": { token: \"operators\" }\n            }\n          }\n        ],\n        [\n          /@id/,\n          {\n            cases: {\n              \"@keywords\": { token: \"keyword.$0\" },\n              \"@stringOperators\": { token: \"operators\" },\n              \"@default\": { token: \"identifier\" }\n            }\n          }\n        ],\n        [\n          /[\\[\\]\\(\\)\\{\\}]/,\n          {\n            cases: {\n              \"\\\\[\": {\n                cases: {\n                  \"$S2==gt\": { token: \"@brackets\", next: s(\"@inParen__id__.gt\") },\n                  \"@default\": { token: \"@brackets\", next: s(\"@inParen__id__.plain\") }\n                }\n              },\n              \"\\\\]\": {\n                cases: {\n                  ...is.id === \"bracket\" ? {\n                    \"$S2==interpolation\": { token: \"@brackets.interpolation\", next: \"@popall\" }\n                  } : {},\n                  ...ts.id === \"bracket\" ? {\n                    \"$S2==directive\": { token: \"@brackets.directive\", next: \"@popall\" }\n                  } : {},\n                  [s(\"$S1==inParen__id__\")]: { token: \"@brackets\", next: \"@pop\" },\n                  \"@default\": { token: \"@brackets\" }\n                }\n              },\n              \"\\\\(\": { token: \"@brackets\", next: s(\"@inParen__id__.gt\") },\n              \"\\\\)\": {\n                cases: {\n                  [s(\"$S1==inParen__id__\")]: { token: \"@brackets\", next: \"@pop\" },\n                  \"@default\": { token: \"@brackets\" }\n                }\n              },\n              \"\\\\{\": {\n                cases: {\n                  \"$S2==gt\": { token: \"@brackets\", next: s(\"@inParen__id__.gt\") },\n                  \"@default\": { token: \"@brackets\", next: s(\"@inParen__id__.plain\") }\n                }\n              },\n              \"\\\\}\": {\n                cases: {\n                  ...is.id === \"bracket\" ? {} : {\n                    \"$S2==interpolation\": { token: \"@brackets.interpolation\", next: \"@popall\" }\n                  },\n                  [s(\"$S1==inParen__id__\")]: { token: \"@brackets\", next: \"@pop\" },\n                  \"@default\": { token: \"@brackets\" }\n                }\n              }\n            }\n          }\n        ],\n        [/\\$\\{/, { token: \"delimiter.invalid\" }]\n      ],\n      [s(\"blank_and_expression_comment_token__id__\")]: [\n        [/(?:@blank)+/, { token: \"\" }],\n        [/[<\\[][#!]--/, { token: \"comment\", next: s(\"@expressionComment__id__\") }]\n      ],\n      [s(\"directive_end_token__id__\")]: [\n        [\n          />/,\n          ts.id === \"bracket\" ? { token: \"operators\" } : { token: \"@brackets.directive\", next: \"@popall\" }\n        ],\n        [\n          r(/(\\/)(@close__id__)/),\n          [{ token: \"delimiter.directive\" }, { token: \"@brackets.directive\", next: \"@popall\" }]\n        ]\n      ],\n      [s(\"greater_operators_token__id__\")]: [\n        [/>/, { token: \"operators\" }],\n        [/>=/, { token: \"operators\" }]\n      ],\n      [s(\"no_space_expression_end_token__id__\")]: [\n        [/(?:@blank)+/, { token: \"\", switchTo: s(\"@fmExpression__id__.directive\") }]\n      ],\n      [s(\"unified_call_token__id__\")]: [\n        [\n          /(@id)((?:@blank)+)/,\n          [{ token: \"tag\" }, { token: \"\", next: s(\"@fmExpression__id__.directive\") }]\n        ],\n        [\n          r(/(@id)(\\/?)(@close__id__)/),\n          [\n            { token: \"tag\" },\n            { token: \"delimiter.directive\" },\n            { token: \"@brackets.directive\", next: \"@popall\" }\n          ]\n        ],\n        [/./, { token: \"@rematch\", next: s(\"@noSpaceExpression__id__\") }]\n      ],\n      [s(\"no_parse_token__id__\")]: [\n        [\n          r(/(@open__id__)(\\/#?)([a-zA-Z]+)((?:@blank)*)(@close__id__)/),\n          {\n            cases: {\n              \"$S2==$3\": [\n                { token: \"@brackets.directive\" },\n                { token: \"delimiter.directive\" },\n                { token: \"tag\" },\n                { token: \"\" },\n                { token: \"@brackets.directive\", next: \"@popall\" }\n              ],\n              \"$S2==comment\": [\n                { token: \"comment\" },\n                { token: \"comment\" },\n                { token: \"comment\" },\n                { token: \"comment\" },\n                { token: \"comment\" }\n              ],\n              \"@default\": [\n                { token: \"source\" },\n                { token: \"source\" },\n                { token: \"source\" },\n                { token: \"source\" },\n                { token: \"source\" }\n              ]\n            }\n          }\n        ],\n        [\n          /[^<\\[\\-]+|[<\\[\\-]/,\n          {\n            cases: {\n              \"$S2==comment\": { token: \"comment\" },\n              \"@default\": { token: \"source\" }\n            }\n          }\n        ]\n      ],\n      [s(\"expression_comment_token__id__\")]: [\n        [\n          /--[>\\]]/,\n          {\n            token: \"comment\",\n            next: \"@pop\"\n          }\n        ],\n        [/[^\\->\\]]+|[>\\]\\-]/, { token: \"comment\" }]\n      ],\n      [s(\"terse_comment_token__id__\")]: [\n        [r(/--(?:@close__id__)/), { token: \"comment\", next: \"@popall\" }],\n        [/[^<\\[\\-]+|[<\\[\\-]/, { token: \"comment\" }]\n      ]\n    }\n  };\n}\nfunction createMonarchLanguageAuto(is) {\n  const angle = createMonarchLanguage(TagSyntaxAngle, is);\n  const bracket = createMonarchLanguage(TagSyntaxBracket, is);\n  const auto = createMonarchLanguage(TagSyntaxAuto, is);\n  return {\n    ...angle,\n    ...bracket,\n    ...auto,\n    unicode: true,\n    includeLF: false,\n    start: `default_auto_${is.id}`,\n    ignoreCase: false,\n    defaultToken: \"invalid\",\n    tokenPostfix: `.freemarker2`,\n    brackets: [\n      { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n      { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n      { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n      { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n    ],\n    tokenizer: {\n      ...angle.tokenizer,\n      ...bracket.tokenizer,\n      ...auto.tokenizer\n    }\n  };\n}\nvar TagAngleInterpolationDollar = {\n  conf: createLangConfiguration(TagSyntaxAngle),\n  language: createMonarchLanguage(TagSyntaxAngle, InterpolationSyntaxDollar)\n};\nvar TagBracketInterpolationDollar = {\n  conf: createLangConfiguration(TagSyntaxBracket),\n  language: createMonarchLanguage(TagSyntaxBracket, InterpolationSyntaxDollar)\n};\nvar TagAngleInterpolationBracket = {\n  conf: createLangConfiguration(TagSyntaxAngle),\n  language: createMonarchLanguage(TagSyntaxAngle, InterpolationSyntaxBracket)\n};\nvar TagBracketInterpolationBracket = {\n  conf: createLangConfiguration(TagSyntaxBracket),\n  language: createMonarchLanguage(TagSyntaxBracket, InterpolationSyntaxBracket)\n};\nvar TagAutoInterpolationDollar = {\n  conf: createLangConfigurationAuto(),\n  language: createMonarchLanguageAuto(InterpolationSyntaxDollar)\n};\nvar TagAutoInterpolationBracket = {\n  conf: createLangConfigurationAuto(),\n  language: createMonarchLanguageAuto(InterpolationSyntaxBracket)\n};\nexport {\n  TagAngleInterpolationBracket,\n  TagAngleInterpolationDollar,\n  TagAutoInterpolationBracket,\n  TagAutoInterpolationDollar,\n  TagBracketInterpolationBracket,\n  TagBracketInterpolationDollar\n};\n"],"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__reExport","target","mod","secondTarget","monaco_editor_core_exports","EMPTY_ELEMENTS","BLOCK_ELEMENTS","TagSyntaxAngle","close","id","open","TagSyntaxBracket","TagSyntaxAuto","InterpolationSyntaxDollar","open1","open2","InterpolationSyntaxBracket","createLangConfiguration","ts","brackets","comments","blockComment","autoCloseBefore","autoClosingPairs","notIn","surroundingPairs","folding","markers","start","RegExp","join","end","onEnterRules","beforeText","afterText","action","indentAction","languages","IndentAction","IndentOutdent","Indent","createLangConfigurationAuto","createMonarchLanguage","is","s","name","replace","r","regexp","source","flags","unicode","includeLF","ignoreCase","defaultToken","tokenPostfix","token","blank","keywords","directiveStartCloseTag1","directiveStartCloseTag2","directiveStartBlank","directiveEndCloseTag1","escapedChar","asciiDigit","integer","nonEscapedIdStartChar","escapedIdChar","idStartChar","specialHashKeys","namedSymbols","arrows","delimiters","stringOperators","noParseTags","tokenizer","include","cases","switchTo","next","createMonarchLanguageAuto","angle","bracket","auto","TagAngleInterpolationDollar","conf","language","TagBracketInterpolationDollar","TagAngleInterpolationBracket","TagBracketInterpolationBracket","TagAutoInterpolationDollar","TagAutoInterpolationBracket"],"sourceRoot":""}
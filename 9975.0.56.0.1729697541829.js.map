{"version":3,"file":"9975.0.56.0.1729697541829.js","mappings":"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","sources":["webpack:///../../node_modules/monaco-editor/esm/vs/basic-languages/elixir/elixir.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.44.0(3e047efd345ff102c8c61b5398fb30845aaac166)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/elixir/elixir.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' }\n  ],\n  autoClosingPairs: [\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] },\n    { open: '\"', close: '\"', notIn: [\"comment\"] },\n    { open: '\"\"\"', close: '\"\"\"' },\n    { open: \"`\", close: \"`\", notIn: [\"string\", \"comment\"] },\n    { open: \"(\", close: \")\" },\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"<<\", close: \">>\" }\n  ],\n  indentationRules: {\n    increaseIndentPattern: /^\\s*(after|else|catch|rescue|fn|[^#]*(do|<\\-|\\->|\\{|\\[|\\=))\\s*$/,\n    decreaseIndentPattern: /^\\s*((\\}|\\])\\s*$|(after|else|catch|rescue|end)\\b)/\n  }\n};\nvar language = {\n  defaultToken: \"source\",\n  tokenPostfix: \".elixir\",\n  brackets: [\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"<<\", close: \">>\", token: \"delimiter.angle.special\" }\n  ],\n  declarationKeywords: [\n    \"def\",\n    \"defp\",\n    \"defn\",\n    \"defnp\",\n    \"defguard\",\n    \"defguardp\",\n    \"defmacro\",\n    \"defmacrop\",\n    \"defdelegate\",\n    \"defcallback\",\n    \"defmacrocallback\",\n    \"defmodule\",\n    \"defprotocol\",\n    \"defexception\",\n    \"defimpl\",\n    \"defstruct\"\n  ],\n  operatorKeywords: [\"and\", \"in\", \"not\", \"or\", \"when\"],\n  namespaceKeywords: [\"alias\", \"import\", \"require\", \"use\"],\n  otherKeywords: [\n    \"after\",\n    \"case\",\n    \"catch\",\n    \"cond\",\n    \"do\",\n    \"else\",\n    \"end\",\n    \"fn\",\n    \"for\",\n    \"if\",\n    \"quote\",\n    \"raise\",\n    \"receive\",\n    \"rescue\",\n    \"super\",\n    \"throw\",\n    \"try\",\n    \"unless\",\n    \"unquote_splicing\",\n    \"unquote\",\n    \"with\"\n  ],\n  constants: [\"true\", \"false\", \"nil\"],\n  nameBuiltin: [\"__MODULE__\", \"__DIR__\", \"__ENV__\", \"__CALLER__\", \"__STACKTRACE__\"],\n  operator: /-[->]?|!={0,2}|\\*{1,2}|\\/|\\\\\\\\|&{1,3}|\\.\\.?|\\^(?:\\^\\^)?|\\+\\+?|<(?:-|<<|=|>|\\|>|~>?)?|=~|={1,3}|>(?:=|>>)?|\\|~>|\\|>|\\|{1,3}|~>>?|~~~|::/,\n  variableName: /[a-z_][a-zA-Z0-9_]*[?!]?/,\n  atomName: /[a-zA-Z_][a-zA-Z0-9_@]*[?!]?|@specialAtomName|@operator/,\n  specialAtomName: /\\.\\.\\.|<<>>|%\\{\\}|%|\\{\\}/,\n  aliasPart: /[A-Z][a-zA-Z0-9_]*/,\n  moduleName: /@aliasPart(?:\\.@aliasPart)*/,\n  sigilSymmetricDelimiter: /\"\"\"|'''|\"|'|\\/|\\|/,\n  sigilStartDelimiter: /@sigilSymmetricDelimiter|<|\\{|\\[|\\(/,\n  sigilEndDelimiter: /@sigilSymmetricDelimiter|>|\\}|\\]|\\)/,\n  sigilModifiers: /[a-zA-Z0-9]*/,\n  decimal: /\\d(?:_?\\d)*/,\n  hex: /[0-9a-fA-F](_?[0-9a-fA-F])*/,\n  octal: /[0-7](_?[0-7])*/,\n  binary: /[01](_?[01])*/,\n  escape: /\\\\u[0-9a-fA-F]{4}|\\\\x[0-9a-fA-F]{2}|\\\\./,\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      { include: \"@comments\" },\n      { include: \"@keywordsShorthand\" },\n      { include: \"@numbers\" },\n      { include: \"@identifiers\" },\n      { include: \"@strings\" },\n      { include: \"@atoms\" },\n      { include: \"@sigils\" },\n      { include: \"@attributes\" },\n      { include: \"@symbols\" }\n    ],\n    whitespace: [[/\\s+/, \"white\"]],\n    comments: [[/(#)(.*)/, [\"comment.punctuation\", \"comment\"]]],\n    keywordsShorthand: [\n      [/(@atomName)(:)(\\s+)/, [\"constant\", \"constant.punctuation\", \"white\"]],\n      [\n        /\"(?=([^\"]|#\\{.*?\\}|\\\\\")*\":)/,\n        { token: \"constant.delimiter\", next: \"@doubleQuotedStringKeyword\" }\n      ],\n      [\n        /'(?=([^']|#\\{.*?\\}|\\\\')*':)/,\n        { token: \"constant.delimiter\", next: \"@singleQuotedStringKeyword\" }\n      ]\n    ],\n    doubleQuotedStringKeyword: [\n      [/\":/, { token: \"constant.delimiter\", next: \"@pop\" }],\n      { include: \"@stringConstantContentInterpol\" }\n    ],\n    singleQuotedStringKeyword: [\n      [/':/, { token: \"constant.delimiter\", next: \"@pop\" }],\n      { include: \"@stringConstantContentInterpol\" }\n    ],\n    numbers: [\n      [/0b@binary/, \"number.binary\"],\n      [/0o@octal/, \"number.octal\"],\n      [/0x@hex/, \"number.hex\"],\n      [/@decimal\\.@decimal([eE]-?@decimal)?/, \"number.float\"],\n      [/@decimal/, \"number\"]\n    ],\n    identifiers: [\n      [\n        /\\b(defp?|defnp?|defmacrop?|defguardp?|defdelegate)(\\s+)(@variableName)(?!\\s+@operator)/,\n        [\n          \"keyword.declaration\",\n          \"white\",\n          {\n            cases: {\n              unquote: \"keyword\",\n              \"@default\": \"function\"\n            }\n          }\n        ]\n      ],\n      [\n        /(@variableName)(?=\\s*\\.?\\s*\\()/,\n        {\n          cases: {\n            \"@declarationKeywords\": \"keyword.declaration\",\n            \"@namespaceKeywords\": \"keyword\",\n            \"@otherKeywords\": \"keyword\",\n            \"@default\": \"function.call\"\n          }\n        }\n      ],\n      [\n        /(@moduleName)(\\s*)(\\.)(\\s*)(@variableName)/,\n        [\"type.identifier\", \"white\", \"operator\", \"white\", \"function.call\"]\n      ],\n      [\n        /(:)(@atomName)(\\s*)(\\.)(\\s*)(@variableName)/,\n        [\"constant.punctuation\", \"constant\", \"white\", \"operator\", \"white\", \"function.call\"]\n      ],\n      [\n        /(\\|>)(\\s*)(@variableName)/,\n        [\n          \"operator\",\n          \"white\",\n          {\n            cases: {\n              \"@otherKeywords\": \"keyword\",\n              \"@default\": \"function.call\"\n            }\n          }\n        ]\n      ],\n      [\n        /(&)(\\s*)(@variableName)/,\n        [\"operator\", \"white\", \"function.call\"]\n      ],\n      [\n        /@variableName/,\n        {\n          cases: {\n            \"@declarationKeywords\": \"keyword.declaration\",\n            \"@operatorKeywords\": \"keyword.operator\",\n            \"@namespaceKeywords\": \"keyword\",\n            \"@otherKeywords\": \"keyword\",\n            \"@constants\": \"constant.language\",\n            \"@nameBuiltin\": \"variable.language\",\n            \"_.*\": \"comment.unused\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [/@moduleName/, \"type.identifier\"]\n    ],\n    strings: [\n      [/\"\"\"/, { token: \"string.delimiter\", next: \"@doubleQuotedHeredoc\" }],\n      [/'''/, { token: \"string.delimiter\", next: \"@singleQuotedHeredoc\" }],\n      [/\"/, { token: \"string.delimiter\", next: \"@doubleQuotedString\" }],\n      [/'/, { token: \"string.delimiter\", next: \"@singleQuotedString\" }]\n    ],\n    doubleQuotedHeredoc: [\n      [/\"\"\"/, { token: \"string.delimiter\", next: \"@pop\" }],\n      { include: \"@stringContentInterpol\" }\n    ],\n    singleQuotedHeredoc: [\n      [/'''/, { token: \"string.delimiter\", next: \"@pop\" }],\n      { include: \"@stringContentInterpol\" }\n    ],\n    doubleQuotedString: [\n      [/\"/, { token: \"string.delimiter\", next: \"@pop\" }],\n      { include: \"@stringContentInterpol\" }\n    ],\n    singleQuotedString: [\n      [/'/, { token: \"string.delimiter\", next: \"@pop\" }],\n      { include: \"@stringContentInterpol\" }\n    ],\n    atoms: [\n      [/(:)(@atomName)/, [\"constant.punctuation\", \"constant\"]],\n      [/:\"/, { token: \"constant.delimiter\", next: \"@doubleQuotedStringAtom\" }],\n      [/:'/, { token: \"constant.delimiter\", next: \"@singleQuotedStringAtom\" }]\n    ],\n    doubleQuotedStringAtom: [\n      [/\"/, { token: \"constant.delimiter\", next: \"@pop\" }],\n      { include: \"@stringConstantContentInterpol\" }\n    ],\n    singleQuotedStringAtom: [\n      [/'/, { token: \"constant.delimiter\", next: \"@pop\" }],\n      { include: \"@stringConstantContentInterpol\" }\n    ],\n    sigils: [\n      [/~[a-z]@sigilStartDelimiter/, { token: \"@rematch\", next: \"@sigil.interpol\" }],\n      [/~([A-Z]+)@sigilStartDelimiter/, { token: \"@rematch\", next: \"@sigil.noInterpol\" }]\n    ],\n    sigil: [\n      [/~([a-z]|[A-Z]+)\\{/, { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.{.}\" }],\n      [/~([a-z]|[A-Z]+)\\[/, { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.[.]\" }],\n      [/~([a-z]|[A-Z]+)\\(/, { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.(.)\" }],\n      [/~([a-z]|[A-Z]+)\\</, { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.<.>\" }],\n      [\n        /~([a-z]|[A-Z]+)(@sigilSymmetricDelimiter)/,\n        { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.$2.$2\" }\n      ]\n    ],\n    \"sigilStart.interpol.s\": [\n      [\n        /~s@sigilStartDelimiter/,\n        {\n          token: \"string.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.interpol.s\": [\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"string.delimiter\", next: \"@pop\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      { include: \"@stringContentInterpol\" }\n    ],\n    \"sigilStart.noInterpol.S\": [\n      [\n        /~S@sigilStartDelimiter/,\n        {\n          token: \"string.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.noInterpol.S\": [\n      [/(^|[^\\\\])\\\\@sigilEndDelimiter/, \"string\"],\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"string.delimiter\", next: \"@pop\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      { include: \"@stringContent\" }\n    ],\n    \"sigilStart.interpol.r\": [\n      [\n        /~r@sigilStartDelimiter/,\n        {\n          token: \"regexp.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.interpol.r\": [\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"regexp.delimiter\", next: \"@pop\" },\n            \"@default\": \"regexp\"\n          }\n        }\n      ],\n      { include: \"@regexpContentInterpol\" }\n    ],\n    \"sigilStart.noInterpol.R\": [\n      [\n        /~R@sigilStartDelimiter/,\n        {\n          token: \"regexp.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.noInterpol.R\": [\n      [/(^|[^\\\\])\\\\@sigilEndDelimiter/, \"regexp\"],\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"regexp.delimiter\", next: \"@pop\" },\n            \"@default\": \"regexp\"\n          }\n        }\n      ],\n      { include: \"@regexpContent\" }\n    ],\n    \"sigilStart.interpol\": [\n      [\n        /~([a-z]|[A-Z]+)@sigilStartDelimiter/,\n        {\n          token: \"sigil.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.interpol\": [\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"sigil.delimiter\", next: \"@pop\" },\n            \"@default\": \"sigil\"\n          }\n        }\n      ],\n      { include: \"@sigilContentInterpol\" }\n    ],\n    \"sigilStart.noInterpol\": [\n      [\n        /~([a-z]|[A-Z]+)@sigilStartDelimiter/,\n        {\n          token: \"sigil.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.noInterpol\": [\n      [/(^|[^\\\\])\\\\@sigilEndDelimiter/, \"sigil\"],\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"sigil.delimiter\", next: \"@pop\" },\n            \"@default\": \"sigil\"\n          }\n        }\n      ],\n      { include: \"@sigilContent\" }\n    ],\n    attributes: [\n      [\n        /\\@(module|type)?doc (~[sS])?\"\"\"/,\n        {\n          token: \"comment.block.documentation\",\n          next: \"@doubleQuotedHeredocDocstring\"\n        }\n      ],\n      [\n        /\\@(module|type)?doc (~[sS])?'''/,\n        {\n          token: \"comment.block.documentation\",\n          next: \"@singleQuotedHeredocDocstring\"\n        }\n      ],\n      [\n        /\\@(module|type)?doc (~[sS])?\"/,\n        {\n          token: \"comment.block.documentation\",\n          next: \"@doubleQuotedStringDocstring\"\n        }\n      ],\n      [\n        /\\@(module|type)?doc (~[sS])?'/,\n        {\n          token: \"comment.block.documentation\",\n          next: \"@singleQuotedStringDocstring\"\n        }\n      ],\n      [/\\@(module|type)?doc false/, \"comment.block.documentation\"],\n      [/\\@(@variableName)/, \"variable\"]\n    ],\n    doubleQuotedHeredocDocstring: [\n      [/\"\"\"/, { token: \"comment.block.documentation\", next: \"@pop\" }],\n      { include: \"@docstringContent\" }\n    ],\n    singleQuotedHeredocDocstring: [\n      [/'''/, { token: \"comment.block.documentation\", next: \"@pop\" }],\n      { include: \"@docstringContent\" }\n    ],\n    doubleQuotedStringDocstring: [\n      [/\"/, { token: \"comment.block.documentation\", next: \"@pop\" }],\n      { include: \"@docstringContent\" }\n    ],\n    singleQuotedStringDocstring: [\n      [/'/, { token: \"comment.block.documentation\", next: \"@pop\" }],\n      { include: \"@docstringContent\" }\n    ],\n    symbols: [\n      [/\\?(\\\\.|[^\\\\\\s])/, \"number.constant\"],\n      [/&\\d+/, \"operator\"],\n      [/<<<|>>>/, \"operator\"],\n      [/[()\\[\\]\\{\\}]|<<|>>/, \"@brackets\"],\n      [/\\.\\.\\./, \"identifier\"],\n      [/=>/, \"punctuation\"],\n      [/@operator/, \"operator\"],\n      [/[:;,.%]/, \"punctuation\"]\n    ],\n    stringContentInterpol: [\n      { include: \"@interpolation\" },\n      { include: \"@escapeChar\" },\n      { include: \"@stringContent\" }\n    ],\n    stringContent: [[/./, \"string\"]],\n    stringConstantContentInterpol: [\n      { include: \"@interpolation\" },\n      { include: \"@escapeChar\" },\n      { include: \"@stringConstantContent\" }\n    ],\n    stringConstantContent: [[/./, \"constant\"]],\n    regexpContentInterpol: [\n      { include: \"@interpolation\" },\n      { include: \"@escapeChar\" },\n      { include: \"@regexpContent\" }\n    ],\n    regexpContent: [\n      [/(\\s)(#)(\\s.*)$/, [\"white\", \"comment.punctuation\", \"comment\"]],\n      [/./, \"regexp\"]\n    ],\n    sigilContentInterpol: [\n      { include: \"@interpolation\" },\n      { include: \"@escapeChar\" },\n      { include: \"@sigilContent\" }\n    ],\n    sigilContent: [[/./, \"sigil\"]],\n    docstringContent: [[/./, \"comment.block.documentation\"]],\n    escapeChar: [[/@escape/, \"constant.character.escape\"]],\n    interpolation: [[/#{/, { token: \"delimiter.bracket.embed\", next: \"@interpolationContinue\" }]],\n    interpolationContinue: [\n      [/}/, { token: \"delimiter.bracket.embed\", next: \"@pop\" }],\n      { include: \"@root\" }\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","comments","lineComment","brackets","surroundingPairs","open","close","autoClosingPairs","notIn","indentationRules","increaseIndentPattern","decreaseIndentPattern","language","defaultToken","tokenPostfix","token","declarationKeywords","operatorKeywords","namespaceKeywords","otherKeywords","constants","nameBuiltin","operator","variableName","atomName","specialAtomName","aliasPart","moduleName","sigilSymmetricDelimiter","sigilStartDelimiter","sigilEndDelimiter","sigilModifiers","decimal","hex","octal","binary","escape","tokenizer","root","include","whitespace","keywordsShorthand","next","doubleQuotedStringKeyword","singleQuotedStringKeyword","numbers","identifiers","cases","unquote","strings","doubleQuotedHeredoc","singleQuotedHeredoc","doubleQuotedString","singleQuotedString","atoms","doubleQuotedStringAtom","singleQuotedStringAtom","sigils","sigil","switchTo","attributes","doubleQuotedHeredocDocstring","singleQuotedHeredocDocstring","doubleQuotedStringDocstring","singleQuotedStringDocstring","symbols","stringContentInterpol","stringContent","stringConstantContentInterpol","stringConstantContent","regexpContentInterpol","regexpContent","sigilContentInterpol","sigilContent","docstringContent","escapeChar","interpolation","interpolationContinue"],"sourceRoot":""}